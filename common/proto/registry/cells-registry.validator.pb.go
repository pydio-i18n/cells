// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cells-registry.proto

package registry

import (
	fmt "fmt"
	math "math"
	proto "google.golang.org/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SessionRequest) Validate() error {
	if this.Item != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Item); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Item", err)
		}
	}
	return nil
}
func (this *Item) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	if oneOfNester, ok := this.GetItem().(*Item_Generic); ok {
		if oneOfNester.Generic != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Generic); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Generic", err)
			}
		}
	}
	if oneOfNester, ok := this.GetItem().(*Item_Edge); ok {
		if oneOfNester.Edge != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Edge); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Edge", err)
			}
		}
	}
	if oneOfNester, ok := this.GetItem().(*Item_Server); ok {
		if oneOfNester.Server != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Server); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Server", err)
			}
		}
	}
	if oneOfNester, ok := this.GetItem().(*Item_Node); ok {
		if oneOfNester.Node != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Node); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Node", err)
			}
		}
	}
	if oneOfNester, ok := this.GetItem().(*Item_Service); ok {
		if oneOfNester.Service != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Service); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Service", err)
			}
		}
	}
	if oneOfNester, ok := this.GetItem().(*Item_Dao); ok {
		if oneOfNester.Dao != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.Dao); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Dao", err)
			}
		}
	}
	for _, item := range this.Adjacents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Adjacents", err)
			}
		}
	}
	return nil
}
func (this *ItemMap) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Node) Validate() error {
	return nil
}
func (this *Service) Validate() error {
	if this.Options != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Options); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Options", err)
		}
	}
	return nil
}
func (this *Server) Validate() error {
	return nil
}
func (this *Dao) Validate() error {
	return nil
}
func (this *Edge) Validate() error {
	return nil
}
func (this *Generic) Validate() error {
	return nil
}
func (this *Options) Validate() error {
	return nil
}
func (this *Result) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *EmptyResponse) Validate() error {
	return nil
}
func (this *StartRequest) Validate() error {
	if this.Item != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Item); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Item", err)
		}
	}
	return nil
}
func (this *StopRequest) Validate() error {
	if this.Item != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Item); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Item", err)
		}
	}
	return nil
}
func (this *RegisterRequest) Validate() error {
	return nil
}
func (this *GetRequest) Validate() error {
	if this.Options != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Options); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Options", err)
		}
	}
	return nil
}
func (this *GetResponse) Validate() error {
	if this.Item != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Item); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Item", err)
		}
	}
	return nil
}
func (this *ListRequest) Validate() error {
	if this.Options != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Options); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Options", err)
		}
	}
	if this.AdjacentsOptions != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.AdjacentsOptions); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("AdjacentsOptions", err)
		}
	}
	return nil
}
func (this *ListResponse) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *WatchRequest) Validate() error {
	if this.Options != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Options); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Options", err)
		}
	}
	return nil
}
func (this *NewLockerRequest) Validate() error {
	return nil
}
func (this *NewLockerResponse) Validate() error {
	return nil
}
func (this *Event) Validate() error {
	if this.Item != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Item); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Item", err)
		}
	}
	return nil
}
