// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cells-update.proto

package update

import (
	fmt "fmt"
	math "math"
	proto "google.golang.org/protobuf/proto"
	_ "github.com/pydio/cells/v4/common/proto/tree"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Package) Validate() error {
	return nil
}
func (this *ApplyUpdateRequest) Validate() error {
	return nil
}
func (this *ApplyUpdateResponse) Validate() error {
	return nil
}
func (this *UpdateRequest) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *UpdateResponse) Validate() error {
	for _, item := range this.AvailableBinaries {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("AvailableBinaries", err)
			}
		}
	}
	return nil
}
func (this *PublishPackageRequest) Validate() error {
	if this.Package != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Package); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Package", err)
		}
	}
	if this.Node != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Node); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Node", err)
		}
	}
	return nil
}
func (this *PublishPackageResponse) Validate() error {
	if this.Package != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Package); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Package", err)
		}
	}
	return nil
}
func (this *ListPackagesRequest) Validate() error {
	return nil
}
func (this *ListPackagesResponse) Validate() error {
	for _, item := range this.Packages {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Packages", err)
			}
		}
	}
	return nil
}
func (this *DeletePackageRequest) Validate() error {
	return nil
}
func (this *DeletePackageResponse) Validate() error {
	return nil
}
