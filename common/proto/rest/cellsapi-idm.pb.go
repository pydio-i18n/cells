// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: cellsapi-idm.proto

package rest

import (
	idm "github.com/pydio/cells/v5/common/proto/idm"
	service "github.com/pydio/cells/v5/common/proto/service"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourcePolicyQuery_QueryType int32

const (
	ResourcePolicyQuery_CONTEXT ResourcePolicyQuery_QueryType = 0
	ResourcePolicyQuery_ANY     ResourcePolicyQuery_QueryType = 1
	ResourcePolicyQuery_NONE    ResourcePolicyQuery_QueryType = 2
	ResourcePolicyQuery_USER    ResourcePolicyQuery_QueryType = 3
)

// Enum value maps for ResourcePolicyQuery_QueryType.
var (
	ResourcePolicyQuery_QueryType_name = map[int32]string{
		0: "CONTEXT",
		1: "ANY",
		2: "NONE",
		3: "USER",
	}
	ResourcePolicyQuery_QueryType_value = map[string]int32{
		"CONTEXT": 0,
		"ANY":     1,
		"NONE":    2,
		"USER":    3,
	}
)

func (x ResourcePolicyQuery_QueryType) Enum() *ResourcePolicyQuery_QueryType {
	p := new(ResourcePolicyQuery_QueryType)
	*p = x
	return p
}

func (x ResourcePolicyQuery_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourcePolicyQuery_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_cellsapi_idm_proto_enumTypes[0].Descriptor()
}

func (ResourcePolicyQuery_QueryType) Type() protoreflect.EnumType {
	return &file_cellsapi_idm_proto_enumTypes[0]
}

func (x ResourcePolicyQuery_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourcePolicyQuery_QueryType.Descriptor instead.
func (ResourcePolicyQuery_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{0, 0}
}

// Generic Query for limiting results based on resource permissions
type ResourcePolicyQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type can be CONTEXT, ANY, NODE or USER. This restricts the may filter out the result set based on their policies
	Type ResourcePolicyQuery_QueryType `protobuf:"varint,1,opt,name=Type,proto3,enum=rest.ResourcePolicyQuery_QueryType" json:"Type,omitempty"`
	// Limit to one given user ID
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ResourcePolicyQuery) Reset() {
	*x = ResourcePolicyQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePolicyQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePolicyQuery) ProtoMessage() {}

func (x *ResourcePolicyQuery) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePolicyQuery.ProtoReflect.Descriptor instead.
func (*ResourcePolicyQuery) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{0}
}

func (x *ResourcePolicyQuery) GetType() ResourcePolicyQuery_QueryType {
	if x != nil {
		return x.Type
	}
	return ResourcePolicyQuery_CONTEXT
}

func (x *ResourcePolicyQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Roles Search
type SearchRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of atomic queries that will be combined using the Operation type (AND / OR)
	Queries []*idm.RoleSingleQuery `protobuf:"bytes,1,rep,name=Queries,proto3" json:"Queries,omitempty"`
	// Policies query for specifying the search context
	ResourcePolicyQuery *ResourcePolicyQuery `protobuf:"bytes,7,opt,name=ResourcePolicyQuery,proto3" json:"ResourcePolicyQuery,omitempty"`
	// Start listing at a given position
	Offset int64 `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	// Limit number of results
	Limit int64 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	// Group results by
	GroupBy int32 `protobuf:"varint,4,opt,name=GroupBy,proto3" json:"GroupBy,omitempty"`
	// Return counts only, no actual results
	CountOnly bool `protobuf:"varint,5,opt,name=CountOnly,proto3" json:"CountOnly,omitempty"`
	// Combine Single Queries with AND or OR
	Operation service.OperationType `protobuf:"varint,6,opt,name=Operation,proto3,enum=service.OperationType" json:"Operation,omitempty"`
}

func (x *SearchRoleRequest) Reset() {
	*x = SearchRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoleRequest) ProtoMessage() {}

func (x *SearchRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoleRequest.ProtoReflect.Descriptor instead.
func (*SearchRoleRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{1}
}

func (x *SearchRoleRequest) GetQueries() []*idm.RoleSingleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *SearchRoleRequest) GetResourcePolicyQuery() *ResourcePolicyQuery {
	if x != nil {
		return x.ResourcePolicyQuery
	}
	return nil
}

func (x *SearchRoleRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchRoleRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRoleRequest) GetGroupBy() int32 {
	if x != nil {
		return x.GroupBy
	}
	return 0
}

func (x *SearchRoleRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *SearchRoleRequest) GetOperation() service.OperationType {
	if x != nil {
		return x.Operation
	}
	return service.OperationType(0)
}

// Roles Collection
type RolesCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of Roles
	Roles []*idm.Role `protobuf:"bytes,1,rep,name=Roles,proto3" json:"Roles,omitempty"`
	// Total in DB
	Total int32 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *RolesCollection) Reset() {
	*x = RolesCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolesCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesCollection) ProtoMessage() {}

func (x *RolesCollection) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesCollection.ProtoReflect.Descriptor instead.
func (*RolesCollection) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{2}
}

func (x *RolesCollection) GetRoles() []*idm.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RolesCollection) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Users Search
type SearchUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Atomic queries that will be combined using the Operation Type (AND or OR)
	Queries []*idm.UserSingleQuery `protobuf:"bytes,1,rep,name=Queries,proto3" json:"Queries,omitempty"`
	// Policies queries to filter the search context
	ResourcePolicyQuery *ResourcePolicyQuery `protobuf:"bytes,7,opt,name=ResourcePolicyQuery,proto3" json:"ResourcePolicyQuery,omitempty"`
	// Start listing at a given position
	Offset int64 `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	// Limit number of results
	Limit int64 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	// Group by ...
	GroupBy int32 `protobuf:"varint,4,opt,name=GroupBy,proto3" json:"GroupBy,omitempty"`
	// Return counts only, no actual results
	CountOnly bool `protobuf:"varint,5,opt,name=CountOnly,proto3" json:"CountOnly,omitempty"`
	// Combine single queries with AND or OR logic
	Operation service.OperationType `protobuf:"varint,6,opt,name=Operation,proto3,enum=service.OperationType" json:"Operation,omitempty"`
}

func (x *SearchUserRequest) Reset() {
	*x = SearchUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserRequest) ProtoMessage() {}

func (x *SearchUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserRequest.ProtoReflect.Descriptor instead.
func (*SearchUserRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{3}
}

func (x *SearchUserRequest) GetQueries() []*idm.UserSingleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *SearchUserRequest) GetResourcePolicyQuery() *ResourcePolicyQuery {
	if x != nil {
		return x.ResourcePolicyQuery
	}
	return nil
}

func (x *SearchUserRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchUserRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchUserRequest) GetGroupBy() int32 {
	if x != nil {
		return x.GroupBy
	}
	return 0
}

func (x *SearchUserRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *SearchUserRequest) GetOperation() service.OperationType {
	if x != nil {
		return x.Operation
	}
	return service.OperationType(0)
}

// Users Collection
type UsersCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of Groups
	Groups []*idm.User `protobuf:"bytes,1,rep,name=Groups,proto3" json:"Groups,omitempty"`
	// List of Users
	Users []*idm.User `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	// Total number of results
	Total int32 `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *UsersCollection) Reset() {
	*x = UsersCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersCollection) ProtoMessage() {}

func (x *UsersCollection) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersCollection.ProtoReflect.Descriptor instead.
func (*UsersCollection) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{4}
}

func (x *UsersCollection) GetGroups() []*idm.User {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *UsersCollection) GetUsers() []*idm.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UsersCollection) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Binding Response
type BindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *BindResponse) Reset() {
	*x = BindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindResponse) ProtoMessage() {}

func (x *BindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindResponse.ProtoReflect.Descriptor instead.
func (*BindResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{5}
}

func (x *BindResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Rest request for ACL's
type SearchACLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Atomic queries that will be combined using the OperationType (AND or OR)
	Queries []*idm.ACLSingleQuery `protobuf:"bytes,1,rep,name=Queries,proto3" json:"Queries,omitempty"`
	// Start listing at a given position
	Offset int64 `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	// Limit the number of results
	Limit int64 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	// Group results
	GroupBy int32 `protobuf:"varint,4,opt,name=GroupBy,proto3" json:"GroupBy,omitempty"`
	// Return counts only, no actual results
	CountOnly bool `protobuf:"varint,5,opt,name=CountOnly,proto3" json:"CountOnly,omitempty"`
	// Single queries will be combined using this operation AND or OR logic
	Operation service.OperationType `protobuf:"varint,6,opt,name=Operation,proto3,enum=service.OperationType" json:"Operation,omitempty"`
}

func (x *SearchACLRequest) Reset() {
	*x = SearchACLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchACLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchACLRequest) ProtoMessage() {}

func (x *SearchACLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchACLRequest.ProtoReflect.Descriptor instead.
func (*SearchACLRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{6}
}

func (x *SearchACLRequest) GetQueries() []*idm.ACLSingleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *SearchACLRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchACLRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchACLRequest) GetGroupBy() int32 {
	if x != nil {
		return x.GroupBy
	}
	return 0
}

func (x *SearchACLRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *SearchACLRequest) GetOperation() service.OperationType {
	if x != nil {
		return x.Operation
	}
	return service.OperationType(0)
}

// Response for search request
type ACLCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of ACLs
	ACLs []*idm.ACL `protobuf:"bytes,1,rep,name=ACLs,proto3" json:"ACLs,omitempty"`
	// Total number of results
	Total int32 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *ACLCollection) Reset() {
	*x = ACLCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLCollection) ProtoMessage() {}

func (x *ACLCollection) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLCollection.ProtoReflect.Descriptor instead.
func (*ACLCollection) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{7}
}

func (x *ACLCollection) GetACLs() []*idm.ACL {
	if x != nil {
		return x.ACLs
	}
	return nil
}

func (x *ACLCollection) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Rest request for searching workspaces
type SearchWorkspaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Atomic queries that will be combined using the OperationType (AND or OR)
	Queries []*idm.WorkspaceSingleQuery `protobuf:"bytes,1,rep,name=Queries,proto3" json:"Queries,omitempty"`
	// Policies queries to filter the search context
	ResourcePolicyQuery *ResourcePolicyQuery `protobuf:"bytes,7,opt,name=ResourcePolicyQuery,proto3" json:"ResourcePolicyQuery,omitempty"`
	// Start listing at a given position
	Offset int64 `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	// Limit the number of results
	Limit int64 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	// Group results
	GroupBy int32 `protobuf:"varint,4,opt,name=GroupBy,proto3" json:"GroupBy,omitempty"`
	// Return counts only, no actual results
	CountOnly bool `protobuf:"varint,5,opt,name=CountOnly,proto3" json:"CountOnly,omitempty"`
	// Single queries will be combined using this operation AND or OR logic
	Operation service.OperationType `protobuf:"varint,6,opt,name=Operation,proto3,enum=service.OperationType" json:"Operation,omitempty"`
}

func (x *SearchWorkspaceRequest) Reset() {
	*x = SearchWorkspaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchWorkspaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWorkspaceRequest) ProtoMessage() {}

func (x *SearchWorkspaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWorkspaceRequest.ProtoReflect.Descriptor instead.
func (*SearchWorkspaceRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{8}
}

func (x *SearchWorkspaceRequest) GetQueries() []*idm.WorkspaceSingleQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *SearchWorkspaceRequest) GetResourcePolicyQuery() *ResourcePolicyQuery {
	if x != nil {
		return x.ResourcePolicyQuery
	}
	return nil
}

func (x *SearchWorkspaceRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchWorkspaceRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchWorkspaceRequest) GetGroupBy() int32 {
	if x != nil {
		return x.GroupBy
	}
	return 0
}

func (x *SearchWorkspaceRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *SearchWorkspaceRequest) GetOperation() service.OperationType {
	if x != nil {
		return x.Operation
	}
	return service.OperationType(0)
}

// Rest response for workspace search
type WorkspaceCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of workspaces
	Workspaces []*idm.Workspace `protobuf:"bytes,1,rep,name=Workspaces,proto3" json:"Workspaces,omitempty"`
	// Total number of results
	Total int32 `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *WorkspaceCollection) Reset() {
	*x = WorkspaceCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceCollection) ProtoMessage() {}

func (x *WorkspaceCollection) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceCollection.ProtoReflect.Descriptor instead.
func (*WorkspaceCollection) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{9}
}

func (x *WorkspaceCollection) GetWorkspaces() []*idm.Workspace {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

func (x *WorkspaceCollection) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Collection of UserMeta
type UserMetaCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadatas []*idm.UserMeta `protobuf:"bytes,1,rep,name=Metadatas,proto3" json:"Metadatas,omitempty"`
}

func (x *UserMetaCollection) Reset() {
	*x = UserMetaCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMetaCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetaCollection) ProtoMessage() {}

func (x *UserMetaCollection) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetaCollection.ProtoReflect.Descriptor instead.
func (*UserMetaCollection) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{10}
}

func (x *UserMetaCollection) GetMetadatas() []*idm.UserMeta {
	if x != nil {
		return x.Metadatas
	}
	return nil
}

// Collection of Meta Namespaces
type UserMetaNamespaceCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of user meta Namespaces
	Namespaces []*idm.UserMetaNamespace `protobuf:"bytes,1,rep,name=Namespaces,proto3" json:"Namespaces,omitempty"`
}

func (x *UserMetaNamespaceCollection) Reset() {
	*x = UserMetaNamespaceCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMetaNamespaceCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetaNamespaceCollection) ProtoMessage() {}

func (x *UserMetaNamespaceCollection) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetaNamespaceCollection.ProtoReflect.Descriptor instead.
func (*UserMetaNamespaceCollection) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{11}
}

func (x *UserMetaNamespaceCollection) GetNamespaces() []*idm.UserMetaNamespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type ListUserMetaTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List user meta tags for this namespace
	Namespace string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
}

func (x *ListUserMetaTagsRequest) Reset() {
	*x = ListUserMetaTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMetaTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMetaTagsRequest) ProtoMessage() {}

func (x *ListUserMetaTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMetaTagsRequest.ProtoReflect.Descriptor instead.
func (*ListUserMetaTagsRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{12}
}

func (x *ListUserMetaTagsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListUserMetaTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of existing tags values
	Tags []string `protobuf:"bytes,1,rep,name=Tags,proto3" json:"Tags,omitempty"`
}

func (x *ListUserMetaTagsResponse) Reset() {
	*x = ListUserMetaTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserMetaTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMetaTagsResponse) ProtoMessage() {}

func (x *ListUserMetaTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMetaTagsResponse.ProtoReflect.Descriptor instead.
func (*ListUserMetaTagsResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserMetaTagsResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PutUserMetaTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Add a tag value for this namespace
	Namespace string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	// New tag value
	Tag string `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"`
}

func (x *PutUserMetaTagRequest) Reset() {
	*x = PutUserMetaTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserMetaTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserMetaTagRequest) ProtoMessage() {}

func (x *PutUserMetaTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserMetaTagRequest.ProtoReflect.Descriptor instead.
func (*PutUserMetaTagRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{14}
}

func (x *PutUserMetaTagRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PutUserMetaTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type PutUserMetaTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation success
	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *PutUserMetaTagResponse) Reset() {
	*x = PutUserMetaTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserMetaTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserMetaTagResponse) ProtoMessage() {}

func (x *PutUserMetaTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserMetaTagResponse.ProtoReflect.Descriptor instead.
func (*PutUserMetaTagResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{15}
}

func (x *PutUserMetaTagResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteUserMetaTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Delete tags from this namespace
	Namespace string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	// Delete this tag
	Tags string `protobuf:"bytes,2,opt,name=Tags,proto3" json:"Tags,omitempty"`
}

func (x *DeleteUserMetaTagsRequest) Reset() {
	*x = DeleteUserMetaTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserMetaTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserMetaTagsRequest) ProtoMessage() {}

func (x *DeleteUserMetaTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserMetaTagsRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserMetaTagsRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteUserMetaTagsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteUserMetaTagsRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type DeleteUserMetaTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *DeleteUserMetaTagsResponse) Reset() {
	*x = DeleteUserMetaTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserMetaTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserMetaTagsResponse) ProtoMessage() {}

func (x *DeleteUserMetaTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserMetaTagsResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserMetaTagsResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteUserMetaTagsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UserBookmarksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All bool `protobuf:"varint,1,opt,name=All,proto3" json:"All,omitempty"`
}

func (x *UserBookmarksRequest) Reset() {
	*x = UserBookmarksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBookmarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBookmarksRequest) ProtoMessage() {}

func (x *UserBookmarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBookmarksRequest.ProtoReflect.Descriptor instead.
func (*UserBookmarksRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{18}
}

func (x *UserBookmarksRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

// Rest request for revocation. Token is not mandatory, if not set
// request will use current JWT token
type RevokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pass a specific Token ID to be revoked. If empty, request will use current JWT
	TokenId string `protobuf:"bytes,1,opt,name=TokenId,proto3" json:"TokenId,omitempty"`
}

func (x *RevokeRequest) Reset() {
	*x = RevokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRequest) ProtoMessage() {}

func (x *RevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRequest.ProtoReflect.Descriptor instead.
func (*RevokeRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{19}
}

func (x *RevokeRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

// Rest response
type RevokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *RevokeResponse) Reset() {
	*x = RevokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeResponse) ProtoMessage() {}

func (x *RevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeResponse.ProtoReflect.Descriptor instead.
func (*RevokeResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{20}
}

func (x *RevokeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResetPasswordTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start a ResetPassword workflow for this user
	UserLogin string `protobuf:"bytes,1,opt,name=UserLogin,proto3" json:"UserLogin,omitempty"`
	Create    bool   `protobuf:"varint,2,opt,name=Create,proto3" json:"Create,omitempty"`
}

func (x *ResetPasswordTokenRequest) Reset() {
	*x = ResetPasswordTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordTokenRequest) ProtoMessage() {}

func (x *ResetPasswordTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordTokenRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordTokenRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{21}
}

func (x *ResetPasswordTokenRequest) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *ResetPasswordTokenRequest) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

type ResetPasswordTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ResetPasswordTokenResponse) Reset() {
	*x = ResetPasswordTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordTokenResponse) ProtoMessage() {}

func (x *ResetPasswordTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordTokenResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordTokenResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{22}
}

func (x *ResetPasswordTokenResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResetPasswordTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token generated by the previous step of the reset password workflow
	ResetPasswordToken string `protobuf:"bytes,1,opt,name=ResetPasswordToken,proto3" json:"ResetPasswordToken,omitempty"`
	// User Login
	UserLogin string `protobuf:"bytes,2,opt,name=UserLogin,proto3" json:"UserLogin,omitempty"`
	// New password to be stored for this user
	NewPassword string `protobuf:"bytes,3,opt,name=NewPassword,proto3" json:"NewPassword,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{23}
}

func (x *ResetPasswordRequest) GetResetPasswordToken() string {
	if x != nil {
		return x.ResetPasswordToken
	}
	return ""
}

func (x *ResetPasswordRequest) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *ResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ResetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ResetPasswordResponse) Reset() {
	*x = ResetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordResponse) ProtoMessage() {}

func (x *ResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{24}
}

func (x *ResetPasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResetPasswordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DocumentAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	ClientID string `protobuf:"bytes,2,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *DocumentAccessTokenRequest) Reset() {
	*x = DocumentAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAccessTokenRequest) ProtoMessage() {}

func (x *DocumentAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*DocumentAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{25}
}

func (x *DocumentAccessTokenRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DocumentAccessTokenRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type DocumentAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
}

func (x *DocumentAccessTokenResponse) Reset() {
	*x = DocumentAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellsapi_idm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentAccessTokenResponse) ProtoMessage() {}

func (x *DocumentAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellsapi_idm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*DocumentAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_cellsapi_idm_proto_rawDescGZIP(), []int{26}
}

func (x *DocumentAccessTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

var File_cellsapi_idm_proto protoreflect.FileDescriptor

var file_cellsapi_idm_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x61, 0x70, 0x69, 0x2d, 0x69, 0x64, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x63, 0x65, 0x6c, 0x6c,
	0x73, 0x2d, 0x69, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9d, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x09, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03,
	0x22, 0xac, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x51,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x13,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x48, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xac, 0x02, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x06, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x69, 0x64,
	0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1f,
	0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x69, 0x64, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x28, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0xdd, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x41, 0x43, 0x4c, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x43, 0x0a, 0x0d, 0x41, 0x43, 0x4c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x04, 0x41, 0x43, 0x4c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x04, 0x41, 0x43, 0x4c, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb6, 0x02, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x51, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x13, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a,
	0x13, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x41, 0x0a, 0x12, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x55, 0x0a,
	0x1b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x2e, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x22, 0x47, 0x0a,
	0x15, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x22, 0x32, 0x0a, 0x16, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x28, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x41, 0x6c, 0x6c, 0x22, 0x29, 0x0a, 0x0d, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x19,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22,
	0x50, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x1a, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x1b, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79, 0x64, 0x69, 0x6f, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x73,
	0x2f, 0x76, 0x35, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cellsapi_idm_proto_rawDescOnce sync.Once
	file_cellsapi_idm_proto_rawDescData = file_cellsapi_idm_proto_rawDesc
)

func file_cellsapi_idm_proto_rawDescGZIP() []byte {
	file_cellsapi_idm_proto_rawDescOnce.Do(func() {
		file_cellsapi_idm_proto_rawDescData = protoimpl.X.CompressGZIP(file_cellsapi_idm_proto_rawDescData)
	})
	return file_cellsapi_idm_proto_rawDescData
}

var file_cellsapi_idm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cellsapi_idm_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_cellsapi_idm_proto_goTypes = []any{
	(ResourcePolicyQuery_QueryType)(0),  // 0: rest.ResourcePolicyQuery.QueryType
	(*ResourcePolicyQuery)(nil),         // 1: rest.ResourcePolicyQuery
	(*SearchRoleRequest)(nil),           // 2: rest.SearchRoleRequest
	(*RolesCollection)(nil),             // 3: rest.RolesCollection
	(*SearchUserRequest)(nil),           // 4: rest.SearchUserRequest
	(*UsersCollection)(nil),             // 5: rest.UsersCollection
	(*BindResponse)(nil),                // 6: rest.BindResponse
	(*SearchACLRequest)(nil),            // 7: rest.SearchACLRequest
	(*ACLCollection)(nil),               // 8: rest.ACLCollection
	(*SearchWorkspaceRequest)(nil),      // 9: rest.SearchWorkspaceRequest
	(*WorkspaceCollection)(nil),         // 10: rest.WorkspaceCollection
	(*UserMetaCollection)(nil),          // 11: rest.UserMetaCollection
	(*UserMetaNamespaceCollection)(nil), // 12: rest.UserMetaNamespaceCollection
	(*ListUserMetaTagsRequest)(nil),     // 13: rest.ListUserMetaTagsRequest
	(*ListUserMetaTagsResponse)(nil),    // 14: rest.ListUserMetaTagsResponse
	(*PutUserMetaTagRequest)(nil),       // 15: rest.PutUserMetaTagRequest
	(*PutUserMetaTagResponse)(nil),      // 16: rest.PutUserMetaTagResponse
	(*DeleteUserMetaTagsRequest)(nil),   // 17: rest.DeleteUserMetaTagsRequest
	(*DeleteUserMetaTagsResponse)(nil),  // 18: rest.DeleteUserMetaTagsResponse
	(*UserBookmarksRequest)(nil),        // 19: rest.UserBookmarksRequest
	(*RevokeRequest)(nil),               // 20: rest.RevokeRequest
	(*RevokeResponse)(nil),              // 21: rest.RevokeResponse
	(*ResetPasswordTokenRequest)(nil),   // 22: rest.ResetPasswordTokenRequest
	(*ResetPasswordTokenResponse)(nil),  // 23: rest.ResetPasswordTokenResponse
	(*ResetPasswordRequest)(nil),        // 24: rest.ResetPasswordRequest
	(*ResetPasswordResponse)(nil),       // 25: rest.ResetPasswordResponse
	(*DocumentAccessTokenRequest)(nil),  // 26: rest.DocumentAccessTokenRequest
	(*DocumentAccessTokenResponse)(nil), // 27: rest.DocumentAccessTokenResponse
	(*idm.RoleSingleQuery)(nil),         // 28: idm.RoleSingleQuery
	(service.OperationType)(0),          // 29: service.OperationType
	(*idm.Role)(nil),                    // 30: idm.Role
	(*idm.UserSingleQuery)(nil),         // 31: idm.UserSingleQuery
	(*idm.User)(nil),                    // 32: idm.User
	(*idm.ACLSingleQuery)(nil),          // 33: idm.ACLSingleQuery
	(*idm.ACL)(nil),                     // 34: idm.ACL
	(*idm.WorkspaceSingleQuery)(nil),    // 35: idm.WorkspaceSingleQuery
	(*idm.Workspace)(nil),               // 36: idm.Workspace
	(*idm.UserMeta)(nil),                // 37: idm.UserMeta
	(*idm.UserMetaNamespace)(nil),       // 38: idm.UserMetaNamespace
}
var file_cellsapi_idm_proto_depIdxs = []int32{
	0,  // 0: rest.ResourcePolicyQuery.Type:type_name -> rest.ResourcePolicyQuery.QueryType
	28, // 1: rest.SearchRoleRequest.Queries:type_name -> idm.RoleSingleQuery
	1,  // 2: rest.SearchRoleRequest.ResourcePolicyQuery:type_name -> rest.ResourcePolicyQuery
	29, // 3: rest.SearchRoleRequest.Operation:type_name -> service.OperationType
	30, // 4: rest.RolesCollection.Roles:type_name -> idm.Role
	31, // 5: rest.SearchUserRequest.Queries:type_name -> idm.UserSingleQuery
	1,  // 6: rest.SearchUserRequest.ResourcePolicyQuery:type_name -> rest.ResourcePolicyQuery
	29, // 7: rest.SearchUserRequest.Operation:type_name -> service.OperationType
	32, // 8: rest.UsersCollection.Groups:type_name -> idm.User
	32, // 9: rest.UsersCollection.Users:type_name -> idm.User
	33, // 10: rest.SearchACLRequest.Queries:type_name -> idm.ACLSingleQuery
	29, // 11: rest.SearchACLRequest.Operation:type_name -> service.OperationType
	34, // 12: rest.ACLCollection.ACLs:type_name -> idm.ACL
	35, // 13: rest.SearchWorkspaceRequest.Queries:type_name -> idm.WorkspaceSingleQuery
	1,  // 14: rest.SearchWorkspaceRequest.ResourcePolicyQuery:type_name -> rest.ResourcePolicyQuery
	29, // 15: rest.SearchWorkspaceRequest.Operation:type_name -> service.OperationType
	36, // 16: rest.WorkspaceCollection.Workspaces:type_name -> idm.Workspace
	37, // 17: rest.UserMetaCollection.Metadatas:type_name -> idm.UserMeta
	38, // 18: rest.UserMetaNamespaceCollection.Namespaces:type_name -> idm.UserMetaNamespace
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_cellsapi_idm_proto_init() }
func file_cellsapi_idm_proto_init() {
	if File_cellsapi_idm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cellsapi_idm_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ResourcePolicyQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RolesCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SearchUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UsersCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SearchACLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ACLCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SearchWorkspaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*WorkspaceCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UserMetaCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UserMetaNamespaceCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListUserMetaTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListUserMetaTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PutUserMetaTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PutUserMetaTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserMetaTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserMetaTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UserBookmarksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*RevokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*RevokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasswordTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasswordTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ResetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DocumentAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellsapi_idm_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*DocumentAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cellsapi_idm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cellsapi_idm_proto_goTypes,
		DependencyIndexes: file_cellsapi_idm_proto_depIdxs,
		EnumInfos:         file_cellsapi_idm_proto_enumTypes,
		MessageInfos:      file_cellsapi_idm_proto_msgTypes,
	}.Build()
	File_cellsapi_idm_proto = out.File
	file_cellsapi_idm_proto_rawDesc = nil
	file_cellsapi_idm_proto_goTypes = nil
	file_cellsapi_idm_proto_depIdxs = nil
}
