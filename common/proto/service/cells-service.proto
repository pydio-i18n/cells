syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

package service;

option go_package="github.com/pydio/cells/common/proto/service";

enum OperationType {
    OR = 0;
    AND = 1;
}

enum ResourcePolicyAction {
    ANY = 0;
    OWNER = 1;
    READ = 2;
    WRITE = 3;
    EDIT_RULES = 4;
}

message Query {
    repeated google.protobuf.Any SubQueries = 1;
    OperationType Operation = 2;
    ResourcePolicyQuery ResourcePolicyQuery = 3;
    int64 Offset = 4;
    int64 Limit = 5;
    int32 groupBy = 6;
}

message ResourcePolicyQuery {
    repeated string Subjects = 1;
    bool Empty = 2;
    bool Any = 3;
}

message ResourcePolicy {
    int64 id = 1;
    string Resource = 2;
    ResourcePolicyAction Action = 3;
    string Subject = 4;
    enum PolicyEffect {
        deny = 0;
        allow = 1;
    }
    PolicyEffect Effect = 5;
    string JsonConditions = 6;
}

service ServiceManager {
    rpc Start(StartRequest) returns (StartResponse);
    rpc Stop(StopRequest) returns (StopResponse);
}

message StartRequest {
    string name = 1;
}

message StartResponse {
    bool OK = 1;
}

message StopRequest {
    string name = 1;
}

message StopResponse {
    bool OK = 1;
}

// ModifyLoginRequest is used to send a ModifyLogin call
message ModifyLoginRequest {
    string OldLogin = 1;
    string NewLogin = 2;
    bool DryRun = 3;
    map<string,string> Options = 4;
}

// ModifyLoginResponse indicates if operation succeeded and adds optional message
message ModifyLoginResponse {
    bool Success = 1;
    repeated string Messages = 2;
}

// LoginModifier can be implemented by any service, thus indicating that it can handle a Login Modification request
service LoginModifier {
    rpc ModifyLogin(ModifyLoginRequest) returns (ModifyLoginResponse);
}

message Error {
    string ID = 1;
    uint32 Code = 2;
    string Status = 3;
    string Details = 4;
}