// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: cells-log.proto

package log

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Relative links types.
// Note that First is time.Now() and last time.Unix(0).
// We added an unused NONE enum with value 0 to workaround 0 issues between JSON and proto3.
type RelType int32

const (
	RelType_NONE  RelType = 0
	RelType_FIRST RelType = 1
	RelType_PREV  RelType = 2
	RelType_NEXT  RelType = 3
	RelType_LAST  RelType = 4
)

// Enum value maps for RelType.
var (
	RelType_name = map[int32]string{
		0: "NONE",
		1: "FIRST",
		2: "PREV",
		3: "NEXT",
		4: "LAST",
	}
	RelType_value = map[string]int32{
		"NONE":  0,
		"FIRST": 1,
		"PREV":  2,
		"NEXT":  3,
		"LAST":  4,
	}
)

func (x RelType) Enum() *RelType {
	p := new(RelType)
	*p = x
	return p
}

func (x RelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelType) Descriptor() protoreflect.EnumDescriptor {
	return file_cells_log_proto_enumTypes[0].Descriptor()
}

func (RelType) Type() protoreflect.EnumType {
	return &file_cells_log_proto_enumTypes[0]
}

func (x RelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelType.Descriptor instead.
func (RelType) EnumDescriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{0}
}

// Output Format
type ListLogRequest_LogFormat int32

const (
	ListLogRequest_JSON ListLogRequest_LogFormat = 0
	ListLogRequest_CSV  ListLogRequest_LogFormat = 1
	ListLogRequest_XLSX ListLogRequest_LogFormat = 2
)

// Enum value maps for ListLogRequest_LogFormat.
var (
	ListLogRequest_LogFormat_name = map[int32]string{
		0: "JSON",
		1: "CSV",
		2: "XLSX",
	}
	ListLogRequest_LogFormat_value = map[string]int32{
		"JSON": 0,
		"CSV":  1,
		"XLSX": 2,
	}
)

func (x ListLogRequest_LogFormat) Enum() *ListLogRequest_LogFormat {
	p := new(ListLogRequest_LogFormat)
	*p = x
	return p
}

func (x ListLogRequest_LogFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListLogRequest_LogFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_cells_log_proto_enumTypes[1].Descriptor()
}

func (ListLogRequest_LogFormat) Type() protoreflect.EnumType {
	return &file_cells_log_proto_enumTypes[1]
}

func (x ListLogRequest_LogFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListLogRequest_LogFormat.Descriptor instead.
func (ListLogRequest_LogFormat) EnumDescriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{4, 0}
}

type RecorderPutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecorderPutResponse) Reset() {
	*x = RecorderPutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecorderPutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecorderPutResponse) ProtoMessage() {}

func (x *RecorderPutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecorderPutResponse.ProtoReflect.Descriptor instead.
func (*RecorderPutResponse) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{0}
}

// Log is a generic message format used by the sync service
// to publish log messages to the various log repositories (typically, bleve).
type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []byte `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Nano    int32  `protobuf:"varint,2,opt,name=Nano,proto3" json:"Nano,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Log) GetNano() int32 {
	if x != nil {
		return x.Nano
	}
	return 0
}

// LogLevelEvent can be broadcasted to broker to change logger level from Info to Debug
// for a specific set of services
type LogLevelEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reset all services to Info level
	ResetInfo bool `protobuf:"varint,1,opt,name=ResetInfo,proto3" json:"ResetInfo,omitempty"`
	// Set to Debug if true or Info if false
	LevelDebug bool `protobuf:"varint,2,opt,name=LevelDebug,proto3" json:"LevelDebug,omitempty"`
	// List of services where to apply (if Reset is not set)
	Services []string `protobuf:"bytes,3,rep,name=Services,proto3" json:"Services,omitempty"`
}

func (x *LogLevelEvent) Reset() {
	*x = LogLevelEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLevelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelEvent) ProtoMessage() {}

func (x *LogLevelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelEvent.ProtoReflect.Descriptor instead.
func (*LogLevelEvent) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{2}
}

func (x *LogLevelEvent) GetResetInfo() bool {
	if x != nil {
		return x.ResetInfo
	}
	return false
}

func (x *LogLevelEvent) GetLevelDebug() bool {
	if x != nil {
		return x.LevelDebug
	}
	return false
}

func (x *LogLevelEvent) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

// LogMessage is the format used to transmit log messages to clients via the REST API.
type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generic zap fields
	Ts     int32  `protobuf:"varint,1,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Level  string `protobuf:"bytes,2,opt,name=Level,proto3" json:"Level,omitempty"`
	Logger string `protobuf:"bytes,3,opt,name=Logger,proto3" json:"Logger,omitempty"`
	Msg    string `protobuf:"bytes,4,opt,name=Msg,proto3" json:"Msg,omitempty"`
	// Pydio specific
	MsgId string `protobuf:"bytes,5,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	// User Info
	UserName  string   `protobuf:"bytes,6,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserUuid  string   `protobuf:"bytes,7,opt,name=UserUuid,proto3" json:"UserUuid,omitempty"`
	GroupPath string   `protobuf:"bytes,8,opt,name=GroupPath,proto3" json:"GroupPath,omitempty"`
	Profile   string   `protobuf:"bytes,16,opt,name=Profile,proto3" json:"Profile,omitempty"`
	RoleUuids []string `protobuf:"bytes,9,rep,name=RoleUuids,proto3" json:"RoleUuids,omitempty"`
	// Client info
	RemoteAddress string `protobuf:"bytes,10,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	UserAgent     string `protobuf:"bytes,11,opt,name=UserAgent,proto3" json:"UserAgent,omitempty"`
	HttpProtocol  string `protobuf:"bytes,12,opt,name=HttpProtocol,proto3" json:"HttpProtocol,omitempty"`
	// Tree Info
	NodeUuid     string `protobuf:"bytes,13,opt,name=NodeUuid,proto3" json:"NodeUuid,omitempty"`
	NodePath     string `protobuf:"bytes,14,opt,name=NodePath,proto3" json:"NodePath,omitempty"`
	TransferSize int64  `protobuf:"varint,27,opt,name=TransferSize,proto3" json:"TransferSize,omitempty"`
	WsUuid       string `protobuf:"bytes,15,opt,name=WsUuid,proto3" json:"WsUuid,omitempty"`
	WsScope      string `protobuf:"bytes,17,opt,name=WsScope,proto3" json:"WsScope,omitempty"`
	// Span Info
	SpanUuid       string `protobuf:"bytes,18,opt,name=SpanUuid,proto3" json:"SpanUuid,omitempty"`
	SpanParentUuid string `protobuf:"bytes,19,opt,name=SpanParentUuid,proto3" json:"SpanParentUuid,omitempty"`
	SpanRootUuid   string `protobuf:"bytes,20,opt,name=SpanRootUuid,proto3" json:"SpanRootUuid,omitempty"`
	// High Level Operation Info
	OperationUuid           string `protobuf:"bytes,21,opt,name=OperationUuid,proto3" json:"OperationUuid,omitempty"`
	OperationLabel          string `protobuf:"bytes,22,opt,name=OperationLabel,proto3" json:"OperationLabel,omitempty"`
	SchedulerJobUuid        string `protobuf:"bytes,23,opt,name=SchedulerJobUuid,proto3" json:"SchedulerJobUuid,omitempty"`
	SchedulerTaskUuid       string `protobuf:"bytes,24,opt,name=SchedulerTaskUuid,proto3" json:"SchedulerTaskUuid,omitempty"`
	SchedulerTaskActionPath string `protobuf:"bytes,25,opt,name=SchedulerTaskActionPath,proto3" json:"SchedulerTaskActionPath,omitempty"`
	// Other Unkown Fields
	JsonZaps string `protobuf:"bytes,26,opt,name=JsonZaps,proto3" json:"JsonZaps,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{3}
}

func (x *LogMessage) GetTs() int32 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *LogMessage) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogMessage) GetLogger() string {
	if x != nil {
		return x.Logger
	}
	return ""
}

func (x *LogMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LogMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *LogMessage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LogMessage) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *LogMessage) GetGroupPath() string {
	if x != nil {
		return x.GroupPath
	}
	return ""
}

func (x *LogMessage) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *LogMessage) GetRoleUuids() []string {
	if x != nil {
		return x.RoleUuids
	}
	return nil
}

func (x *LogMessage) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *LogMessage) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *LogMessage) GetHttpProtocol() string {
	if x != nil {
		return x.HttpProtocol
	}
	return ""
}

func (x *LogMessage) GetNodeUuid() string {
	if x != nil {
		return x.NodeUuid
	}
	return ""
}

func (x *LogMessage) GetNodePath() string {
	if x != nil {
		return x.NodePath
	}
	return ""
}

func (x *LogMessage) GetTransferSize() int64 {
	if x != nil {
		return x.TransferSize
	}
	return 0
}

func (x *LogMessage) GetWsUuid() string {
	if x != nil {
		return x.WsUuid
	}
	return ""
}

func (x *LogMessage) GetWsScope() string {
	if x != nil {
		return x.WsScope
	}
	return ""
}

func (x *LogMessage) GetSpanUuid() string {
	if x != nil {
		return x.SpanUuid
	}
	return ""
}

func (x *LogMessage) GetSpanParentUuid() string {
	if x != nil {
		return x.SpanParentUuid
	}
	return ""
}

func (x *LogMessage) GetSpanRootUuid() string {
	if x != nil {
		return x.SpanRootUuid
	}
	return ""
}

func (x *LogMessage) GetOperationUuid() string {
	if x != nil {
		return x.OperationUuid
	}
	return ""
}

func (x *LogMessage) GetOperationLabel() string {
	if x != nil {
		return x.OperationLabel
	}
	return ""
}

func (x *LogMessage) GetSchedulerJobUuid() string {
	if x != nil {
		return x.SchedulerJobUuid
	}
	return ""
}

func (x *LogMessage) GetSchedulerTaskUuid() string {
	if x != nil {
		return x.SchedulerTaskUuid
	}
	return ""
}

func (x *LogMessage) GetSchedulerTaskActionPath() string {
	if x != nil {
		return x.SchedulerTaskActionPath
	}
	return ""
}

func (x *LogMessage) GetJsonZaps() string {
	if x != nil {
		return x.JsonZaps
	}
	return ""
}

// ListLogRequest launches a parameterised query in the log repository and streams the results.
type ListLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bleve-type Query stsring
	Query string `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
	// Start at page
	Page int32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	// Number of results
	Size   int32                    `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	Format ListLogRequest_LogFormat `protobuf:"varint,4,opt,name=Format,proto3,enum=log.ListLogRequest_LogFormat" json:"Format,omitempty"`
}

func (x *ListLogRequest) Reset() {
	*x = ListLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogRequest) ProtoMessage() {}

func (x *ListLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogRequest.ProtoReflect.Descriptor instead.
func (*ListLogRequest) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{4}
}

func (x *ListLogRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListLogRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListLogRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListLogRequest) GetFormat() ListLogRequest_LogFormat {
	if x != nil {
		return x.Format
	}
	return ListLogRequest_JSON
}

type ListLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogMessage *LogMessage `protobuf:"bytes,1,opt,name=LogMessage,proto3" json:"LogMessage,omitempty"`
}

func (x *ListLogResponse) Reset() {
	*x = ListLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogResponse) ProtoMessage() {}

func (x *ListLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogResponse.ProtoReflect.Descriptor instead.
func (*ListLogResponse) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{5}
}

func (x *ListLogResponse) GetLogMessage() *LogMessage {
	if x != nil {
		return x.LogMessage
	}
	return nil
}

type DeleteLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted int64 `protobuf:"varint,1,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
}

func (x *DeleteLogsResponse) Reset() {
	*x = DeleteLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLogsResponse) ProtoMessage() {}

func (x *DeleteLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLogsResponse.ProtoReflect.Descriptor instead.
func (*DeleteLogsResponse) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLogsResponse) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

// TimeRangeResponse contains either one aggregated result of a facetted request
// OR a time range cursor.
type TimeRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeRangeResult *TimeRangeResult `protobuf:"bytes,1,opt,name=TimeRangeResult,proto3" json:"TimeRangeResult,omitempty"`
	TimeRangeCursor *TimeRangeCursor `protobuf:"bytes,2,opt,name=TimeRangeCursor,proto3" json:"TimeRangeCursor,omitempty"`
}

func (x *TimeRangeResponse) Reset() {
	*x = TimeRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRangeResponse) ProtoMessage() {}

func (x *TimeRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRangeResponse.ProtoReflect.Descriptor instead.
func (*TimeRangeResponse) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{7}
}

func (x *TimeRangeResponse) GetTimeRangeResult() *TimeRangeResult {
	if x != nil {
		return x.TimeRangeResult
	}
	return nil
}

func (x *TimeRangeResponse) GetTimeRangeCursor() *TimeRangeCursor {
	if x != nil {
		return x.TimeRangeCursor
	}
	return nil
}

// TimeRangeResult represents one point of a graph.
type TimeRangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a label for this time range
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// begin timestamp
	Start int32 `protobuf:"varint,2,opt,name=Start,proto3" json:"Start,omitempty"`
	// end timestamp
	End int32 `protobuf:"varint,3,opt,name=End,proto3" json:"End,omitempty"`
	// nb of occurrences found within this range
	Count int32 `protobuf:"varint,4,opt,name=Count,proto3" json:"Count,omitempty"`
	// a score between 1 and 100 that gives the relevance of this result:
	// if End > now, we ponderate the returned count with the duration of the last time range
	// for instance for a hour range if now is 6PM, last count will be
	// multiplied by 4/3 and have a relevance of 75.
	// Relevance will be almost always equals to 100
	Relevance int32 `protobuf:"varint,5,opt,name=Relevance,proto3" json:"Relevance,omitempty"`
}

func (x *TimeRangeResult) Reset() {
	*x = TimeRangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRangeResult) ProtoMessage() {}

func (x *TimeRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRangeResult.ProtoReflect.Descriptor instead.
func (*TimeRangeResult) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{8}
}

func (x *TimeRangeResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TimeRangeResult) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRangeResult) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *TimeRangeResult) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TimeRangeResult) GetRelevance() int32 {
	if x != nil {
		return x.Relevance
	}
	return 0
}

// TimeRangeRequest contains the parameter to configure the query to
// retrieve the number of audit events of this type for a given time range
// defined by last timestamp and a range type.
type TimeRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of event we are auditing
	MsgId string `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	// Known types: H, D, W, M or Y
	TimeRangeType string `protobuf:"bytes,2,opt,name=TimeRangeType,proto3" json:"TimeRangeType,omitempty"`
	// Upper bound for our request
	RefTime int32 `protobuf:"varint,3,opt,name=RefTime,proto3" json:"RefTime,omitempty"`
}

func (x *TimeRangeRequest) Reset() {
	*x = TimeRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRangeRequest) ProtoMessage() {}

func (x *TimeRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRangeRequest.ProtoReflect.Descriptor instead.
func (*TimeRangeRequest) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{9}
}

func (x *TimeRangeRequest) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *TimeRangeRequest) GetTimeRangeType() string {
	if x != nil {
		return x.TimeRangeType
	}
	return ""
}

func (x *TimeRangeRequest) GetRefTime() int32 {
	if x != nil {
		return x.RefTime
	}
	return 0
}

// Ease implementation of data navigation for a chart.
type TimeRangeCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rel     RelType `protobuf:"varint,1,opt,name=Rel,proto3,enum=log.RelType" json:"Rel,omitempty"`
	RefTime int32   `protobuf:"varint,2,opt,name=RefTime,proto3" json:"RefTime,omitempty"`
	Count   int32   `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *TimeRangeCursor) Reset() {
	*x = TimeRangeCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cells_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRangeCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRangeCursor) ProtoMessage() {}

func (x *TimeRangeCursor) ProtoReflect() protoreflect.Message {
	mi := &file_cells_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRangeCursor.ProtoReflect.Descriptor instead.
func (*TimeRangeCursor) Descriptor() ([]byte, []int) {
	return file_cells_log_proto_rawDescGZIP(), []int{10}
}

func (x *TimeRangeCursor) GetRel() RelType {
	if x != nil {
		return x.Rel
	}
	return RelType_NONE
}

func (x *TimeRangeCursor) GetRefTime() int32 {
	if x != nil {
		return x.RefTime
	}
	return 0
}

func (x *TimeRangeCursor) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_cells_log_proto protoreflect.FileDescriptor

var file_cells_log_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x2d, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a,
	0x03, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4e, 0x61,
	0x6e, 0x6f, 0x22, 0x69, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xdc, 0x06,
	0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x54, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x48, 0x74, 0x74, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x73, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x57, 0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57,
	0x73, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x70, 0x61, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x70, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x70, 0x61, 0x6e,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x70,
	0x61, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x75, 0x69, 0x64, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x55, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x5a, 0x61, 0x70, 0x73, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x5a, 0x61, 0x70, 0x73, 0x22, 0xaf, 0x01, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a,
	0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x28, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43,
	0x53, 0x56, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x4c, 0x53, 0x58, 0x10, 0x02, 0x22, 0x42,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x10,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x65, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52,
	0x65, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x03, 0x52, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x52, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x66,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x66, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x3c, 0x0a, 0x07, 0x52, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x52, 0x45,
	0x56, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x45, 0x58, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x41, 0x53, 0x54, 0x10, 0x04, 0x32, 0xfd, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x50, 0x75, 0x74, 0x4c, 0x6f,
	0x67, 0x12, 0x08, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x1a, 0x18, 0x2e, 0x6c, 0x6f,
	0x67, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x39, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x67,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x4c, 0x6f, 0x67, 0x73, 0x12, 0x15, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x6f,
	0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79, 0x64, 0x69, 0x6f, 0x2f, 0x63, 0x65, 0x6c, 0x6c,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c,
	0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cells_log_proto_rawDescOnce sync.Once
	file_cells_log_proto_rawDescData = file_cells_log_proto_rawDesc
)

func file_cells_log_proto_rawDescGZIP() []byte {
	file_cells_log_proto_rawDescOnce.Do(func() {
		file_cells_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_cells_log_proto_rawDescData)
	})
	return file_cells_log_proto_rawDescData
}

var file_cells_log_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cells_log_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cells_log_proto_goTypes = []interface{}{
	(RelType)(0),                  // 0: log.RelType
	(ListLogRequest_LogFormat)(0), // 1: log.ListLogRequest.LogFormat
	(*RecorderPutResponse)(nil),   // 2: log.RecorderPutResponse
	(*Log)(nil),                   // 3: log.Log
	(*LogLevelEvent)(nil),         // 4: log.LogLevelEvent
	(*LogMessage)(nil),            // 5: log.LogMessage
	(*ListLogRequest)(nil),        // 6: log.ListLogRequest
	(*ListLogResponse)(nil),       // 7: log.ListLogResponse
	(*DeleteLogsResponse)(nil),    // 8: log.DeleteLogsResponse
	(*TimeRangeResponse)(nil),     // 9: log.TimeRangeResponse
	(*TimeRangeResult)(nil),       // 10: log.TimeRangeResult
	(*TimeRangeRequest)(nil),      // 11: log.TimeRangeRequest
	(*TimeRangeCursor)(nil),       // 12: log.TimeRangeCursor
}
var file_cells_log_proto_depIdxs = []int32{
	1,  // 0: log.ListLogRequest.Format:type_name -> log.ListLogRequest.LogFormat
	5,  // 1: log.ListLogResponse.LogMessage:type_name -> log.LogMessage
	10, // 2: log.TimeRangeResponse.TimeRangeResult:type_name -> log.TimeRangeResult
	12, // 3: log.TimeRangeResponse.TimeRangeCursor:type_name -> log.TimeRangeCursor
	0,  // 4: log.TimeRangeCursor.Rel:type_name -> log.RelType
	3,  // 5: log.LogRecorder.PutLog:input_type -> log.Log
	6,  // 6: log.LogRecorder.ListLogs:input_type -> log.ListLogRequest
	6,  // 7: log.LogRecorder.DeleteLogs:input_type -> log.ListLogRequest
	11, // 8: log.LogRecorder.AggregatedLogs:input_type -> log.TimeRangeRequest
	2,  // 9: log.LogRecorder.PutLog:output_type -> log.RecorderPutResponse
	7,  // 10: log.LogRecorder.ListLogs:output_type -> log.ListLogResponse
	8,  // 11: log.LogRecorder.DeleteLogs:output_type -> log.DeleteLogsResponse
	9,  // 12: log.LogRecorder.AggregatedLogs:output_type -> log.TimeRangeResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cells_log_proto_init() }
func file_cells_log_proto_init() {
	if File_cells_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cells_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecorderPutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLevelEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cells_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRangeCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cells_log_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cells_log_proto_goTypes,
		DependencyIndexes: file_cells_log_proto_depIdxs,
		EnumInfos:         file_cells_log_proto_enumTypes,
		MessageInfos:      file_cells_log_proto_msgTypes,
	}.Build()
	File_cells_log_proto = out.File
	file_cells_log_proto_rawDesc = nil
	file_cells_log_proto_goTypes = nil
	file_cells_log_proto_depIdxs = nil
}
