name: main

#--------------------------------------------
# Default variables
#--------------------------------------------
bind: &bind 0.0.0.0
advertise: &advertise 0.0.0.0

#--------------------------------------------
# Default connection to runtime functions
#--------------------------------------------
tenants:
  default:
    connections:
      config:
        uri: file:///Users/ghecquet/Library/Application Support/Pydio/cells/pydio.json
      registry:
        uri: mem://?cache=shared
      broker:
        uri: mem://
      logs:
        uri: file://stdout
      sql:
        uri: sqlite3://:memory
      nosql:

connections: &connections
  config:
    uri: xds://default.cells.com/cells
  registry:
    uri: xds://default.cells.com/cells
  broker:
    uri: xds://default.cells.com/cells
  logs:
    uri: file://stdout
  sql:
    uri: sqlite3://:memory

#--------------------------------------------
# Default servers configuration
#--------------------------------------------
servers: &servers
  grpc:
    bind: *bind
    advertise: *advertise
    port: 0
  grpc_discovery:
    bind: *bind
    advertise: *advertise
    port: 0
  http:
    bind: *bind
    advertise: *advertise
    type: http
    port: 0

#--------------------------------------------
# Default env configuration
#--------------------------------------------
env: &env
  CELLS_USE_REGISTRY_SESSION: true
  GRPC_EXPERIMENTAL_XDS_FEDERATION: true
  GRPC_XDS_BOOTSTRAP_CONFIG: {
    "xds_servers": [
      {
        "server_uri": "0.0.0.0:8030",
        "server_features": [
          "xds_v3"
        ],
        "channel_creds": [
          {
            "type": "insecure"
          }
        ]
      }
    ],
    "client_default_listener_resource_name_template": "xdstp://default.cells.com/envoy.config.listener.v3.Listener/grpc/client/%s",
    "server_listener_resource_name_template": "xdstp://default.cells.com/envoy.config.listener.v3.Listener/grpc/server/%s",
    "node": {
      "id": "test-id",
      "locality": {
        "zone": "us-central1-a"
      }
    },
    "authorities": {
      "default.cells.com": {
        "client_listener_resource_name_template": "xdstp://default.cells.com/envoy.config.listener.v3.Listener/grpc/client/%s"
      },
      "tenant.cells.com": {
        "client_listener_resource_name_template": "xdstp://tenant.cells.com/envoy.config.listener.v3.Listener/grpc/client/%s",
        "server_listener_resource_name_template": "xdstp://tenant.cells.com/envoy.config.listener.v3.Listener/grpc/server/%s",
        "xds_servers": [
          {
            "server_uri": "127.0.0.1:8130",
            "server_features": [
              "xds_v3"
            ],
            "channel_creds": [
              {
                "type": "insecure"
              }
            ]
          }
        ]
      }
    }
  }

#--------------------------------------------
# All processes
#--------------------------------------------
processes:
  discovery:
    runtime: discovery
    connections:
      <<: *connections
      config:
        uri: file:///Users/ghecquet/Library/Application Support/Pydio/cells/pydio.json
      registry:
        uri: mem://?cache=shared
      broker:
        uri: mem://

    servers:
      <<: *servers
      grpc:
        port: 8030
      http:
        type: caddy
        port: 8080

    env: *env

    services:
      idm:
      discovery:
      gateway:
      frontend:
      data:
      scheduler:
      auth:
      broker:

#  data:
#    connections: *connections
#    servers: *servers
#    env: *env
#
#    services:
#      data:

#  idm:
#    connections: *connections
#    servers: *servers
#    env: *env
#
#    services:
#      idm:

#  datasource-peer:
#    connections: *connections
#    servers: *servers
#    env: *env
#
#    services:
#      datasource:
#        - pydio.grpc.data.objects.peer
#
#  {{ if .Config }}
#  {{ $objectsVal := .Config.Val "services/pydio.grpc.data.objects/sources" }}
#  {{ $ := .Config }}
#  {{ range $objectsVal.StringArray }}
#  {{ if or (lt (len .) 8) (ne (slice . 0 8) ("updated:")) }}
#  {{ if not ($.Val "services" (print "pydio.grpc.data.objects." .) "Disabled").Bool }}
#  objects-{{ . }}:
#    connections: *connections
#    servers: *servers
#    env: *env
#
#    services:
#      datasource:
#        - pydio.grpc.data.objects.{{ . }}
#  {{ end }}
#  {{ end }}
#  {{ end }}
#
#  {{ $indexesVal := .Config.Val "services/pydio.grpc.data.index/sources" }}
#  {{ $ := .Config }}
#  {{ range $indexesVal.StringArray }}
#  {{ if or (lt (len .) 8) (ne (slice . 0 8) ("updated:")) }}
#  {{ if not ($.Val "services" (print "pydio.grpc.data.index." .) "Disabled").Bool }}
#  index-{{ . }}:
#    #{{ if eq . "pydiods1" }}debug: true{{ end }}
#    connections: *connections
#    servers: *servers
#    env: *env
#
#    services:
#      datasource:
#        - pydio.grpc.data.index.{{ . }}
#  {{ end }}
#  {{ end }}
#  {{ end }}
#
#  {{ $syncVal := .Config.Val "services/pydio.grpc.data.sync/sources" }}
#  {{ $ := .Config }}
#  {{ range $syncVal.StringArray }}
#  {{ if or (lt (len .) 8) (ne (slice . 0 8) ("updated:")) }}
#  {{ if not ($.Val "services" (print "pydio.grpc.data.sync." .) "Disabled").Bool }}
#  sync-{{ . }}:
#    #{{ if eq . "pydiods1" }}debug: true{{ end }}
#    connections: *connections
#    servers: *servers
#    env: *env
#
#    services:
#      datasource:
#        - pydio.grpc.data.sync.{{ . }}
#  {{ end }}
#  {{ end }}
#  {{ end }}
#  {{ end }}