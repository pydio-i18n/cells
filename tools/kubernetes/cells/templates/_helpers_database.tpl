{{/*
MARIADB HOST
*/}}
{{- define "cells.database.scheme" -}}
{{- if .Values.mariadb.enabled -}}
{{- printf "mysql" }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{- .Values.externalSQLDatabase.scheme }}
{{- end -}}
{{- end }}

{{- define "cells.database.host" -}}
{{- if .Values.mariadb.enabled -}}
{{- printf "%s-mariadb.%s.svc.%s" .Release.Name .Release.Namespace .Values.clusterDomain }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{- .Values.externalSQLDatabase.host }}
{{- end -}}
{{- end }}

{{/*
MARIADB PORT
*/}}
{{- define "cells.database.port" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.primary.service.ports.mysql | toString }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.port | toString }}
{{- end -}}
{{- end }}

{{/*
MARIADB PORT
*/}}
{{- define "cells.database.name" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.auth.database | toString }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.name | toString }}
{{- end -}}
{{- end }}

{{/*
MARIADB ACTIVATION
*/}}
{{- define "cells.database.enabled" -}}
{{- if or .Values.mariadb.enabled .Values.externalSQLDatabase.enabled -}}
{{ true }}
{{- end -}}
{{- end -}}

{{/*
MARIADB TLS ACTIVATION
*/}}
{{- define "cells.database.tls.enabled" -}}
{{- if and .Values.mariadb.enabled .Values.mariadb.tls.enabled -}}
{{- true -}}
{{- else if and .Values.externalSQLDatabase.enabled .Values.externalSQLDatabase.tls.enabled -}}
{{- true -}}
{{- end -}}
{{- end -}}

{{- define "cells.database.tls.autoGenerated" -}}
{{- if and .Values.mariadb.enabled .Values.mariadb.tls.autoGenerated.enabled -}}
{{- true -}}
{{- else if and .Values.externalSQLDatabase.enabled .Values.externalSQLDatabase.tls.autoGenerated -}}
{{- true -}}
{{- end -}}
{{- end -}}

{{/*
NATS TLS EXISTING SECRET
*/}}
{{- define "cells.database.tls.client.existingSecret" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.tls.existingSecret | default "cells-mariadb-crt" }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.tls.client.existingSecret }}
{{- end -}}
{{- end -}}

{{/*
NATS TLS CERTIFICATE
*/}}
{{- define "cells.database.tls.client.cert" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.tls.certFilename | default "tls.crt" }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.tls.client.cert }}
{{- end -}}
{{- end -}}

{{/*
NATS TLS CLÉ PRIVÉE
*/}}
{{- define "cells.database.tls.client.key" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.tls.certKeyFilename | default "tls.key" }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.tls.client.key }}
{{- end -}}
{{- end -}}

{{/*
NATS TLS EXISTING SECRET
*/}}
{{- define "cells.database.tls.server.existingSecret" -}}
{{- end -}}

{{/*
NATS TLS CERTIFICATE
*/}}
{{- define "cells.database.tls.server.cert" -}}
{{- end -}}

{{/*
NATS TLS CLÉ PRIVÉE
*/}}
{{- define "cells.database.tls.server.key" -}}
{{- end -}}

{{/*
NATS TLS EXISTING SECRET
*/}}
{{- define "cells.database.tls.ca.existingSecret" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.tls.existingSecret | default "cells-mariadb-crt" }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.tls.ca.existingSecret }}
{{- end -}}
{{- end -}}

{{/*
NATS TLS CA
*/}}
{{- define "cells.database.tls.ca.cert" -}}
{{- if .Values.mariadb.enabled -}}
{{ .Values.mariadb.tls.certCAFilename | default "ca.crt" }}
{{- else if .Values.externalSQLDatabase.enabled -}}
{{ .Values.externalSQLDatabase.tls.ca.cert }}
{{- end -}}
{{- end -}}

{{/*
MARIADB TLS PARAMÈTRES
*/}}
{{- define "cells.database.tls.params" -}}
{{ if (include "cells.database.tls.enabled" .) }}
{{ include "cells.urlTLSParams" (dict
  "enabled"         (include "cells.database.tls.enabled" .)
  "prefix"          "mariadb"
  "certFilename"    (include "cells.database.tls.client.cert" .)
  "certKeyFilename" (include "cells.database.tls.client.key" .)
  "caFilename"      (include "cells.database.tls.ca.cert" .)
) }}
{{- end -}}
{{- end -}}

{{/*
MARIADB AUTH ACTIVÉ
*/}}
{{- define "cells.database.auth.enabled" -}}
{{- if .Values.mariadb.enabled -}}
{{- true -}}
{{- else if and .Values.externalSQLDatabase.enabled .Values.externalSQLDatabase.auth.enabled -}}
{{- true -}}
{{- end -}}
{{- end -}}

{{/*
MARIADB USERNAME
*/}}
{{- define "cells.database.auth.user" -}}
{{- if (include "cells.database.auth.enabled" .) -}}
{{ "MARIADB_ROOT_USERNAME" }}
{{- end -}}
{{- end -}}

{{/*
MARIADB PASSWORD
*/}}
{{- define "cells.database.auth.password" -}}
{{- if (include "cells.database.auth.enabled" .) -}}
{{ "MARIADB_ROOT_PASSWORD" }}
{{- end -}}
{{- end -}}

{{/*
MARIADB ENV SECRET
*/}}
{{- define "cells.database.auth.envvar" -}}
{{- if and (include "cells.database.auth.enabled" .) .Values.mariadb.enabled -}}
{{- if and (empty .Values.mariadb.auth.existingSecret) (empty .Values.mariadb.auth.username) -}}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_USERNAME" "value" "root") }}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_PASSWORD" "value" (dict
  "secretName"        "cells-mariadb"
  "secretPasswordKey" "mariadb-root-password")) }}
{{- else if not (empty .Values.mariadb.auth.username) -}}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_USERNAME" "value" .Values.mariadb.auth.username) }}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_PASSWORD" "value" (dict
  "secretName"        "cells-mariadb"
  "secretPasswordKey" "mariadb-password")) }}
{{- else -}}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_USERNAME" "value" (dict
  "secretName"        .Values.mariadb.auth.existingSecret
  "secretPasswordKey" "username")) }}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_PASSWORD" "value" (dict
  "secretName"        .Values.mariadb.auth.existingSecret
  "secretPasswordKey" "password")) }}
{{- end -}}
{{- else if and (include "cells.database.auth.enabled" .) .Values.externalSQLDatabase.auth.enabled -}}
{{- if empty .Values.externalSQLDatabase.auth.existingSecretUsernameKey -}}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_USERNAME" "value" (.Values.externalSQLDatabase.auth.user | default "root")) }}
{{- else -}}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_USERNAME" "value" (dict
  "secretName"        .Values.externalSQLDatabase.auth.existingSecret
  "secretPasswordKey" .Values.externalSQLDatabase.auth.existingSecretUsernameKey)) }}
{{- end }}
{{ if empty .Values.externalSQLDatabase.auth.existingSecretPasswordKey }}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_PASSWORD" "value" .Values.externalSQLDatabase.auth.password) }}
{{- else -}}
{{ include "cells.tplvalues.renderSecretPassword" (dict "name" "MARIADB_ROOT_PASSWORD" "value" (dict
  "secretName"        .Values.externalSQLDatabase.auth.existingSecret
  "secretPasswordKey" .Values.externalSQLDatabase.auth.existingSecretPasswordKey)) }}
{{- end -}}
{{- end -}}
{{- end -}}

{{/*
MARIADB URL UTILISATEUR
*/}}
{{- define "cells.database.auth.urlUser" -}}
{{ include "cells.urlUser" (dict
  "enabled"  (eq (include "cells.database.auth.enabled" .) "true")
  "user"     (include "cells.database.auth.user" .)
  "password" (include "cells.database.auth.password" .)
) }}
{{- end -}}

{{/*
MARIADB URL COMPLÈTE
*/}}
{{- define "cells.mariadbURL" -}}
{{- $path := index . 1 }}
{{- with index . 0 }}
{{- printf "%s://%s%s:%s%s%s"
    (include "cells.database.scheme" .)
    (include "cells.database.auth.urlUser" .)
    (include "cells.database.host" .)
    (include "cells.database.port" .)
    $path
    (include "cells.database.tls.params" .)
}}
{{- end }}
{{- end }}
