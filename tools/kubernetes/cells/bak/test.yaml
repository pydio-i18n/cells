# Source: cells/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cells
  labels:
    helm.sh/chart: cells-0.1.1
    app.kubernetes.io/name: cells
    app.kubernetes.io/instance: cells
    app.kubernetes.io/version: "v4"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cells
      app.kubernetes.io/instance: cells
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: cells
        app.kubernetes.io/instance: cells
    spec:
      serviceAccountName: app
      securityContext:
        {}
      containers:
        - name: cells
          securityContext:
            {}
          image: "pydio/cells:latest"
          imagePullPolicy: Never
          command: ["/bin/sh"]
          args:
            ['-c', 'source /var/cells-install/source && cells start --log debug']
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CELLS_LOG
              value: debug
            - name: CELLS_BIND_ADDRESS
              value: 0.0.0.0
            - name: CELLS_WORKING_DIR
              value: /var/cells
            - name: PYDIO_LOG
              value: info
            - name: CELLS_CONFIG
              value: etcd://root:inCBdXLttF@etcd.cells.svc.cluster.local:2379/config
            - name: CELLS_VAULT
              value: etcd://root:inCBdXLttF@etcd.cells.svc.cluster.local:2379/vault
            - name: CELLS_REGISTRY
              value: etcd://root:inCBdXLttF@etcd.cells.svc.cluster.local:2379/registry

            - name: CELLS_CACHE
              value: redis://default:tU4ZvyL5DA@redis-master.cells.svc.cluster.local:6379/cache
            - name: CELLS_CERTS_STORE
              value: file:///var/cells/certs
            - name: CADDYPATH
              value: /var/cells
            - name: DISCOVERY_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: etcd-root-password
                  name: etcd
            - name: MARIADB_ROOT_USERNAME
              value: root
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-root-password
                  name: mariadb

            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: redis



          envFrom:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: discovery
              containerPort: 8002
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /var/cells
            - name: install
              mountPath: /var/cells-install
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {}
      initContainers:
        - name: wait-for-database
          image: busybox
          command: [ "sh", "-c", 'until nc -zw2 "mariadb.cells.svc.cluster.local" "3306"; do echo waiting for database; sleep 2; done' ]
        - name: wait-for-discovery
          image: busybox
          command: ["sh", "-c", 'until nc -zw2 "etcd.cells.svc.cluster.local" "2379"; do echo waiting for discovery; sleep 2; done']
        - name: wait-for-cache
          image: busybox
          command: ["sh", "-c", 'until nc -zw2 "redis-master.cells.svc.cluster.local" "6379"; do echo waiting for cache; sleep 2; done']
        - name: wait-for-s3
          image: busybox
          command: [ "sh", "-c", 'until nc -zw2 "minio.cells.svc.cluster.local" "9000"; do echo waiting for s3; sleep 2; done' ]
        - name: install-certs
          image: "pydio/cells:latest"
          imagePullPolicy: Never
          command:
            - "/bin/sh"
            - "-c"
            - |
              sleep 3
              if [ -f /var/cells-install/source ]; then
                source /var/cells-install/source
              fi
              if [ -d /var/certs/ca ]; then
                for i in /var/certs/ca/*/*; do
                  echo "Importing ca certificate for $i"
                  cells admin cert import $i --uuid $(basename $(dirname $i))-ca-$(basename $i);
                done
              fi
              if [ -d /var/certs/client ]; then
                for i in /var/certs/client/*/*; do
                  echo "Importing client certificate for $i"
                  cells admin cert import $i --uuid $(basename $(dirname $i))-client-$(basename $i);
                done
              fi
          env:
            - name: CELLS_CERTS_STORE
              value: file:///var/cells/certs
          volumeMounts:
            - name: install
              mountPath: /var/cells-install
            - name: data
              mountPath: /var/cells
        - name: install
          image: "pydio/cells:latest"
          imagePullPolicy: Never
          command:
            - "/bin/sh"
            - "-c"
            - |
              sleep 3
              if [ -f /var/cells-install/source ]; then
                source /var/cells-install/source
              fi
              if ! cells admin config check; then 
                cells configure
              fi
              sleep 3
          env:
            - name: CELLS_WORKING_DIR
              value: /var/cells
            - name: CELLS_INSTALL_YAML
              value: /var/cells-install/install-conf.yaml
            - name: CELLS_CONFIG
              value: etcd://root:inCBdXLttF@etcd.cells.svc.cluster.local:2379/config
            - name: CELLS_VAULT
              value: etcd://root:inCBdXLttF@etcd.cells.svc.cluster.local:2379/vault
            - name: CELLS_REGISTRY
              value: etcd://root:inCBdXLttF@etcd.cells.svc.cluster.local:2379/registry

            - name: CELLS_CACHE
              value: redis://default:tU4ZvyL5DA@redis-master.cells.svc.cluster.local:6379/cache
            - name: CELLS_CERTS_STORE
              value: file:///var/cells/certs
            - name: CADDYPATH
              value: /var/cells
            - name: DISCOVERY_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: etcd-root-password
                  name: etcd
            - name: MARIADB_ROOT_USERNAME
              value: root
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-root-password
                  name: mariadb

            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: redis



          volumeMounts:
            - name: data
              mountPath: /var/cells
            - name: install
              mountPath: /var/cells-install
      volumes:
        - name: install
          configMap:
            name: cells
        - name: data
          persistentVolumeClaim:
            claimName: cells