"use strict";(self.webpackChunkeditor_text=self.webpackChunkeditor_text||[]).push([[9190],{9190:(e,n,a)=>{a.r(n),a.d(n,{default:()=>c});var t=a(6527),p=a(5689),s=a(9713);const d=Object.freeze({displayName:"Ruby Haml",fileTypes:["haml","html.haml"],foldingStartMarker:/^\p{space}*([\-\#\%\.\:\=\p{L}\p{M}\p{N}\p{Pc}][^\n]*)\p{space}(?=\n?$)/dgv,foldingStopMarker:/^\p{space}*(?=\n?$)/dgv,name:"haml",patterns:[{begin:/^(\p{space}*)==/dgv,contentName:"string.quoted.double.ruby",end:/(?=\n?$)\n*/dgv,patterns:[{include:"#interpolated_ruby"}]},{begin:/^(\p{space}*):ruby/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{captures:{1:{name:"punctuation.definition.prolog.haml"}},match:/^(!!!)((?=\n?$)|\p{space}[^\n]*)/dgv,name:"meta.prolog.haml"},{begin:/^(\p{space}*):javascript/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"js.haml",patterns:[{include:"source.js"}]},{begin:/^(\p{space}*)%script/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"js.inline.haml",patterns:[{include:"source.js"}]},{begin:/^(\p{space}*):ruby(?=\n?$)/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{captures:{1:{name:"punctuation.section.comment.haml"}},match:/^(\p{space}*)(\/\[[^\]][^\n]*?(?=\n?$)\n?)/dgv,name:"comment.line.slash.haml"},{begin:/^(\p{space}*)(-#|\/|-\p{space}*\/\*+)/dgv,beginCaptures:{2:{name:"punctuation.section.comment.haml"}},end:/^(?!\1\p{space}+|\n)()/dgv,name:"comment.block.haml",patterns:[{include:"text.haml"}]},{begin:/^\p{space}*(?:((%)([\-\:\p{L}\p{M}\p{N}\p{Pc}]+))|(?=[\#\.]))/dgv,captures:{1:{name:"meta.tag.haml"},2:{name:"punctuation.definition.tag.haml"},3:{name:"entity.name.tag.haml"}},end:/(?=\n?$)|(?![\#\(\.\[\{]|&amp;|[\-\=\~]|!=|&=|\/)/dgv,patterns:[{begin:/==/dgv,contentName:"string.quoted.double.ruby",end:/(?=\n?$)\n?/dgv,patterns:[{include:"#interpolated_ruby"}]},{captures:{1:{name:"entity.other.attribute-name.class"}},match:/(\.[\-\:\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"meta.selector.css"},{captures:{1:{name:"entity.other.attribute-name.id"}},match:/(#[\-\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"meta.selector.css"},{begin:new t.jM("(?<!#)\\{(?=[^\\n]*(,|(do)|[\\{\\|\\}]|(#[^\\n]*)|(?:(?=(\\r\\n?|[\\n\\v\\f\\x85\\u2028\\u2029]))\\4))\\p{space}*)","dgv",{hiddenCaptures:[4]}),end:/\p{space}*\}(?!\p{space}*,)(?!\p{space}*\|)(?!#\{[^\n]*\})/dgv,name:"meta.section.attributes.haml",patterns:[{include:"source.ruby"},{include:"#continuation"},{include:"#rubyline"}]},{begin:/\(/dgv,end:/\)/dgv,name:"meta.section.attributes.plain.haml",patterns:[{match:/([\-\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"constant.other.symbol.ruby"},{match:/=/dgv,name:"punctuation"},{include:"#variables"},{begin:/"/dgv,end:/"/dgv,name:"string.quoted.double.ruby",patterns:[{match:/\\(x\p{AHex}{2}|[012][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|[^\n])/dgv,name:"constant.character.escape.ruby"},{include:"#interpolated_ruby"}]},{include:"#interpolated_ruby"}]},{begin:/\[(?=[^\n]+([\]\,\[\|]|(#[^\n]*))\p{space}*)/dgv,end:/\p{space}*\](?![^\n]*(?!#\[)\])/dgv,name:"meta.section.object.haml",patterns:[{include:"source.ruby"},{include:"#continuation"},{include:"#rubyline"}]},{include:"#interpolated_ruby_line"},{include:"#rubyline"},{match:/\//dgv,name:"punctuation.terminator.tag.haml"}]},{begin:/^(\p{space}*):(ruby|opal)(?=\n?$)/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:/^(\p{space}*):ruby(?=\n?$)/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:/^(\p{space}*):(s(?:tyle|ass))(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.sass.embedded.filter.haml",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*):coffee(script)?/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.coffee.embedded.filter.haml",patterns:[{include:"source.coffee"}]},{begin:/^(\p{space}*):plain(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"text.plain.embedded.filter.haml",patterns:[{include:"text.plain"}]},{begin:/^(\p{space}*)(:ruby)/dgv,beginCaptures:{2:{name:"keyword.control.filter.haml"}},end:/(?<=\n)(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:/^(\p{space}*)(:sass)/dgv,beginCaptures:{2:{name:"keyword.control.filter.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.embedded.filter.sass",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*):(s(?:tyles|ass))(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.sass.embedded.filter.haml",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*):plain(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"text.plain.embedded.filter.haml",patterns:[{include:"text.plain"}]},{captures:{1:{name:"meta.escape.haml"}},match:/^\p{space}*(\.)/dgv},{begin:/^\p{space}*(?=[\-\=\~]|!=|&=)/dgv,end:/(?=\n?$)/dgv,patterns:[{include:"#interpolated_ruby_line"},{include:"#rubyline"}]},{begin:/^(\p{space}*)(:php)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.php",patterns:[{include:"text.html.php#language"}]},{begin:/^(\p{space}*)(:markdown)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.markdown",patterns:[{include:"text.html.markdown"}]},{begin:/^(\p{space}*)(:(css|styles?))(?=\n?$)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.css",patterns:[{include:"source.css"}]},{begin:/^(\p{space}*)(:sass)(?=\n?$)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.sass",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*)(:scss)(?=\n?$)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.scss",patterns:[{include:"source.scss"}]}],repository:{continuation:{captures:{1:{name:"punctuation.separator.continuation.haml"}},match:/(\|)\p{space}*\n/dgv},interpolated_ruby:{patterns:[{captures:{0:{name:"punctuation.section.embedded.ruby"},1:{name:"source.ruby.embedded.source.empty"}},match:/#\{(\})/dgv,name:"source.ruby.embedded.source"},{begin:/#\{/dgv,captures:{0:{name:"punctuation.section.embedded.ruby"}},end:/(\})/dgv,name:"source.ruby.embedded.source",patterns:[{include:"#nest_curly_and_self"},{include:"source.ruby"}]},{include:"#variables"}]},interpolated_ruby_line:{begin:/!?==/dgv,contentName:"string.source.ruby.embedded.haml",end:/(?=\n?$)/dgv,name:"meta.line.ruby.interpolated.haml",patterns:[{include:"#interpolated_ruby"},{include:"source.ruby#escaped_char"}]},nest_curly_and_self:{patterns:[{begin:/\{/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\}/dgv,patterns:[{include:"#nest_curly_and_self"},{include:"source.ruby"}]}]},rubyline:{begin:/(&amp|!)?([\-\=\~])/dgv,contentName:"source.ruby.embedded.haml",end:/((do|\{)( \|[\*\.]+\|)?)(?=\n?$)|(?=\n?$)|^(?![^\n]*\|\p{space}*)(?=\n?$)\n?/dgv,endCaptures:{1:{name:"source.ruby.embedded.html"},2:{name:"keyword.control.ruby.start-block"}},name:"meta.line.ruby.haml",patterns:[{captures:{1:{name:"keyword.control.php"}},match:/\p{space}+((elseif|foreach|switch|declare|default|use))(?=[\(\p{space}])/dgv},{captures:{1:{name:"keyword.control.import.include.php"}},match:/\p{space}+((?:requir|includ)e_once)(?=[\(\p{space}])/dgv},{match:/\p{space}+(catch|try|throw|exception|finally|die)(?=[\(\p{space}]|\n*)/dgv,name:"keyword.control.exception.php"},{captures:{1:{name:"storage.type.function.php"}},match:/\p{space}+(function\p{space}*)((?=\())/dgv},{captures:{1:{name:"keyword.control.php"}},match:/\p{space}+(use\p{space}*)((?=\())/dgv},{match:/([\,\<\|]|do|\{)\p{space}*(#[^\n]*)?(?=\n?$)\n*/dgv,name:"source.ruby",patterns:[{include:"#rubyline"}]},{match:/#[^\n]*(?=\n?$)/dgv,name:"comment.line.number-sign.ruby"},{include:"source.ruby"},{include:"#continuation"}]},variables:{patterns:[{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.instance.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#@@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.class.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#\$)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.global.ruby"}]}},scopeName:"text.haml",embeddedLangs:["javascript","css"],aliases:void 0,embeddedLangsLazy:["ruby","sass","coffee","markdown"]}),c=[...p.default,...s.default,d]}}]);