"use strict";(self.webpackChunkeditor_text=self.webpackChunkeditor_text||[]).push([[4282],{4282:(n,e,t)=>{t.r(e),t.d(e,{default:()=>a});const a=[Object.freeze({displayName:"JSON Lines",name:"jsonl",patterns:[{include:"#value"}],repository:{array:{begin:/\[/dgv,beginCaptures:{0:{name:"punctuation.definition.array.begin.json.lines"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.definition.array.end.json.lines"}},name:"meta.structure.array.json.lines",patterns:[{include:"#value"},{match:/,/dgv,name:"punctuation.separator.array.json.lines"},{match:/[^\]\p{space}]/dgv,name:"invalid.illegal.expected-array-separator.json.lines"}]},comments:{patterns:[{begin:/\/\*\*(?!\/)/dgv,captures:{0:{name:"punctuation.definition.comment.json.lines"}},end:/\*\//dgv,name:"comment.block.documentation.json.lines"},{begin:/\/\*/dgv,captures:{0:{name:"punctuation.definition.comment.json.lines"}},end:/\*\//dgv,name:"comment.block.json.lines"},{captures:{1:{name:"punctuation.definition.comment.json.lines"}},match:/(\/\/)[^\n]*(?=\n?$)\n?/dgv,name:"comment.line.double-slash.js"}]},constant:{match:/\b(?:true|false|null)\b/dgv,name:"constant.language.json.lines"},number:{match:/-?(?:0|[1-9]\p{Nd}*)(?:(?:\.\p{Nd}+)?(?:[Ee][\-\+]?\p{Nd}+)?)?/dgv,name:"constant.numeric.json.lines"},object:{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.definition.dictionary.begin.json.lines"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.definition.dictionary.end.json.lines"}},name:"meta.structure.dictionary.json.lines",patterns:[{include:"#objectkey"},{include:"#comments"},{begin:/:/dgv,beginCaptures:{0:{name:"punctuation.separator.dictionary.key-value.json.lines"}},end:/(,)|(?=\})/dgv,endCaptures:{1:{name:"punctuation.separator.dictionary.pair.json.lines"}},name:"meta.structure.dictionary.value.json.lines",patterns:[{include:"#value"},{match:/[^\,\p{space}]/dgv,name:"invalid.illegal.expected-dictionary-separator.json.lines"}]},{match:/[^\}\p{space}]/dgv,name:"invalid.illegal.expected-dictionary-separator.json.lines"}]},objectkey:{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.support.type.property-name.begin.json.lines"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.support.type.property-name.end.json.lines"}},name:"string.json.lines support.type.property-name.json.lines",patterns:[{include:"#stringcontent"}]},string:{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.json.lines"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.json.lines"}},name:"string.quoted.double.json.lines",patterns:[{include:"#stringcontent"}]},stringcontent:{patterns:[{match:/\\(?:["\/\\bfnrt]|u\p{AHex}{4})/dgv,name:"constant.character.escape.json.lines"},{match:/\\[^\n]/dgv,name:"invalid.illegal.unrecognized-string-escape.json.lines"}]},value:{patterns:[{include:"#constant"},{include:"#number"},{include:"#string"},{include:"#array"},{include:"#object"},{include:"#comments"}]}},scopeName:"source.json.lines",embeddedLangs:void 0,aliases:void 0})]}}]);