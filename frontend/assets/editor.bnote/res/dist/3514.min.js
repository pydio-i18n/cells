"use strict";(self.webpackChunkeditor_text=self.webpackChunkeditor_text||[]).push([[3514],{3514:(e,t,a)=>{a.r(t),a.d(t,{default:()=>n});const n=[Object.freeze({displayName:"Rust",name:"rust",patterns:[{begin:/(<)(\[)/dgv,beginCaptures:{1:{name:"punctuation.brackets.angle.rust"},2:{name:"punctuation.brackets.square.rust"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.brackets.angle.rust"}},patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#gtypes"},{include:"#lvariables"},{include:"#lifetimes"},{include:"#punctuation"},{include:"#types"}]},{captures:{1:{name:"keyword.operator.macro.dollar.rust"},3:{name:"keyword.other.crate.rust"},4:{name:"entity.name.type.metavariable.rust"},6:{name:"keyword.operator.key-value.rust"},7:{name:"variable.other.metavariable.specifier.rust"}},match:/(\$)((crate)|([A-Z][\p{L}\p{M}\p{N}\p{Pc}]*))(\p{space}*(:)\p{space}*(block|expr(?:_2021)?|ident|item|lifetime|literal|meta|pat(?:_param)?|path|stmt|tt|ty|vis)\b)?/dgv,name:"meta.macro.metavariable.type.rust",patterns:[{include:"#keywords"}]},{captures:{1:{name:"keyword.operator.macro.dollar.rust"},2:{name:"variable.other.metavariable.name.rust"},4:{name:"keyword.operator.key-value.rust"},5:{name:"variable.other.metavariable.specifier.rust"}},match:/(\$)([a-z][\p{L}\p{M}\p{N}\p{Pc}]*)(\p{space}*(:)\p{space}*(block|expr(?:_2021)?|ident|item|lifetime|literal|meta|pat(?:_param)?|path|stmt|tt|ty|vis)\b)?/dgv,name:"meta.macro.metavariable.rust",patterns:[{include:"#keywords"}]},{captures:{1:{name:"entity.name.function.macro.rules.rust"},3:{name:"entity.name.function.macro.rust"},4:{name:"entity.name.type.macro.rust"},5:{name:"punctuation.brackets.curly.rust"}},match:/\b(macro_rules!)\p{space}+(([0-9_a-z]+)|([A-Z][0-9_a-z]*))\p{space}+(\{)/dgv,name:"meta.macro.rules.rust"},{captures:{1:{name:"storage.type.rust"},2:{name:"entity.name.module.rust"}},match:/(mod)\p{space}+((?:r#(?!crate|[Ss]elf|super))?[a-z][0-9A-Z_a-z]*)/dgv},{begin:/\b(extern)\p{space}+(crate)/dgv,beginCaptures:{1:{name:"storage.type.rust"},2:{name:"keyword.other.crate.rust"}},end:/;/dgv,endCaptures:{0:{name:"punctuation.semi.rust"}},name:"meta.import.rust",patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#keywords"},{include:"#punctuation"}]},{begin:/\b(use)\p{space}/dgv,beginCaptures:{1:{name:"keyword.other.rust"}},end:/;/dgv,endCaptures:{0:{name:"punctuation.semi.rust"}},name:"meta.use.rust",patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#keywords"},{include:"#namespaces"},{include:"#punctuation"},{include:"#types"},{include:"#lvariables"}]},{include:"#block-comments"},{include:"#comments"},{include:"#attributes"},{include:"#lvariables"},{include:"#constants"},{include:"#gtypes"},{include:"#functions"},{include:"#types"},{include:"#keywords"},{include:"#lifetimes"},{include:"#macros"},{include:"#namespaces"},{include:"#punctuation"},{include:"#strings"},{include:"#variables"}],repository:{attributes:{begin:/(#)(!?)(\[)/dgv,beginCaptures:{1:{name:"punctuation.definition.attribute.rust"},3:{name:"punctuation.brackets.attribute.rust"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.brackets.attribute.rust"}},name:"meta.attribute.rust",patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#keywords"},{include:"#lifetimes"},{include:"#punctuation"},{include:"#strings"},{include:"#gtypes"},{include:"#types"}]},"block-comments":{patterns:[{match:/\/\*\*\//dgv,name:"comment.block.rust"},{begin:/\/\*\*/dgv,end:/\*\//dgv,name:"comment.block.documentation.rust",patterns:[{include:"#block-comments"}]},{begin:/\/\*(?!\*)/dgv,end:/\*\//dgv,name:"comment.block.rust",patterns:[{include:"#block-comments"}]}]},comments:{patterns:[{captures:{1:{name:"punctuation.definition.comment.rust"}},match:/(\/\/\/)[^\n]*(?=\n?$)/dgv,name:"comment.line.documentation.rust"},{captures:{1:{name:"punctuation.definition.comment.rust"}},match:/(\/\/)[^\n]*(?=\n?$)/dgv,name:"comment.line.double-slash.rust"}]},constants:{patterns:[{match:/\b[A-Z]{2}[0-9A-Z_]*\b/dgv,name:"constant.other.caps.rust"},{captures:{1:{name:"storage.type.rust"},2:{name:"constant.other.caps.rust"}},match:/\b(const)\p{space}+([A-Z][0-9A-Z_a-z]*)\b/dgv},{captures:{1:{name:"punctuation.separator.dot.decimal.rust"},2:{name:"keyword.operator.exponent.rust"},3:{name:"keyword.operator.exponent.sign.rust"},4:{name:"constant.numeric.decimal.exponent.mantissa.rust"},5:{name:"entity.name.type.numeric.rust"}},match:/\b\p{Nd}[_\p{Nd}]*(\.?)[_\p{Nd}]*(?:([Ee])([\-\+]?)([_\p{Nd}]+))?(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\b/dgv,name:"constant.numeric.decimal.rust"},{captures:{1:{name:"entity.name.type.numeric.rust"}},match:/\b0x[A-F_a-f\p{Nd}]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\b/dgv,name:"constant.numeric.hex.rust"},{captures:{1:{name:"entity.name.type.numeric.rust"}},match:/\b0o[0-7_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\b/dgv,name:"constant.numeric.oct.rust"},{captures:{1:{name:"entity.name.type.numeric.rust"}},match:/\b0b[01_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\b/dgv,name:"constant.numeric.bin.rust"},{match:/\b(true|false)\b/dgv,name:"constant.language.bool.rust"}]},escapes:{captures:{1:{name:"constant.character.escape.backslash.rust"},2:{name:"constant.character.escape.bit.rust"},3:{name:"constant.character.escape.unicode.rust"},4:{name:"constant.character.escape.unicode.punctuation.rust"},5:{name:"constant.character.escape.unicode.punctuation.rust"}},match:/(\\)(?:(x[0-7][A-Fa-f\p{Nd}])|(u(\{)[A-Fa-f\p{Nd}]{4,6}(\}))|[^\n])/dgv,name:"constant.character.escape.rust"},functions:{patterns:[{captures:{1:{name:"keyword.other.rust"},2:{name:"punctuation.brackets.round.rust"}},match:/\b(pub)(\()/dgv},{begin:/\b(fn)\p{space}+((?:r#(?!crate|[Ss]elf|super))?[0-9A-Z_a-z]+)((\()|(<))/dgv,beginCaptures:{1:{name:"keyword.other.fn.rust"},2:{name:"entity.name.function.rust"},4:{name:"punctuation.brackets.round.rust"},5:{name:"punctuation.brackets.angle.rust"}},end:/(\{)|(;)/dgv,endCaptures:{1:{name:"punctuation.brackets.curly.rust"},2:{name:"punctuation.semi.rust"}},name:"meta.function.definition.rust",patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#keywords"},{include:"#lvariables"},{include:"#constants"},{include:"#gtypes"},{include:"#functions"},{include:"#lifetimes"},{include:"#macros"},{include:"#namespaces"},{include:"#punctuation"},{include:"#strings"},{include:"#types"},{include:"#variables"}]},{begin:/((?:r#(?!crate|[Ss]elf|super))?[0-9A-Z_a-z]+)(\()/dgv,beginCaptures:{1:{name:"entity.name.function.rust"},2:{name:"punctuation.brackets.round.rust"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.brackets.round.rust"}},name:"meta.function.call.rust",patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#attributes"},{include:"#keywords"},{include:"#lvariables"},{include:"#constants"},{include:"#gtypes"},{include:"#functions"},{include:"#lifetimes"},{include:"#macros"},{include:"#namespaces"},{include:"#punctuation"},{include:"#strings"},{include:"#types"},{include:"#variables"}]},{begin:/((?:r#(?!crate|[Ss]elf|super))?[0-9A-Z_a-z]+)(?=::<[^\n]*>\()/dgv,beginCaptures:{1:{name:"entity.name.function.rust"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.brackets.round.rust"}},name:"meta.function.call.rust",patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#attributes"},{include:"#keywords"},{include:"#lvariables"},{include:"#constants"},{include:"#gtypes"},{include:"#functions"},{include:"#lifetimes"},{include:"#macros"},{include:"#namespaces"},{include:"#punctuation"},{include:"#strings"},{include:"#types"},{include:"#variables"}]}]},gtypes:{patterns:[{match:/\b(Some|None)\b/dgv,name:"entity.name.type.option.rust"},{match:/\b(Ok|Err)\b/dgv,name:"entity.name.type.result.rust"}]},interpolations:{captures:{1:{name:"punctuation.definition.interpolation.rust"},2:{name:"punctuation.definition.interpolation.rust"}},match:/(\{)[^"\{\}]*(\})/dgv,name:"meta.interpolation.rust"},keywords:{patterns:[{match:/\b(await|break|continue|do|else|for|if|loop|match|return|try|while|yield)\b/dgv,name:"keyword.control.rust"},{match:/\b(extern|let|macro|mod)\b/dgv,name:"keyword.other.rust storage.type.rust"},{match:/\b(const)\b/dgv,name:"storage.modifier.rust"},{match:/\b(type)\b/dgv,name:"keyword.declaration.type.rust storage.type.rust"},{match:/\b(enum)\b/dgv,name:"keyword.declaration.enum.rust storage.type.rust"},{match:/\b(trait)\b/dgv,name:"keyword.declaration.trait.rust storage.type.rust"},{match:/\b(struct)\b/dgv,name:"keyword.declaration.struct.rust storage.type.rust"},{match:/\b(abstract|static)\b/dgv,name:"storage.modifier.rust"},{match:/\b(as|async|become|box|dyn|move|final|gen|impl|in|override|priv|pub|ref|typeof|union|unsafe|unsized|use|virtual|where)\b/dgv,name:"keyword.other.rust"},{match:/\bfn\b/dgv,name:"keyword.other.fn.rust"},{match:/\bcrate\b/dgv,name:"keyword.other.crate.rust"},{match:/\bmut\b/dgv,name:"storage.modifier.mut.rust"},{match:/([\^\|]|\|\||&&|<<|>>|!)(?!=)/dgv,name:"keyword.operator.logical.rust"},{match:/&(?![\&\=])/dgv,name:"keyword.operator.borrow.and.rust"},{match:/((?:[\-\%\&\*\+\/\^\|]|<<|>>)=)/dgv,name:"keyword.operator.assignment.rust"},{match:/(?<![\<\>])=(?![\=\>])/dgv,name:"keyword.operator.assignment.equal.rust"},{match:/(=(=)?(?!>)|!=|<=|(?<!=)>=)/dgv,name:"keyword.operator.comparison.rust"},{match:/(([\%\+]|(\*(?![\p{L}\p{M}\p{N}\p{Pc}])))(?!=))|(-(?!>))|(\/(?!\/))/dgv,name:"keyword.operator.math.rust"},{captures:{1:{name:"punctuation.brackets.round.rust"},2:{name:"punctuation.brackets.square.rust"},3:{name:"punctuation.brackets.curly.rust"},4:{name:"keyword.operator.comparison.rust"},5:{name:"punctuation.brackets.round.rust"},6:{name:"punctuation.brackets.square.rust"},7:{name:"punctuation.brackets.curly.rust"}},match:/(?:\b|(?:(\))|(\])|(\})))[\t ]+([\<\>])[\t ]+(?:\b|(?:(\()|(\[)|(\{)))/dgv},{match:/::/dgv,name:"keyword.operator.namespace.rust"},{captures:{1:{name:"keyword.operator.dereference.rust"}},match:/(\*)(?=[\p{L}\p{M}\p{N}\p{Pc}]+)/dgv},{match:/@/dgv,name:"keyword.operator.subpattern.rust"},{match:/\.(?!\.)/dgv,name:"keyword.operator.access.dot.rust"},{match:/\.{2}([\.\=])?/dgv,name:"keyword.operator.range.rust"},{match:/:(?!:)/dgv,name:"keyword.operator.key-value.rust"},{match:/->|<-/dgv,name:"keyword.operator.arrow.skinny.rust"},{match:/=>/dgv,name:"keyword.operator.arrow.fat.rust"},{match:/\$/dgv,name:"keyword.operator.macro.dollar.rust"},{match:/\?/dgv,name:"keyword.operator.question.rust"}]},lifetimes:{patterns:[{captures:{1:{name:"punctuation.definition.lifetime.rust"},2:{name:"entity.name.type.lifetime.rust"}},match:/(')([A-Z_a-z][0-9A-Z_a-z]*)(?!')\b/dgv},{captures:{1:{name:"keyword.operator.borrow.rust"},2:{name:"punctuation.definition.lifetime.rust"},3:{name:"entity.name.type.lifetime.rust"}},match:/(&)(')([A-Z_a-z][0-9A-Z_a-z]*)(?!')\b/dgv}]},lvariables:{patterns:[{match:/\b[Ss]elf\b/dgv,name:"variable.language.self.rust"},{match:/\bsuper\b/dgv,name:"variable.language.super.rust"}]},macros:{patterns:[{captures:{2:{name:"entity.name.function.macro.rust"},3:{name:"entity.name.type.macro.rust"}},match:/(([_a-z][0-9A-Z_a-z]*!)|([A-Z_][0-9A-Z_a-z]*!))/dgv,name:"meta.macro.rust"}]},namespaces:{patterns:[{captures:{1:{name:"entity.name.namespace.rust"},2:{name:"keyword.operator.namespace.rust"}},match:/(?<![0-9A-Z_a-z])([0-9A-Z_a-z]+)((?<!s(?:uper|elf))::)/dgv}]},punctuation:{patterns:[{match:/,/dgv,name:"punctuation.comma.rust"},{match:/[\{\}]/dgv,name:"punctuation.brackets.curly.rust"},{match:/[\(\)]/dgv,name:"punctuation.brackets.round.rust"},{match:/;/dgv,name:"punctuation.semi.rust"},{match:/[\]\[]/dgv,name:"punctuation.brackets.square.rust"},{match:/(?<!=)[\<\>]/dgv,name:"punctuation.brackets.angle.rust"}]},strings:{patterns:[{begin:/(b?)(")/dgv,beginCaptures:{1:{name:"string.quoted.byte.raw.rust"},2:{name:"punctuation.definition.string.rust"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.definition.string.rust"}},name:"string.quoted.double.rust",patterns:[{include:"#escapes"},{include:"#interpolations"}]},{begin:/(b?r)(#*)(")/dgv,beginCaptures:{1:{name:"string.quoted.byte.raw.rust"},2:{name:"punctuation.definition.string.raw.rust"},3:{name:"punctuation.definition.string.rust"}},end:/(")((?!))/dgv,endCaptures:{1:{name:"punctuation.definition.string.rust"},2:{name:"punctuation.definition.string.raw.rust"}},name:"string.quoted.double.rust"},{begin:/(b)?(')/dgv,beginCaptures:{1:{name:"string.quoted.byte.raw.rust"},2:{name:"punctuation.definition.char.rust"}},end:/'/dgv,endCaptures:{0:{name:"punctuation.definition.char.rust"}},name:"string.quoted.single.char.rust",patterns:[{include:"#escapes"}]}]},types:{patterns:[{captures:{1:{name:"entity.name.type.numeric.rust"}},match:/(?<![A-Za-z])(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)\b/dgv},{begin:/\b(_?[A-Z][0-9A-Z_a-z]*)(<)/dgv,beginCaptures:{1:{name:"entity.name.type.rust"},2:{name:"punctuation.brackets.angle.rust"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.brackets.angle.rust"}},patterns:[{include:"#block-comments"},{include:"#comments"},{include:"#keywords"},{include:"#lvariables"},{include:"#lifetimes"},{include:"#punctuation"},{include:"#types"},{include:"#variables"}]},{match:/\b(bool|char|str)\b/dgv,name:"entity.name.type.primitive.rust"},{captures:{1:{name:"keyword.declaration.trait.rust storage.type.rust"},2:{name:"entity.name.type.trait.rust"}},match:/\b(trait)\p{space}+(_?[A-Z][0-9A-Z_a-z]*)\b/dgv},{captures:{1:{name:"keyword.declaration.struct.rust storage.type.rust"},2:{name:"entity.name.type.struct.rust"}},match:/\b(struct)\p{space}+(_?[A-Z][0-9A-Z_a-z]*)\b/dgv},{captures:{1:{name:"keyword.declaration.enum.rust storage.type.rust"},2:{name:"entity.name.type.enum.rust"}},match:/\b(enum)\p{space}+(_?[A-Z][0-9A-Z_a-z]*)\b/dgv},{captures:{1:{name:"keyword.declaration.type.rust storage.type.rust"},2:{name:"entity.name.type.declaration.rust"}},match:/\b(type)\p{space}+(_?[A-Z][0-9A-Z_a-z]*)\b/dgv},{match:/\b_?[A-Z][0-9A-Z_a-z]*\b(?!!)/dgv,name:"entity.name.type.rust"}]},variables:{patterns:[{match:/\b(?<!(?<!\.)\.)(?:r#(?!(crate|[Ss]elf|super)))?[0-9_a-z]+\b/dgv,name:"variable.other.rust"}]}},scopeName:"source.rust",embeddedLangs:void 0,aliases:["rs"]})]}}]);