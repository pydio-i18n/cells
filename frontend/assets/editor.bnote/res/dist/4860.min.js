"use strict";(self.webpackChunkeditor_text=self.webpackChunkeditor_text||[]).push([[4860],{4860:(e,n,t)=>{t.r(n),t.d(n,{default:()=>d});var a=t(6527),p=t(5689),c=t(9713),i=t(95);const s=Object.freeze({displayName:"Pug",name:"pug",patterns:[{match:/^(!!!|doctype)(\p{space}*[\-0-9A-Z_a-z]+)?/dgv,name:"meta.tag.sgml.doctype.html"},{begin:/^(\p{space}*)\/\/-/dgv,end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"comment.unbuffered.block.pug"},{begin:/^(\p{space}*)\/\//dgv,end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"string.comment.buffered.block.pug",patterns:[{captures:{1:{name:"invalid.illegal.comment.comment.block.pug"}},match:/^\p{space}*(\/\/)(?!-)/dgv,name:"string.comment.buffered.block.pug"}]},{begin:/<!--/dgv,end:/--\p{space}*>/dgv,name:"comment.unbuffered.block.pug",patterns:[{match:/--/dgv,name:"invalid.illegal.comment.comment.block.pug"}]},{begin:/^(\p{space}*)-(?=\n?$)/dgv,end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"source.js",patterns:[{include:"source.js"}]},{begin:/^(\p{space}*)(script)((\.)(?=\n?$)|(?=[^\n]*((text|application)\/javascript|module)[^\n]*\.(?=\n?$)))/dgv,beginCaptures:{2:{name:"entity.name.tag.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"meta.tag.other",patterns:[{begin:/(?=\()/dgyv,end:/(?=\n?$)/dgv,patterns:[{include:"#tag_attributes"}]},{begin:/(?=[\#\.])/dgyv,end:/(?=\n?$)/dgv,patterns:[{include:"#complete_tag"}]},{include:"source.js"}]},{begin:/^(\p{space}*)(style)((\.)(?=\n?$)|(?=[\#\(\.][^\n]*\.(?=\n?$)))/dgv,beginCaptures:{2:{name:"entity.name.tag.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"meta.tag.other",patterns:[{begin:/(?=\()/dgyv,end:/(?=\n?$)/dgv,patterns:[{include:"#tag_attributes"}]},{begin:/(?=[\#\.])/dgyv,end:/(?=\n?$)/dgv,patterns:[{include:"#complete_tag"}]},{include:"source.css"}]},{begin:/^(\p{space}*):(sass)(?=\(|(?=\n?$))/dgv,beginCaptures:{2:{name:"constant.language.name.sass.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"source.sass.filter.pug",patterns:[{include:"#tag_attributes"},{include:"source.sass"}]},{begin:/^(\p{space}*):(scss)(?=\(|(?=\n?$))/dgv,beginCaptures:{2:{name:"constant.language.name.scss.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"source.css.scss.filter.pug",patterns:[{include:"#tag_attributes"},{include:"source.css.scss"}]},{begin:/^(\p{space}*):(less)(?=\(|(?=\n?$))/dgv,beginCaptures:{2:{name:"constant.language.name.less.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"source.less.filter.pug",patterns:[{include:"#tag_attributes"},{include:"source.less"}]},{begin:/^(\p{space}*):(stylus)(?=\(|(?=\n?$))/dgv,beginCaptures:{2:{name:"constant.language.name.stylus.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,patterns:[{include:"#tag_attributes"},{include:"source.stylus"}]},{begin:/^(\p{space}*):(coffee(-?script)?)(?=\(|(?=\n?$))/dgv,beginCaptures:{2:{name:"constant.language.name.coffeescript.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"source.coffeescript.filter.pug",patterns:[{include:"#tag_attributes"},{include:"source.coffee"}]},{begin:/^(\p{space}*):(uglify-js)(?=\(|(?=\n?$))/dgv,beginCaptures:{2:{name:"constant.language.name.js.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,name:"source.js.filter.pug",patterns:[{include:"#tag_attributes"},{include:"source.js"}]},{begin:/^(\p{space}*)((:(?=[^\n]))|(:)(?=\n?$))/dgv,beginCaptures:{4:{name:"invalid.illegal.empty.generic.filter.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,patterns:[{begin:/(?<=:)(?=[^\n])/dgyv,end:/(?=\n?$)/dgv,name:"name.generic.filter.pug",patterns:[{match:/\(/dgyv,name:"invalid.illegal.name.generic.filter.pug"},{match:/[\-\p{L}\p{M}\p{N}\p{Pc}]/dgv,name:"constant.language.name.generic.filter.pug"},{include:"#tag_attributes"},{match:/[^\p{L}\p{M}\p{N}\p{Pc}]/dgv,name:"invalid.illegal.name.generic.filter.pug"}]}]},{begin:/^(\p{space}*)(?:(?=\.(?=\n?$))|(?=[\#\.\p{L}\p{M}\p{N}\p{Pc}][^\n]*?\.(?=\n?$))(?=(?:(?:#[\-\p{L}\p{M}\p{N}\p{Pc}]+|\.[\-\p{L}\p{M}\p{N}\p{Pc}]+)|(?:[\!\#]\{[^\}]*\}|[\p{L}\p{M}\p{N}\p{Pc}](?:[\-\:\p{L}\p{M}\p{N}\p{Pc}]+[\-\p{L}\p{M}\p{N}\p{Pc}]|[\-\p{L}\p{M}\p{N}\p{Pc}]*)))(?:#[\-\p{L}\p{M}\p{N}\p{Pc}]+|\.[\-\p{L}\p{M}\p{N}\p{Pc}]+|(?:\((?:[^"'\(\)]*(?:'(?:[^']|(?<!\\)\\')*'|"(?:[^"]|(?<!\\)\\")*"))*[^\(\)]*\))*)*(?:(?::\p{space}+|(?<=\)))(?:(?:#[\-\p{L}\p{M}\p{N}\p{Pc}]+|\.[\-\p{L}\p{M}\p{N}\p{Pc}]+)|(?:[\!\#]\{[^\}]*\}|[\p{L}\p{M}\p{N}\p{Pc}](?:[\-\:\p{L}\p{M}\p{N}\p{Pc}]+[\-\p{L}\p{M}\p{N}\p{Pc}]|[\-\p{L}\p{M}\p{N}\p{Pc}]*)))(?:#[\-\p{L}\p{M}\p{N}\p{Pc}]+|\.[\-\p{L}\p{M}\p{N}\p{Pc}]+|(?:\((?:[^"'\(\)]*(?:'(?:[^']|(?<!\\)\\')*'|"(?:[^"]|(?<!\\)\\")*"))*[^\(\)]*\))*)*)*\.(?=\n?$))(?:(?:(#[\-\p{L}\p{M}\p{N}\p{Pc}]+)|(\.[\-\p{L}\p{M}\p{N}\p{Pc}]+))|([\!\#]\{[^\}]*\}|[\p{L}\p{M}\p{N}\p{Pc}](?:[\-\:\p{L}\p{M}\p{N}\p{Pc}]+[\-\p{L}\p{M}\p{N}\p{Pc}]|[\-\p{L}\p{M}\p{N}\p{Pc}]*))))/dgv,beginCaptures:{2:{name:"meta.selector.css entity.other.attribute-name.id.css.pug"},3:{name:"meta.selector.css entity.other.attribute-name.class.css.pug"},4:{name:"meta.tag.other entity.name.tag.pug"}},end:/^(?!((?!)\p{space})|\p{space}*(?=\n?$))/dgv,patterns:[{match:/\.(?=\n?$)/dgv,name:"storage.type.function.pug.dot-block-dot"},{include:"#tag_attributes"},{include:"#complete_tag"},{begin:/^(?=[^\n])/dgv,end:/(?=\n?$)/dgv,name:"text.block.pug",patterns:[{include:"#inline_pug"},{include:"#embedded_html"},{include:"#html_entity"},{include:"#interpolated_value"},{include:"#interpolated_error"}]}]},{begin:/^\p{space}*/dgv,end:/(?=\n?$)/dgv,patterns:[{include:"#inline_pug"},{include:"#blocks_and_includes"},{include:"#unbuffered_code"},{include:"#mixin_definition"},{include:"#mixin_call"},{include:"#flow_control"},{include:"#flow_control_each"},{include:"#case_conds"},{begin:/\|/dgv,end:/(?=\n?$)/dgv,name:"text.block.pipe.pug",patterns:[{include:"#inline_pug"},{include:"#embedded_html"},{include:"#html_entity"},{include:"#interpolated_value"},{include:"#interpolated_error"}]},{include:"#printed_expression"},{begin:/(?=(#[^\-\{\p{L}\p{M}\p{N}\p{Pc}])|[^\#\.\p{L}\p{M}\p{N}\p{Pc}])/dgyv,end:/(?=\n?$)/dgv,patterns:[{begin:/<\/?(?=[\!\#])/dgv,end:/>|(?=\n?$)/dgv,patterns:[{include:"#inline_pug"},{include:"#interpolated_value"},{include:"#interpolated_error"}]},{include:"#inline_pug"},{include:"#embedded_html"},{include:"#html_entity"},{include:"#interpolated_value"},{include:"#interpolated_error"}]},{include:"#complete_tag"}]}],repository:{babel_parens:{begin:/\(/dgv,end:/\)|((\{\p{space}*)?)(?=\n?$)/dgv,patterns:[{include:"#babel_parens"},{include:"source.js"}]},blocks_and_includes:{captures:{1:{name:"storage.type.import.include.pug"},4:{name:"variable.control.import.include.pug"}},match:/(extends|include|yield|append|prepend|block( ((?:ap|pre)pend))?)\p{space}+([^\n]*)(?=\n?$)/dgv,name:"meta.first-class.pug"},case_conds:{begin:/(default|when)((\p{space}+|(?=:))|(?=\n?$))/dgv,captures:{1:{name:"storage.type.function.pug"}},end:/(?=\n?$)/dgv,name:"meta.control.flow.pug",patterns:[{begin:/(?!:)/dgyv,end:/(?=:\p{space}+)|(?=\n?$)/dgv,name:"js.embedded.control.flow.pug",patterns:[{include:"#case_when_paren"},{include:"source.js"}]},{begin:/:\p{space}+/dgv,end:/(?=\n?$)/dgv,name:"tag.case.control.flow.pug",patterns:[{include:"#complete_tag"}]}]},case_when_paren:{begin:/\(/dgv,end:/\)/dgv,name:"js.when.control.flow.pug",patterns:[{include:"#case_when_paren"},{match:/:/dgv,name:"invalid.illegal.name.tag.pug"},{include:"source.js"}]},complete_tag:{begin:/(?=[\#\.\p{L}\p{M}\p{N}\p{Pc}])|(:\p{space}*)/dgv,end:/(\.?)(?=\n?$)|(?=:[^\n])/dgv,endCaptures:{1:{name:"storage.type.function.pug.dot-block-dot"}},patterns:[{include:"#blocks_and_includes"},{include:"#unbuffered_code"},{include:"#mixin_call"},{include:"#flow_control"},{include:"#flow_control_each"},{match:/(?<=:)[\p{L}\p{M}\p{N}\p{Pc}][^\n]*(?=\n?$)/dgv,name:"invalid.illegal.name.tag.pug"},{include:"#tag_name"},{include:"#tag_id"},{include:"#tag_classes"},{include:"#tag_attributes"},{include:"#tag_mixin_attributes"},{captures:{2:{name:"invalid.illegal.end.tag.pug"},4:{name:"invalid.illegal.end.tag.pug"}},match:/(?:((\.)\p{space}+)|((:)\p{space}*))(?=\n?$)/dgv},{include:"#printed_expression"},{include:"#tag_text"}]},embedded_html:{begin:/(?=<[^\>]*>)/dgv,end:/(?=\n?$)|(?=>)/dgv,name:"html",patterns:[{include:"text.html.basic"},{include:"#interpolated_value"},{include:"#interpolated_error"}]},flow_control:{begin:/(for|if|else if|else|until|while|unless|case)(\p{space}+|(?=\n?$))/dgv,captures:{1:{name:"storage.type.function.pug"}},end:/(?=\n?$)/dgv,name:"meta.control.flow.pug",patterns:[{begin:"",end:/(?=\n?$)/dgv,name:"js.embedded.control.flow.pug",patterns:[{include:"source.js"}]}]},flow_control_each:{begin:/(each)(\p{space}+|(?=\n?$))/dgv,captures:{1:{name:"storage.type.function.pug"}},end:/(?=\n?$)/dgv,name:"meta.control.flow.pug.each",patterns:[{match:/([\$_\p{L}\p{M}\p{N}\p{Pc}]+)(?:\p{space}*,\p{space}*([\$_\p{L}\p{M}\p{N}\p{Pc}]+))?/dgv,name:"variable.other.pug.each-var"},{begin:"",end:/(?=\n?$)/dgv,name:"js.embedded.control.flow.pug",patterns:[{include:"source.js"}]}]},html_entity:{patterns:[{match:/(&)([0-9A-Za-z]+|#[0-9]+|#x\p{AHex}+)(;)/dgv,name:"constant.character.entity.html.text.pug"},{match:/[\&\<\>]/dgv,name:"invalid.illegal.html_entity.text.pug"}]},inline_pug:{begin:/(?<!\\)(#\[)/dgv,captures:{1:{name:"entity.name.function.pug"},2:{name:"entity.name.function.pug"}},end:/(\])/dgv,name:"inline.pug",patterns:[{include:"#inline_pug"},{include:"#mixin_call"},{begin:/(?<!\])(?=[\#\.\p{L}\p{M}\p{N}\p{Pc}])|(:\p{space}*)/dgv,end:/(?=\]|(:[^\n])|[\=\p{space}])/dgv,name:"tag.inline.pug",patterns:[{include:"#tag_name"},{include:"#tag_id"},{include:"#tag_classes"},{include:"#tag_attributes"},{include:"#tag_mixin_attributes"},{include:"#inline_pug"},{match:/\[/dgv,name:"invalid.illegal.tag.pug"}]},{include:"#unbuffered_code"},{include:"#printed_expression"},{match:/\[/dgv,name:"invalid.illegal.tag.pug"},{include:"#inline_pug_text"}]},inline_pug_text:{begin:"",end:/(?=\])/dgv,patterns:[{begin:/\[/dgv,end:/\]/dgv,patterns:[{include:"#inline_pug_text"}]},{include:"#inline_pug"},{include:"#embedded_html"},{include:"#html_entity"},{include:"#interpolated_value"},{include:"#interpolated_error"}]},interpolated_error:{match:/(?<!\\)[\!\#]\{(?=[^\}]*(?=\n?$))/dgv,name:"invalid.illegal.tag.pug"},interpolated_value:{begin:/(?<!\\)[\!\#]\{(?=[^\n]*?\})/dgv,end:/\}/dgv,name:"string.interpolated.pug",patterns:[{match:/\{/dgv,name:"invalid.illegal.tag.pug"},{include:"source.js"}]},js_braces:{begin:/\{/dgv,end:/\}/dgv,patterns:[{include:"#js_braces"},{include:"source.js"}]},js_brackets:{begin:/\[/dgv,end:/\]/dgv,patterns:[{include:"#js_brackets"},{include:"source.js"}]},js_parens:{begin:/\(/dgv,end:/\)/dgv,patterns:[{include:"#js_parens"},{include:"source.js"}]},mixin_call:{begin:/(mixin\p{space}+|\+)([\-\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,beginCaptures:{1:{name:"storage.type.function.pug"},2:{name:"meta.tag.other entity.name.function.pug"}},end:/(?!\()|(?=\n?$)/dgv,patterns:[{begin:/(?<!\))\(/dgv,end:/\)/dgv,name:"args.mixin.pug",patterns:[{include:"#js_parens"},{captures:{1:{name:"meta.tag.other entity.other.attribute-name.tag.pug"}},match:/([^\(\)\,\/\=\p{space}]+)\p{space}*=\p{space}*/dgv},{include:"source.js"}]},{include:"#tag_attributes"}]},mixin_definition:{captures:{1:{name:"storage.type.function.pug"},2:{name:"meta.tag.other entity.name.function.pug"},3:{name:"punctuation.definition.parameters.begin.js"},4:{name:"variable.parameter.function.js"},5:{name:"punctuation.definition.parameters.begin.js"}},match:/(mixin\p{space}+)([\-\p{L}\p{M}\p{N}\p{Pc}]+)(?:(\()\p{space}*([A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*(?:,\p{space}*[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*)*)(\)))?(?=\n?$)/dgv},printed_expression:{begin:/(!?=)\p{space}*/dgv,captures:{1:{name:"constant"}},end:/(?=\])|(?=\n?$)/dgv,name:"source.js",patterns:[{include:"#js_brackets"},{include:"source.js"}]},tag_attribute_name:{captures:{1:{name:"entity.other.attribute-name.tag.pug"}},match:/([^\!\(\)\,\/\=\p{space}]+)\p{space}*/dgv},tag_attribute_name_paren:{begin:/\(\p{space}*/dgv,end:/\)/dgv,name:"entity.other.attribute-name.tag.pug",patterns:[{include:"#tag_attribute_name_paren"},{include:"#tag_attribute_name"}]},tag_attributes:{begin:/(\(\p{space}*)/dgv,captures:{1:{name:"constant.name.attribute.tag.pug"}},end:/(\))/dgv,name:"meta.tag.other",patterns:[{include:"#tag_attribute_name_paren"},{include:"#tag_attribute_name"},{match:/!(?!=)/dgv,name:"invalid.illegal.tag.pug"},{begin:/=\p{space}*/dgv,end:/(?=\n?$)|(?=,|\p{space}+[^\-\!\%\&\*\+\/\<\>\?\|\~]|\))/dgv,name:"attribute_value",patterns:[{include:"#js_parens"},{include:"#js_brackets"},{include:"#js_braces"},{include:"source.js"}]},{begin:/(?<=[\-\%\&\*\+\/\:\<\>\?\|\~])\p{space}+/dgv,end:/(?=\n?$)|(?=,|\p{space}+[^\-\!\%\&\*\+\/\<\>\?\|\~]|\))/dgv,name:"attribute_value2",patterns:[{include:"#js_parens"},{include:"#js_brackets"},{include:"#js_braces"},{include:"source.js"}]}]},tag_classes:{captures:{1:{name:"invalid.illegal.tag.pug"}},match:/\.([^\-\p{L}\p{M}\p{N}\p{Pc}])?[\-\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"meta.selector.css entity.other.attribute-name.class.css.pug"},tag_id:{match:/#[\-\p{L}\p{M}\p{N}\p{Pc}]+/dgv,name:"meta.selector.css entity.other.attribute-name.id.css.pug"},tag_mixin_attributes:{begin:/(&attributes\()/dgv,captures:{1:{name:"entity.name.function.pug"}},end:/(\))/dgv,name:"meta.tag.other",patterns:[{match:/attributes(?=\))/dgv,name:"storage.type.keyword.pug"},{include:"source.js"}]},tag_name:{begin:/([\!\#]\{(?=[^\n]*?\}))|([\p{L}\p{M}\p{N}\p{Pc}](([\-\:\p{L}\p{M}\p{N}\p{Pc}]+[\-\p{L}\p{M}\p{N}\p{Pc}])|([\-\p{L}\p{M}\p{N}\p{Pc}]*)))/dgv,end:new a.jM("^((?<!\\5[^\\-\\p{L}\\p{M}\\p{N}\\p{Pc}]))|\\}|(?=\\n?$)()()()()","dgv",{strategy:"clip_search"}),name:"meta.tag.other entity.name.tag.pug",patterns:[{begin:/(?<=\{)/dgyv,end:/(?=\})/dgv,name:"meta.tag.other entity.name.tag.pug",patterns:[{match:/\{/dgv,name:"invalid.illegal.tag.pug"},{include:"source.js"}]}]},tag_text:{begin:/(?=[^\n])/dgv,end:/(?=\n?$)/dgv,patterns:[{include:"#inline_pug"},{include:"#embedded_html"},{include:"#html_entity"},{include:"#interpolated_value"},{include:"#interpolated_error"}]},unbuffered_code:{begin:/(-|(([0-9A-Z_a-z]+)\p{space}+=))/dgv,beginCaptures:{3:{name:"variable.parameter.javascript.embedded.pug"}},end:/(?=\])|((\{\p{space}*)?)(?=\n?$)/dgv,name:"source.js",patterns:[{include:"#js_brackets"},{include:"#babel_parens"},{include:"source.js"}]}},scopeName:"text.pug",embeddedLangs:["javascript","css","html"],aliases:["jade"],embeddedLangsLazy:["sass","scss","stylus","coffee"]}),d=[...p.default,...c.default,...i.default,s]}}]);