"use strict";(self.webpackChunkeditor_text=self.webpackChunkeditor_text||[]).push([[439,1038,2063,2545,4460,9190],{439:(e,n,a)=>{a.r(n),a.d(n,{default:()=>u});var t=a(6527),i=a(5689),r=a(4705),p=a(9011),d=a(8446);const c=Object.freeze({displayName:"GraphQL",fileTypes:["graphql","graphqls","gql","graphcool"],name:"graphql",patterns:[{include:"#graphql"}],repository:{graphql:{patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-fragment-definition"},{include:"#graphql-directive-definition"},{include:"#graphql-type-interface"},{include:"#graphql-enum"},{include:"#graphql-scalar"},{include:"#graphql-union"},{include:"#graphql-schema"},{include:"#graphql-operation-def"},{include:"#literal-quasi-embedded"}]},"graphql-ampersand":{captures:{1:{name:"keyword.operator.logical.graphql"}},match:/\p{space}*(&)/dgv},"graphql-arguments":{begin:/\p{space}*(\()/dgv,beginCaptures:{1:{name:"meta.brace.round.directive.graphql"}},end:/\p{space}*(\))/dgv,endCaptures:{1:{name:"meta.brace.round.directive.graphql"}},name:"meta.arguments.graphql",patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{begin:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)\p{space}*(:)/dgv,beginCaptures:{1:{name:"variable.parameter.graphql"},2:{name:"punctuation.colon.graphql"}},end:/(?=\p{space}*(?:([A-Z_a-z][0-9A-Z_a-z]*)\p{space}*(:)|\)))|\p{space}*(,)/dgv,endCaptures:{3:{name:"punctuation.comma.graphql"}},patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-value"},{include:"#graphql-skip-newlines"}]},{include:"#literal-quasi-embedded"}]},"graphql-boolean-value":{captures:{1:{name:"constant.language.boolean.graphql"}},match:/\p{space}*\b(true|false)\b/dgv},"graphql-colon":{captures:{1:{name:"punctuation.colon.graphql"}},match:/\p{space}*(:)/dgv},"graphql-comma":{captures:{1:{name:"punctuation.comma.graphql"}},match:/\p{space}*(,)/dgv},"graphql-comment":{patterns:[{captures:{1:{name:"punctuation.whitespace.comment.leading.graphql"}},match:/(\p{space}*)(#)[^\n]*/dgv,name:"comment.line.graphql.js"},{begin:/(""")/dgv,beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.graphql"}},end:/(""")/dgv,name:"comment.line.graphql.js"},{begin:/(")/dgv,beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.graphql"}},end:/(")/dgv,name:"comment.line.graphql.js"}]},"graphql-description-docstring":{begin:/"""/dgv,end:/"""/dgv,name:"comment.block.graphql"},"graphql-description-singleline":{match:/#(?=([^"]*"[^"]*")*[^"]*(?=\n?$))[^\n]*(?=\n?$)/dgv,name:"comment.line.number-sign.graphql"},"graphql-directive":{applyEndPatternLast:1,begin:/\p{space}*((@)\p{space}*([A-Z_a-z][0-9A-Z_a-z]*))/dgv,beginCaptures:{1:{name:"entity.name.function.directive.graphql"}},end:/(?=[^\n])/dgv,patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-arguments"},{include:"#literal-quasi-embedded"},{include:"#graphql-skip-newlines"}]},"graphql-directive-definition":{applyEndPatternLast:1,begin:/\p{space}*\b(directive)\b\p{space}*(@[A-Z_a-z][0-9A-Z_a-z]*)/dgv,beginCaptures:{1:{name:"keyword.directive.graphql"},2:{name:"entity.name.function.directive.graphql"},3:{name:"keyword.on.graphql"},4:{name:"support.type.graphql"}},end:/(?=[^\n])/dgv,patterns:[{include:"#graphql-variable-definitions"},{applyEndPatternLast:1,begin:/\p{space}*\b(on)\b\p{space}*([A-Z_a-z]*)/dgv,beginCaptures:{1:{name:"keyword.on.graphql"},2:{name:"support.type.location.graphql"}},end:/(?=[^\n])/dgv,patterns:[{include:"#graphql-skip-newlines"},{include:"#graphql-comment"},{include:"#literal-quasi-embedded"},{captures:{2:{name:"support.type.location.graphql"}},match:/\p{space}*(\|)\p{space}*([A-Z_a-z]*)/dgv}]},{include:"#graphql-skip-newlines"},{include:"#graphql-comment"},{include:"#literal-quasi-embedded"}]},"graphql-enum":{begin:new t.jM("(?:(?=(\\p{space}*))\\1)\\b(enum)\\b\\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)","dgv",{hiddenCaptures:[1]}),beginCaptures:{1:{name:"keyword.enum.graphql"},2:{name:"support.type.enum.graphql"}},end:/(?<=\})/dgv,name:"meta.enum.graphql",patterns:[{begin:/\p{space}*(\{)/dgv,beginCaptures:{1:{name:"punctuation.operation.graphql"}},end:/\p{space}*(\})/dgv,endCaptures:{1:{name:"punctuation.operation.graphql"}},name:"meta.type.object.graphql",patterns:[{include:"#graphql-object-type"},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-enum-value"},{include:"#literal-quasi-embedded"}]},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"}]},"graphql-enum-value":{match:/\p{space}*(?!=\b(true|false|null)\b)([A-Z_a-z][0-9A-Z_a-z]*)/dgv,name:"constant.character.enum.graphql"},"graphql-field":{patterns:[{captures:{1:{name:"string.unquoted.alias.graphql"},2:{name:"punctuation.colon.graphql"}},match:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)\p{space}*(:)/dgv},{captures:{1:{name:"variable.graphql"}},match:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv},{include:"#graphql-arguments"},{include:"#graphql-directive"},{include:"#graphql-selection-set"},{include:"#literal-quasi-embedded"},{include:"#graphql-skip-newlines"}]},"graphql-float-value":{captures:{1:{name:"constant.numeric.float.graphql"}},match:/\p{space}*(-?(0|[1-9][0-9]*)(\.[0-9]+)?(([Ee])([\-\+])?[0-9]+)?)/dgv},"graphql-fragment-definition":{begin:/\p{space}*\b(fragment)\b\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)?\p{space}*\b(on)\b\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv,captures:{1:{name:"keyword.fragment.graphql"},2:{name:"entity.name.fragment.graphql"},3:{name:"keyword.on.graphql"},4:{name:"support.type.graphql"}},end:/(?<=\})/dgv,name:"meta.fragment.graphql",patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-selection-set"},{include:"#graphql-directive"},{include:"#graphql-skip-newlines"},{include:"#literal-quasi-embedded"}]},"graphql-fragment-spread":{applyEndPatternLast:1,begin:/\p{space}*(\.\.\.)\p{space}*(?!\bon\b)([A-Z_a-z][0-9A-Z_a-z]*)/dgv,captures:{1:{name:"keyword.operator.spread.graphql"},2:{name:"variable.fragment.graphql"}},end:/(?=[^\n])/dgv,patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-selection-set"},{include:"#graphql-directive"},{include:"#literal-quasi-embedded"},{include:"#graphql-skip-newlines"}]},"graphql-ignore-spaces":{match:/\p{space}*/dgv},"graphql-inline-fragment":{applyEndPatternLast:1,begin:/\p{space}*(\.\.\.)\p{space}*(?:\b(on)\b\p{space}*([A-Z_a-z][0-9A-Z_a-z]*))?/dgv,captures:{1:{name:"keyword.operator.spread.graphql"},2:{name:"keyword.on.graphql"},3:{name:"support.type.graphql"}},end:/(?=[^\n])/dgv,patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-selection-set"},{include:"#graphql-directive"},{include:"#graphql-skip-newlines"},{include:"#literal-quasi-embedded"}]},"graphql-input-types":{patterns:[{include:"#graphql-scalar-type"},{captures:{1:{name:"support.type.graphql"},2:{name:"keyword.operator.nulltype.graphql"}},match:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)(?:\p{space}*(!))?/dgv},{begin:/\p{space}*(\[)/dgv,captures:{1:{name:"meta.brace.square.graphql"},2:{name:"keyword.operator.nulltype.graphql"}},end:/\p{space}*(\])(?:\p{space}*(!))?/dgv,name:"meta.type.list.graphql",patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-input-types"},{include:"#graphql-comma"},{include:"#literal-quasi-embedded"}]}]},"graphql-list-value":{patterns:[{begin:new t.jM("(?:(?=(\\p{space}*))\\1)(\\[)","dgv",{hiddenCaptures:[1]}),beginCaptures:{1:{name:"meta.brace.square.graphql"}},end:/\p{space}*(\])/dgv,endCaptures:{1:{name:"meta.brace.square.graphql"}},name:"meta.listvalues.graphql",patterns:[{include:"#graphql-value"}]}]},"graphql-name":{captures:{1:{name:"entity.name.function.graphql"}},match:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv},"graphql-null-value":{captures:{1:{name:"constant.language.null.graphql"}},match:/\p{space}*\b(null)\b/dgv},"graphql-object-field":{captures:{1:{name:"constant.object.key.graphql"},2:{name:"string.unquoted.graphql"},3:{name:"punctuation.graphql"}},match:/\p{space}*(([A-Z_a-z][0-9A-Z_a-z]*))\p{space}*(:)/dgv},"graphql-object-value":{patterns:[{begin:new t.jM("(?:(?=(\\p{space}*))\\1)(\\{)","dgv",{hiddenCaptures:[1]}),beginCaptures:{1:{name:"meta.brace.curly.graphql"}},end:/\p{space}*(\})/dgv,endCaptures:{1:{name:"meta.brace.curly.graphql"}},name:"meta.objectvalues.graphql",patterns:[{include:"#graphql-object-field"},{include:"#graphql-value"}]}]},"graphql-operation-def":{patterns:[{include:"#graphql-query-mutation"},{include:"#graphql-name"},{include:"#graphql-variable-definitions"},{include:"#graphql-directive"},{include:"#graphql-selection-set"}]},"graphql-query-mutation":{captures:{1:{name:"keyword.operation.graphql"}},match:/\p{space}*\b(query|mutation)\b/dgv},"graphql-scalar":{captures:{1:{name:"keyword.scalar.graphql"},2:{name:"entity.scalar.graphql"}},match:/\p{space}*\b(scalar)\b\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv},"graphql-scalar-type":{captures:{1:{name:"support.type.builtin.graphql"},2:{name:"keyword.operator.nulltype.graphql"}},match:/\p{space}*\b(Int|Float|String|Boolean|ID)\b(?:\p{space}*(!))?/dgv},"graphql-schema":{begin:/\p{space}*\b(schema)\b/dgv,beginCaptures:{1:{name:"keyword.schema.graphql"}},end:/(?<=\})/dgv,patterns:[{begin:/\p{space}*(\{)/dgv,beginCaptures:{1:{name:"punctuation.operation.graphql"}},end:/\p{space}*(\})/dgv,endCaptures:{1:{name:"punctuation.operation.graphql"}},patterns:[{begin:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)(?=\p{space}*\(|:)/dgv,beginCaptures:{1:{name:"variable.arguments.graphql"}},end:/(?=\p{space}*(([A-Z_a-z][0-9A-Z_a-z]*)\p{space}*([\(\:])|(\})))|\p{space}*(,)/dgv,endCaptures:{5:{name:"punctuation.comma.graphql"}},patterns:[{captures:{1:{name:"support.type.graphql"}},match:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-colon"},{include:"#graphql-skip-newlines"}]},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-skip-newlines"}]},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-skip-newlines"}]},"graphql-selection-set":{begin:/\p{space}*(\{)/dgv,beginCaptures:{1:{name:"punctuation.operation.graphql"}},end:/\p{space}*(\})/dgv,endCaptures:{1:{name:"punctuation.operation.graphql"}},name:"meta.selectionset.graphql",patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-field"},{include:"#graphql-fragment-spread"},{include:"#graphql-inline-fragment"},{include:"#graphql-comma"},{include:"#native-interpolation"},{include:"#literal-quasi-embedded"}]},"graphql-skip-newlines":{match:/\p{space}*\n/dgv},"graphql-string-content":{patterns:[{match:/\\["'\/\\bfnrt]/dgv,name:"constant.character.escape.graphql"},{match:/\\u(\p{AHex}{4})/dgv,name:"constant.character.escape.graphql"}]},"graphql-string-value":{begin:new t.jM('(?:(?=(\\p{space}*))\\1)(("))',"dgv",{hiddenCaptures:[1]}),beginCaptures:{1:{name:"string.quoted.double.graphql"},2:{name:"punctuation.definition.string.begin.graphql"}},contentName:"string.quoted.double.graphql",end:new t.jM('(?:(?=(\\p{space}*))\\1)(?:(("))|(\\n))',"dgv",{hiddenCaptures:[1]}),endCaptures:{1:{name:"string.quoted.double.graphql"},2:{name:"punctuation.definition.string.end.graphql"},3:{name:"invalid.illegal.newline.graphql"}},patterns:[{include:"#graphql-string-content"},{include:"#literal-quasi-embedded"}]},"graphql-type-definition":{begin:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)(?=\p{space}*\(|:)/dgv,beginCaptures:{1:{name:"variable.graphql"}},end:/(?=\p{space}*(([A-Z_a-z][0-9A-Z_a-z]*)\p{space}*([\(\:])|(\})))|\p{space}*(,)/dgv,endCaptures:{5:{name:"punctuation.comma.graphql"}},patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-variable-definitions"},{include:"#graphql-type-object"},{include:"#graphql-colon"},{include:"#graphql-input-types"},{include:"#literal-quasi-embedded"}]},"graphql-type-interface":{applyEndPatternLast:1,begin:/\p{space}*\b(?:(extends?)?\b\p{space}*\b(type)|(interface)|(input))\b\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)?/dgv,captures:{1:{name:"keyword.type.graphql"},2:{name:"keyword.type.graphql"},3:{name:"keyword.interface.graphql"},4:{name:"keyword.input.graphql"},5:{name:"support.type.graphql"}},end:/(?=[^\n])/dgv,name:"meta.type.interface.graphql",patterns:[{begin:/\p{space}*\b(implements)\b\p{space}*/dgv,beginCaptures:{1:{name:"keyword.implements.graphql"}},end:/\p{space}*(?=\{)/dgv,patterns:[{captures:{1:{name:"support.type.graphql"}},match:/\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-ampersand"},{include:"#graphql-comma"}]},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-type-object"},{include:"#literal-quasi-embedded"},{include:"#graphql-ignore-spaces"}]},"graphql-type-object":{begin:/\p{space}*(\{)/dgv,beginCaptures:{1:{name:"punctuation.operation.graphql"}},end:/\p{space}*(\})/dgv,endCaptures:{1:{name:"punctuation.operation.graphql"}},name:"meta.type.object.graphql",patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-object-type"},{include:"#graphql-type-definition"},{include:"#literal-quasi-embedded"}]},"graphql-union":{applyEndPatternLast:1,begin:/\p{space}*\b(union)\b\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv,captures:{1:{name:"keyword.union.graphql"},2:{name:"support.type.graphql"}},end:/(?=[^\n])/dgv,patterns:[{applyEndPatternLast:1,begin:/\p{space}*(=)\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv,captures:{1:{name:"punctuation.assignment.graphql"},2:{name:"support.type.graphql"}},end:/(?=[^\n])/dgv,patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-skip-newlines"},{include:"#literal-quasi-embedded"},{captures:{1:{name:"punctuation.or.graphql"},2:{name:"support.type.graphql"}},match:/\p{space}*(\|)\p{space}*([A-Z_a-z][0-9A-Z_a-z]*)/dgv}]},{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-skip-newlines"},{include:"#literal-quasi-embedded"}]},"graphql-union-mark":{captures:{1:{name:"punctuation.union.graphql"}},match:/\p{space}*(\|)/dgv},"graphql-value":{patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-variable-name"},{include:"#graphql-float-value"},{include:"#graphql-string-value"},{include:"#graphql-boolean-value"},{include:"#graphql-null-value"},{include:"#graphql-enum-value"},{include:"#graphql-list-value"},{include:"#graphql-object-value"},{include:"#literal-quasi-embedded"}]},"graphql-variable-assignment":{applyEndPatternLast:1,begin:/\p{space}(=)/dgv,beginCaptures:{1:{name:"punctuation.assignment.graphql"}},end:/(?=[\n\)\,])/dgv,patterns:[{include:"#graphql-value"}]},"graphql-variable-definition":{begin:/\p{space}*(\$?[A-Z_a-z][0-9A-Z_a-z]*)(?=\p{space}*\(|:)/dgv,beginCaptures:{1:{name:"variable.parameter.graphql"}},end:/(?=\p{space}*((\$?[A-Z_a-z][0-9A-Z_a-z]*)\p{space}*([\(\:])|([\)\}])))|\p{space}*(,)/dgv,endCaptures:{5:{name:"punctuation.comma.graphql"}},name:"meta.variables.graphql",patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-directive"},{include:"#graphql-colon"},{include:"#graphql-input-types"},{include:"#graphql-variable-assignment"},{include:"#literal-quasi-embedded"},{include:"#graphql-skip-newlines"}]},"graphql-variable-definitions":{begin:/\p{space}*(\()/dgv,captures:{1:{name:"meta.brace.round.graphql"}},end:/\p{space}*(\))/dgv,patterns:[{include:"#graphql-comment"},{include:"#graphql-description-docstring"},{include:"#graphql-description-singleline"},{include:"#graphql-variable-definition"},{include:"#literal-quasi-embedded"}]},"graphql-variable-name":{captures:{1:{name:"variable.graphql"}},match:/\p{space}*(\$[A-Z_a-z][0-9A-Z_a-z]*)/dgv},"native-interpolation":{begin:/\p{space}*(\$\{)/dgv,beginCaptures:{1:{name:"keyword.other.substitution.begin"}},end:/(\})/dgv,endCaptures:{1:{name:"keyword.other.substitution.end"}},name:"native.interpolation",patterns:[{include:"source.js"},{include:"source.ts"},{include:"source.js.jsx"},{include:"source.tsx"}]}},scopeName:"source.graphql",embeddedLangs:["javascript","typescript","jsx","tsx"],aliases:["gql"]}),u=[...i.default,...r.default,...p.default,...d.default,c]},9190:(e,n,a)=>{a.r(n),a.d(n,{default:()=>d});var t=a(6527),i=a(5689),r=a(9713);const p=Object.freeze({displayName:"Ruby Haml",fileTypes:["haml","html.haml"],foldingStartMarker:/^\p{space}*([\-\#\%\.\:\=\p{L}\p{M}\p{N}\p{Pc}][^\n]*)\p{space}(?=\n?$)/dgv,foldingStopMarker:/^\p{space}*(?=\n?$)/dgv,name:"haml",patterns:[{begin:/^(\p{space}*)==/dgv,contentName:"string.quoted.double.ruby",end:/(?=\n?$)\n*/dgv,patterns:[{include:"#interpolated_ruby"}]},{begin:/^(\p{space}*):ruby/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{captures:{1:{name:"punctuation.definition.prolog.haml"}},match:/^(!!!)((?=\n?$)|\p{space}[^\n]*)/dgv,name:"meta.prolog.haml"},{begin:/^(\p{space}*):javascript/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"js.haml",patterns:[{include:"source.js"}]},{begin:/^(\p{space}*)%script/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"js.inline.haml",patterns:[{include:"source.js"}]},{begin:/^(\p{space}*):ruby(?=\n?$)/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{captures:{1:{name:"punctuation.section.comment.haml"}},match:/^(\p{space}*)(\/\[[^\]][^\n]*?(?=\n?$)\n?)/dgv,name:"comment.line.slash.haml"},{begin:/^(\p{space}*)(-#|\/|-\p{space}*\/\*+)/dgv,beginCaptures:{2:{name:"punctuation.section.comment.haml"}},end:/^(?!\1\p{space}+|\n)()/dgv,name:"comment.block.haml",patterns:[{include:"text.haml"}]},{begin:/^\p{space}*(?:((%)([\-\:\p{L}\p{M}\p{N}\p{Pc}]+))|(?=[\#\.]))/dgv,captures:{1:{name:"meta.tag.haml"},2:{name:"punctuation.definition.tag.haml"},3:{name:"entity.name.tag.haml"}},end:/(?=\n?$)|(?![\#\(\.\[\{]|&amp;|[\-\=\~]|!=|&=|\/)/dgv,patterns:[{begin:/==/dgv,contentName:"string.quoted.double.ruby",end:/(?=\n?$)\n?/dgv,patterns:[{include:"#interpolated_ruby"}]},{captures:{1:{name:"entity.other.attribute-name.class"}},match:/(\.[\-\:\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"meta.selector.css"},{captures:{1:{name:"entity.other.attribute-name.id"}},match:/(#[\-\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"meta.selector.css"},{begin:new t.jM("(?<!#)\\{(?=[^\\n]*(,|(do)|[\\{\\|\\}]|(#[^\\n]*)|(?:(?=(\\r\\n?|[\\n\\v\\f\\x85\\u2028\\u2029]))\\4))\\p{space}*)","dgv",{hiddenCaptures:[4]}),end:/\p{space}*\}(?!\p{space}*,)(?!\p{space}*\|)(?!#\{[^\n]*\})/dgv,name:"meta.section.attributes.haml",patterns:[{include:"source.ruby"},{include:"#continuation"},{include:"#rubyline"}]},{begin:/\(/dgv,end:/\)/dgv,name:"meta.section.attributes.plain.haml",patterns:[{match:/([\-\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"constant.other.symbol.ruby"},{match:/=/dgv,name:"punctuation"},{include:"#variables"},{begin:/"/dgv,end:/"/dgv,name:"string.quoted.double.ruby",patterns:[{match:/\\(x\p{AHex}{2}|[012][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|[^\n])/dgv,name:"constant.character.escape.ruby"},{include:"#interpolated_ruby"}]},{include:"#interpolated_ruby"}]},{begin:/\[(?=[^\n]+([\]\,\[\|]|(#[^\n]*))\p{space}*)/dgv,end:/\p{space}*\](?![^\n]*(?!#\[)\])/dgv,name:"meta.section.object.haml",patterns:[{include:"source.ruby"},{include:"#continuation"},{include:"#rubyline"}]},{include:"#interpolated_ruby_line"},{include:"#rubyline"},{match:/\//dgv,name:"punctuation.terminator.tag.haml"}]},{begin:/^(\p{space}*):(ruby|opal)(?=\n?$)/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:/^(\p{space}*):ruby(?=\n?$)/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:/^(\p{space}*):(s(?:tyle|ass))(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.sass.embedded.filter.haml",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*):coffee(script)?/dgv,end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.coffee.embedded.filter.haml",patterns:[{include:"source.coffee"}]},{begin:/^(\p{space}*):plain(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"text.plain.embedded.filter.haml",patterns:[{include:"text.plain"}]},{begin:/^(\p{space}*)(:ruby)/dgv,beginCaptures:{2:{name:"keyword.control.filter.haml"}},end:/(?<=\n)(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:/^(\p{space}*)(:sass)/dgv,beginCaptures:{2:{name:"keyword.control.filter.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.embedded.filter.sass",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*):(s(?:tyles|ass))(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"source.sass.embedded.filter.haml",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*):plain(?=\n?$)/dgv,end:/^(?=\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"text.plain.embedded.filter.haml",patterns:[{include:"text.plain"}]},{captures:{1:{name:"meta.escape.haml"}},match:/^\p{space}*(\.)/dgv},{begin:/^\p{space}*(?=[\-\=\~]|!=|&=)/dgv,end:/(?=\n?$)/dgv,patterns:[{include:"#interpolated_ruby_line"},{include:"#rubyline"}]},{begin:/^(\p{space}*)(:php)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.php",patterns:[{include:"text.html.php#language"}]},{begin:/^(\p{space}*)(:markdown)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.markdown",patterns:[{include:"text.html.markdown"}]},{begin:/^(\p{space}*)(:(css|styles?))(?=\n?$)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.css",patterns:[{include:"source.css"}]},{begin:/^(\p{space}*)(:sass)(?=\n?$)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.sass",patterns:[{include:"source.sass"}]},{begin:/^(\p{space}*)(:scss)(?=\n?$)/dgv,captures:{2:{name:"entity.name.tag.haml"}},end:/^(?!\1\p{space}+|(?=\n?$)\n*)()/dgv,name:"meta.embedded.scss",patterns:[{include:"source.scss"}]}],repository:{continuation:{captures:{1:{name:"punctuation.separator.continuation.haml"}},match:/(\|)\p{space}*\n/dgv},interpolated_ruby:{patterns:[{captures:{0:{name:"punctuation.section.embedded.ruby"},1:{name:"source.ruby.embedded.source.empty"}},match:/#\{(\})/dgv,name:"source.ruby.embedded.source"},{begin:/#\{/dgv,captures:{0:{name:"punctuation.section.embedded.ruby"}},end:/(\})/dgv,name:"source.ruby.embedded.source",patterns:[{include:"#nest_curly_and_self"},{include:"source.ruby"}]},{include:"#variables"}]},interpolated_ruby_line:{begin:/!?==/dgv,contentName:"string.source.ruby.embedded.haml",end:/(?=\n?$)/dgv,name:"meta.line.ruby.interpolated.haml",patterns:[{include:"#interpolated_ruby"},{include:"source.ruby#escaped_char"}]},nest_curly_and_self:{patterns:[{begin:/\{/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\}/dgv,patterns:[{include:"#nest_curly_and_self"},{include:"source.ruby"}]}]},rubyline:{begin:/(&amp|!)?([\-\=\~])/dgv,contentName:"source.ruby.embedded.haml",end:/((do|\{)( \|[\*\.]+\|)?)(?=\n?$)|(?=\n?$)|^(?![^\n]*\|\p{space}*)(?=\n?$)\n?/dgv,endCaptures:{1:{name:"source.ruby.embedded.html"},2:{name:"keyword.control.ruby.start-block"}},name:"meta.line.ruby.haml",patterns:[{captures:{1:{name:"keyword.control.php"}},match:/\p{space}+((elseif|foreach|switch|declare|default|use))(?=[\(\p{space}])/dgv},{captures:{1:{name:"keyword.control.import.include.php"}},match:/\p{space}+((?:requir|includ)e_once)(?=[\(\p{space}])/dgv},{match:/\p{space}+(catch|try|throw|exception|finally|die)(?=[\(\p{space}]|\n*)/dgv,name:"keyword.control.exception.php"},{captures:{1:{name:"storage.type.function.php"}},match:/\p{space}+(function\p{space}*)((?=\())/dgv},{captures:{1:{name:"keyword.control.php"}},match:/\p{space}+(use\p{space}*)((?=\())/dgv},{match:/([\,\<\|]|do|\{)\p{space}*(#[^\n]*)?(?=\n?$)\n*/dgv,name:"source.ruby",patterns:[{include:"#rubyline"}]},{match:/#[^\n]*(?=\n?$)/dgv,name:"comment.line.number-sign.ruby"},{include:"source.ruby"},{include:"#continuation"}]},variables:{patterns:[{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.instance.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#@@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.class.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#\$)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.global.ruby"}]}},scopeName:"text.haml",embeddedLangs:["javascript","css"],aliases:void 0,embeddedLangsLazy:["ruby","sass","coffee","markdown"]}),d=[...i.default,...r.default,p]},1038:(e,n,a)=>{a.r(n),a.d(n,{default:()=>p});var t=a(6527),i=a(1435);const r=Object.freeze({displayName:"Lua",name:"lua",patterns:[{begin:/\b(?:(local)\p{space}+)?(function)\b(?![\,\:])/dgv,beginCaptures:{1:{name:"keyword.local.lua"},2:{name:"keyword.control.lua"}},end:/(?<=[\-\]"'\)\[\{\}])/dgv,name:"meta.function.lua",patterns:[{include:"#comment"},{begin:/(\()/dgv,beginCaptures:{1:{name:"punctuation.definition.parameters.begin.lua"}},end:/(\))|(?=[\-\]"'\.\[\{\}])/dgv,endCaptures:{1:{name:"punctuation.definition.parameters.finish.lua"}},name:"meta.parameter.lua",patterns:[{include:"#comment"},{match:/[A-Z_a-z][0-9A-Z_a-z]*/dgv,name:"variable.parameter.function.lua"},{match:/,/dgv,name:"punctuation.separator.arguments.lua"},{begin:/:/dgv,beginCaptures:{0:{name:"punctuation.separator.arguments.lua"}},end:/(?=[\)\,])/dgv,patterns:[{include:"#emmydoc.type"}]}]},{match:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b\p{space}*(?=:)/dgv,name:"entity.name.class.lua"},{match:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b/dgv,name:"entity.name.function.lua"}]},{match:/(?<![\.\p{L}\p{M}\p{N}\p{Pc}\p{Nd}])0[Xx]\p{AHex}+(\.\p{AHex}*)?([Ee]-?\p{Nd}*)?([Pp][\-\+]\p{Nd}+)?/dgv,name:"constant.numeric.float.hexadecimal.lua"},{match:/(?<![\.\p{L}\p{M}\p{N}\p{Pc}\p{Nd}])0[Xx]\.\p{AHex}+([Ee]-?\p{Nd}*)?([Pp][\-\+]\p{Nd}+)?/dgv,name:"constant.numeric.float.hexadecimal.lua"},{match:/(?<![\.\p{L}\p{M}\p{N}\p{Pc}\p{Nd}])0[Xx]\p{AHex}+(?![\.0-9EPep])/dgv,name:"constant.numeric.integer.hexadecimal.lua"},{match:/(?<![\.\p{L}\p{M}\p{N}\p{Pc}\p{Nd}])\p{Nd}+(\.\p{Nd}*)?([Ee]-?\p{Nd}*)?/dgv,name:"constant.numeric.float.lua"},{match:/(?<![\.\p{L}\p{M}\p{N}\p{Pc}\p{Nd}])\.\p{Nd}+([Ee]-?\p{Nd}*)?/dgv,name:"constant.numeric.float.lua"},{match:/(?<![\.\p{L}\p{M}\p{N}\p{Pc}\p{Nd}])\p{Nd}+(?![\.0-9EPep])/dgv,name:"constant.numeric.integer.lua"},{include:"#string"},{captures:{1:{name:"punctuation.definition.comment.lua"}},match:/^(#!)[^\n]*(?=\n?$)\n?/dgv,name:"comment.line.shebang.lua"},{include:"#comment"},{captures:{1:{name:"keyword.control.goto.lua"},2:{name:"string.tag.lua"}},match:/\b(goto)\p{space}+([A-Z_a-z][0-9A-Z_a-z]*)/dgv},{captures:{1:{name:"punctuation.section.embedded.begin.lua"},2:{name:"punctuation.section.embedded.end.lua"}},match:/(::)\p{space}*[A-Z_a-z][0-9A-Z_a-z]*\p{space}*(::)/dgv,name:"string.tag.lua"},{captures:{0:{name:"storage.type.attribute.lua"}},match:/<\p{space}*(c(?:onst|lose))\p{space}*>/dgv},{match:/<[\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*>/dgv,name:"storage.type.generic.lua"},{match:/\b(break|do|else|for|if|elseif|goto|return|then|repeat|while|until|end|in)\b/dgv,name:"keyword.control.lua"},{match:/\b(local)\b/dgv,name:"keyword.local.lua"},{match:/\b(function)\b(?![\,\:])/dgv,name:"keyword.control.lua"},{match:/(?<![^\.]\.|:)\b(false|nil(?!:)|true|_ENV|_G|_VERSION|math\.(pi|huge|maxinteger|mininteger)|utf8\.charpattern|io\.(std(?:in|out|err))|package\.(config|cpath|loaded|loaders|path|preload|searchers))\b|(?<!\.)\.{3}(?!\.)/dgv,name:"constant.language.lua"},{match:/(?<![^\.]\.|:)\b(self)\b/dgv,name:"variable.language.self.lua"},{match:/(?<![^\.]\.|:)\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|load|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawlen|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\b(?!\p{space}*=(?!=))/dgv,name:"support.function.lua"},{match:/(?<![^\.]\.|:)\b(async)\b(?!\p{space}*=(?!=))/dgv,name:"entity.name.tag.lua"},{match:/(?<![^\.]\.|:)\b(coroutine\.(create|isyieldable|close|resume|running|status|wrap|yield)|string\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|pack|packsize|rep|reverse|sub|unpack|upper)|table\.(concat|insert|maxn|move|pack|remove|sort|unpack)|math\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?|tointeger|type)|io\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(loadlib|seeall|searchpath)|debug\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|[gs]etuservalue|set[Cc]stacklimit|traceback|upvalueid|upvaluejoin)|bit32\.(arshift|band|bnot|bor|btest|bxor|extract|replace|lrotate|lshift|rrotate|rshift)|utf8\.(char|codes|codepoint|len|offset))\b(?!\p{space}*=(?!=))/dgv,name:"support.function.library.lua"},{match:/\b(and|or|not|\|\||&&|!)\b/dgv,name:"keyword.operator.lua"},{match:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b(?=\p{space}*(?:["'\(\{]|\[\[))/dgv,name:"support.function.any-method.lua"},{match:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b(?=\p{space}*\??:)/dgv,name:"entity.name.class.lua"},{match:/(?<=[^\.]\.|:)\b([A-Z_a-z][0-9A-Z_a-z]*)\b(?!\p{space}*=\p{space}*\b(function)\b)/dgv,name:"entity.other.attribute.lua"},{match:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b(?!\p{space}*=\p{space}*\b(function)\b)/dgv,name:"variable.other.lua"},{match:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b(?=\p{space}*=\p{space}*\b(function)\b)/dgv,name:"entity.name.function.lua"},{match:/[\-\#\%\*\+\/\^]|==?|~=|!=|<=?|>=?|(?<!\.)\.{2}(?!\.)/dgv,name:"keyword.operator.lua"}],repository:{comment:{patterns:[{begin:/(^[\t ]+)?(?=--)/dgv,beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.lua"}},end:new t.jM("(?!^)((?!^)[\\t ]+\\n)?","dgv",{strategy:"clip_search"}),endCaptures:{1:{name:"punctuation.whitespace.comment.trailing.lua"}},patterns:[{begin:/--\[(=*)\[@@@/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.begin.lua"}},end:/(--)?\]\1\]/dgv,endCaptures:{0:{name:"punctuation.definition.comment.end.lua"}},name:"",patterns:[{include:"source.lua"}]},{begin:/--\[(=*)\[/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.begin.lua"}},end:/(--)?\]\1\]/dgv,endCaptures:{0:{name:"punctuation.definition.comment.end.lua"}},name:"comment.block.lua",patterns:[{include:"#emmydoc"},{include:"#ldoc_tag"}]},{begin:/----/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.lua"}},end:/\n/dgv,name:"comment.line.double-dash.lua"},{begin:/---/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.lua"}},end:/\n/dgv,name:"comment.line.double-dash.documentation.lua",patterns:[{include:"#emmydoc"},{include:"#ldoc_tag"}]},{begin:/--/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.lua"}},end:/\n/dgv,name:"comment.line.double-dash.lua",patterns:[{include:"#ldoc_tag"}]}]},{begin:/\/\*/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.begin.lua"}},end:/\*\//dgv,endCaptures:{0:{name:"punctuation.definition.comment.end.lua"}},name:"comment.block.lua",patterns:[{include:"#emmydoc"},{include:"#ldoc_tag"}]}]},emmydoc:{patterns:[{begin:/(?<=---)[\t ]*@class/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{match:/\b([\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*)/dgv,name:"support.class.lua"},{match:/[\,\:]/dgv,name:"keyword.operator.lua"}]},{begin:/(?<=---)[\t ]*@enum/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/\b([\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*)/dgv,beginCaptures:{0:{name:"variable.lua"}},end:/(?=\n)/dgv}]},{begin:/(?<=---)[\t ]*@type/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{include:"#emmydoc.type"}]},{begin:/(?<=---)[\t ]*@alias/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/\b([\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*)/dgv,beginCaptures:{0:{name:"variable.lua"}},end:/(?=[\n\#])/dgv,patterns:[{include:"#emmydoc.type"}]}]},{begin:/(?<=---)[\t ]*(@operator)\p{space}*(\b[a-z]+)?/dgv,beginCaptures:{1:{name:"storage.type.annotation.lua"},2:{name:"support.function.library.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{include:"#emmydoc.type"}]},{begin:/(?<=---)[\t ]*@cast/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/\b([\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*)/dgv,beginCaptures:{0:{name:"variable.other.lua"}},end:/(?=\n)/dgv,patterns:[{include:"#emmydoc.type"},{match:/([\+-\|])/dgv,name:"keyword.operator.lua"}]}]},{begin:/(?<=---)[\t ]*@param/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b(\??)/dgv,beginCaptures:{1:{name:"entity.name.variable.lua"},2:{name:"keyword.operator.lua"}},end:/(?=[\n\#])/dgv,patterns:[{include:"#emmydoc.type"}]}]},{begin:/(?<=---)[\t ]*@return/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{match:/\?/dgv,name:"keyword.operator.lua"},{include:"#emmydoc.type"}]},{begin:/(?<=---)[\t ]*@field/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/(\b([A-Z_a-z][0-9A-Z_a-z]*)\b|(\[))(\??)/dgv,beginCaptures:{2:{name:"entity.name.variable.lua"},3:{name:"keyword.operator.lua"}},end:/(?=[\n\#])/dgv,patterns:[{include:"#string"},{include:"#emmydoc.type"},{match:/\]/dgv,name:"keyword.operator.lua"}]}]},{begin:/(?<=---)[\t ]*@generic/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/\b([A-Z_a-z][0-9A-Z_a-z]*)\b/dgv,beginCaptures:{0:{name:"storage.type.generic.lua"}},end:/(?=\n)|(,)/dgv,endCaptures:{0:{name:"keyword.operator.lua"}},patterns:[{match:/:/dgv,name:"keyword.operator.lua"},{include:"#emmydoc.type"}]}]},{begin:/(?<=---)[\t ]*@vararg/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{include:"#emmydoc.type"}]},{begin:/(?<=---)[\t ]*@overload/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{include:"#emmydoc.type"}]},{begin:/(?<=---)[\t ]*@deprecated/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv},{begin:/(?<=---)[\t ]*@meta/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv},{begin:/(?<=---)[\t ]*@private/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv},{begin:/(?<=---)[\t ]*@protected/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv},{begin:/(?<=---)[\t ]*@package/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv},{begin:/(?<=---)[\t ]*@version/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{match:/\b(5\.1|5\.2|5\.3|5\.4|JIT)\b/dgv,name:"support.class.lua"},{match:/[\,\<\>]/dgv,name:"keyword.operator.lua"}]},{begin:/(?<=---)[\t ]*@see/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{match:/\b([\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*)/dgv,name:"support.class.lua"},{match:/#/dgv,name:"keyword.operator.lua"}]},{begin:/(?<=---)[\t ]*@diagnostic/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{begin:/([\-0-9A-Z_a-z]+)[\t ]*(:)?/dgv,beginCaptures:{1:{name:"keyword.other.unit"},2:{name:"keyword.operator.unit"}},end:/(?=\n)/dgv,patterns:[{match:/\b([\*A-Z_a-z][\-0-9A-Z_a-z]*)/dgv,name:"support.class.lua"},{match:/,/dgv,name:"keyword.operator.lua"}]}]},{begin:/(?<=---)[\t ]*@module/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{include:"#string"}]},{match:/(?<=---)[\t ]*@(async|nodiscard)/dgv,name:"storage.type.annotation.lua"},{begin:/(?<=---)\|\p{space}*[\+\>]?/dgv,beginCaptures:{0:{name:"storage.type.annotation.lua"}},end:/(?=[\n\#\@])/dgv,patterns:[{include:"#string"}]}]},"emmydoc.type":{patterns:[{begin:/\bfun\b/dgv,beginCaptures:{0:{name:"keyword.control.lua"}},end:/(?=[\#\p{space}])/dgv,patterns:[{match:/[\(\)\,\:\?][\t ]*/dgv,name:"keyword.operator.lua"},{match:/([A-Z_a-z][\-\]\*\,\.0-9\<\>A-\[_a-z]*)(?<!,)[\t ]*(?=\??:)/dgv,name:"entity.name.variable.lua"},{include:"#emmydoc.type"},{include:"#string"}]},{match:/<[\*A-Z_a-z][\-\*\.0-9A-Z_a-z]*>/dgv,name:"storage.type.generic.lua"},{match:/\basync\b/dgv,name:"entity.name.tag.lua"},{match:/[\,\:\?\`\{\|\}][\t ]*/dgv,name:"keyword.operator.lua"},{begin:/(?=["'\*\.A-\[_a-z])/dgv,end:/(?=[\#\)\,\:\?\|\}\p{space}])/dgv,patterns:[{match:/([\-\]\*\,\.0-9\<\>A-\[_a-z]+)(?<!,)[\t ]*/dgv,name:"support.type.lua"},{match:/(\.\.\.)[\t ]*/dgv,name:"constant.language.lua"},{include:"#string"}]}]},escaped_char:{patterns:[{match:/\\[\n"'\\abfnrtv]/dgv,name:"constant.character.escape.lua"},{match:/\\z[\t\n ]*/dgv,name:"constant.character.escape.lua"},{match:/\\\p{Nd}{1,3}/dgv,name:"constant.character.escape.byte.lua"},{match:/\\x\p{AHex}\p{AHex}/dgv,name:"constant.character.escape.byte.lua"},{match:/\\u\{\p{AHex}+\}/dgv,name:"constant.character.escape.unicode.lua"},{match:/\\[^\n]/dgv,name:"invalid.illegal.character.escape.lua"}]},ldoc_tag:{captures:{1:{name:"punctuation.definition.block.tag.ldoc"},2:{name:"storage.type.class.ldoc"}},match:/[\t ]*(@)(alias|annotation|author|charset|class|classmod|comment|constructor|copyright|description|example|export|factory|field|file|fixme|function|include|lfunction|license|local|module|name|param|pragma|private|raise|release|return|script|section|see|set|static|submodule|summary|tfield|thread|tparam|treturn|todo|topic|type|usage|warning|within)\b/dgyv},string:{patterns:[{begin:/'/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.lua"}},end:/'[\t ]*|(?=\n)/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.lua"}},name:"string.quoted.single.lua",patterns:[{include:"#escaped_char"}]},{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.lua"}},end:/"[\t ]*|(?=\n)/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.lua"}},name:"string.quoted.double.lua",patterns:[{include:"#escaped_char"}]},{begin:/`/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.lua"}},end:/`[\t ]*|(?=\n)/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.lua"}},name:"string.quoted.double.lua"},{begin:/(?<=\.cdef)\p{space}*(\[(=*)\[)/dgv,beginCaptures:{0:{name:"string.quoted.other.multiline.lua"},1:{name:"punctuation.definition.string.begin.lua"}},contentName:"meta.embedded.lua",end:/(\]\2\])[\t ]*()/dgv,endCaptures:{0:{name:"string.quoted.other.multiline.lua"},1:{name:"punctuation.definition.string.end.lua"}},patterns:[{include:"source.c"}]},{begin:/(?<!--)\[(=*)\[/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.lua"}},end:/\]\1\][\t ]*()/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.lua"}},name:"string.quoted.other.multiline.lua"}]}},scopeName:"source.lua",embeddedLangs:["c"],aliases:void 0}),p=[...i.default,r]},4460:(e,n,a)=>{a.r(n),a.d(n,{default:()=>h});var t=a(6527),i=a(95),r=a(9190),p=a(2063),d=a(6368),c=a(439),u=a(9713),s=a(957),l=a(1435),o=a(5689),m=a(2079),g=a(1038),b=a(2545);const y=Object.freeze({displayName:"Ruby",name:"ruby",patterns:[{captures:{1:{name:"keyword.control.class.ruby"},2:{name:"entity.name.type.class.ruby"},5:{name:"punctuation.separator.namespace.ruby"},7:{name:"punctuation.separator.inheritance.ruby"},8:{name:"entity.other.inherited-class.ruby"},11:{name:"punctuation.separator.namespace.ruby"}},match:/\b(class)\p{space}+(([0-9A-Z_a-z]+)((::)[0-9A-Z_a-z]+)*)\p{space}*((<)\p{space}*(([0-9A-Z_a-z]+)((::)[0-9A-Z_a-z]+)*))?/dgv,name:"meta.class.ruby"},{captures:{1:{name:"keyword.control.module.ruby"},2:{name:"entity.name.type.module.ruby"},5:{name:"punctuation.separator.namespace.ruby"}},match:/\b(module)\p{space}+(([0-9A-Z_a-z]+)((::)[0-9A-Z_a-z]+)*)/dgv,name:"meta.module.ruby"},{captures:{1:{name:"keyword.control.class.ruby"},2:{name:"punctuation.separator.inheritance.ruby"}},match:/\b(class)\p{space}*(<<)\p{space}*/dgv,name:"meta.class.ruby"},{match:/(?<!\.)\belse(\p{space})+if\b/dgv,name:"invalid.deprecated.ruby"},{captures:{1:{name:"variable.ruby"},2:{name:"keyword.operator.assignment.augmented.ruby"}},match:/^\p{space}*([_a-z][0-9A-Z_a-z]*)\p{space}*((&&|\|\|)=)/dgv},{captures:{1:{name:"keyword.control.ruby"},3:{name:"variable.ruby"},4:{name:"keyword.operator.assignment.augmented.ruby"}},match:/(?<!\.)\b(case|if|elsif|unless|until|while)\b\p{space}*(\()*?\p{space}*([_a-z][0-9A-Z_a-z]*)\p{space}*((&&|\|\|)=)/dgv},{captures:{1:{name:"variable.ruby"},2:{name:"keyword.operator.assignment.augmented.ruby"}},match:/^\p{space}*([_a-z][0-9A-Z_a-z]*)\p{space}*(([\-\%\*\+\/]|\*\*|[\&\^\|]|<<|>>)=)/dgv},{captures:{1:{name:"keyword.control.ruby"},3:{name:"variable.ruby"},4:{name:"keyword.operator.assignment.augmented.ruby"}},match:/(?<!\.)\b(case|if|elsif|unless|until|while)\b\p{space}*(\()*?\p{space}*([_a-z][0-9A-Z_a-z]*)\p{space}*(([\-\%\*\+\/]|\*\*|[\&\^\|]|<<|>>)=)/dgv},{captures:{1:{name:"variable.ruby"}},match:/^\p{space}*([_a-z][0-9A-Z_a-z]*)\p{space}*(?==[^\=\>])/dgv},{captures:{1:{name:"keyword.control.ruby"},3:{name:"variable.ruby"}},match:/(?<!\.)\b(case|if|elsif|unless|until|while)\b\p{space}*(\()*?\p{space}*([_a-z][0-9A-Z_a-z]*)\p{space}*=[^\=\>]/dgv},{captures:{1:{name:"punctuation.definition.constant.hashkey.ruby"}},match:new t.jM("(?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*[\\!\\?]?))\\1)(:)(?!:)","dgv",{hiddenCaptures:[1]}),name:"constant.language.symbol.hashkey.ruby"},{captures:{1:{name:"punctuation.definition.constant.ruby"}},match:new t.jM("(?<!:)(:)(?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*[\\!\\?]?))\\2)(?=\\p{space}*=>)","dgv",{hiddenCaptures:[2]}),name:"constant.language.symbol.hashkey.ruby"},{match:/(?<!\.)\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\b(?![\!\?])/dgv,name:"keyword.control.ruby"},{match:/(?<!\.)\bdo\b/dgv,name:"keyword.control.start-block.ruby"},{match:/(?<=\{)(\p{space}+)/dgv,name:"meta.syntax.ruby.start-block"},{match:/(?<!\.)\b(alias|alias_method|break|next|redo|retry|return|super|undef|yield)\b(?![\!\?])|\bdefined\?|\b(block_given|iterator)\?/dgv,name:"keyword.control.pseudo-method.ruby"},{match:/\bnil\b(?![\!\?])/dgv,name:"constant.language.nil.ruby"},{match:/\b(true|false)\b(?![\!\?])/dgv,name:"constant.language.boolean.ruby"},{match:/\b(__(FILE|LINE)__)\b(?![\!\?])/dgv,name:"variable.language.ruby"},{match:/\bself\b(?![\!\?])/dgv,name:"variable.language.self.ruby"},{match:/\b(initialize|new|loop|include|extend|prepend|raise|fail|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\b(?![\!\?])/dgv,name:"keyword.other.special-method.ruby"},{begin:/\b(?<!\.|::)(require(?:|_relative))\b(?![\!\?])/dgv,captures:{1:{name:"keyword.other.special-method.ruby"}},end:/(?=\n?$)|(?=[\#\}])/dgv,name:"meta.require.ruby",patterns:[{include:"$self"}]},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.instance.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(@@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.class.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(\$)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.global.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(\$)([\!\&'\+\@\`]|\p{Nd}+|["\$\*\,\.\/\:-\?\\_\~]|-[0FIadilpv])/dgv,name:"variable.other.readwrite.global.pre-defined.ruby"},{begin:/\b(ENV)\[/dgv,beginCaptures:{1:{name:"variable.other.constant.ruby"}},end:/\]/dgv,name:"meta.environment-variable.ruby",patterns:[{include:"$self"}]},{match:/\b[A-Z][\p{L}\p{M}\p{N}\p{Pc}]*(?=((\.|::)[A-Za-z]|\[))/dgv,name:"support.class.ruby"},{match:/\b((abort|at_exit|autoload|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|printf??|proc|putc|puts|rand|readlines??|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)\b(?![\!\?])|autoload\?|exit!)/dgv,name:"support.function.kernel.ruby"},{match:/\b[A-Z_][\p{L}\p{M}\p{N}\p{Pc}]*\b/dgv,name:"variable.other.constant.ruby"},{begin:/(->)\(/dgv,beginCaptures:{1:{name:"support.function.kernel.ruby"}},end:/\)/dgv,patterns:[{begin:/(?=[\&\*A-Z_a-z])/dgv,end:/(?=[\)\,])/dgv,patterns:[{include:"#method_parameters"}]},{include:"#method_parameters"}]},{begin:new t.jM("(?=def\\b)(?<=^|\\p{space})(def)\\p{space}+((?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=(\\.|::))\\4)))\\3)?(?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=([\\!\\?]|=(?!>)))\\6)?|===?|!=|>[\\=\\>]?|<=>|<[\\<\\=]?|[\\%\\&\\/\\`\\|]|\\*\\*?|=?~|[\\-\\+]@?|\\[\\]=?))\\5))\\p{space}*(\\()","dgv",{hiddenCaptures:[3,4,5,6]}),beginCaptures:{1:{name:"keyword.control.def.ruby"},2:{name:"entity.name.function.ruby"},3:{name:"punctuation.definition.parameters.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.parameters.ruby"}},name:"meta.function.method.with-arguments.ruby",patterns:[{begin:/(?=[\&\*A-Z_a-z])/dgv,end:/(?=[\)\,])/dgv,patterns:[{include:"#method_parameters"}]},{include:"#method_parameters"}]},{begin:new t.jM("(?=def\\b)(?<=^|\\p{space})(def)\\p{space}+((?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=(\\.|::))\\4)))\\3)?(?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=([\\!\\?]|=(?!>)))\\6)?|===?|!=|>[\\=\\>]?|<=>|<[\\<\\=]?|[\\%\\&\\/\\`\\|]|\\*\\*?|=?~|[\\-\\+]@?|\\[\\]=?))\\5))[\\t ](?=[\\t ]*[^\\#\\;\\p{space}])","dgv",{hiddenCaptures:[3,4,5,6]}),beginCaptures:{1:{name:"keyword.control.def.ruby"},2:{name:"entity.name.function.ruby"}},end:/(?=;)|(?<=[\]\!"'\)\?\`\}\p{L}\p{M}\p{N}\p{Pc}])(?=\p{space}*#|\p{space}*(?=\n?$))/dgv,name:"meta.function.method.with-arguments.ruby",patterns:[{begin:/(?=[\&\*A-Z_a-z])/dgv,end:/(?=[\,\;]|\p{space}*#|\p{space}*(?=\n?$))/dgv,patterns:[{include:"#method_parameters"}]},{include:"#method_parameters"}]},{captures:{1:{name:"keyword.control.def.ruby"},3:{name:"entity.name.function.ruby"}},match:new t.jM("(?=def\\b)(?<=^|\\p{space})(def)\\b(\\p{space}+((?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=(\\.|::))\\5)))\\4)?(?:(?=([A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=([\\!\\?]|=(?!>)))\\7)?|===?|!=|>[\\=\\>]?|<=>|<[\\<\\=]?|[\\%\\&\\/\\`\\|]|\\*\\*?|=?~|[\\-\\+]@?|\\[\\]=?))\\6)))?","dgv",{hiddenCaptures:[4,5,6,7]}),name:"meta.function.method.without-arguments.ruby"},{match:new t.jM("\\b(\\p{Nd}(?:(?=(_?\\p{Nd}))\\2)*(\\.(?![^\\p{space}\\p{Nd}])(?:(?=(_?\\p{Nd}))\\4)*)?([Ee][\\-\\+]?\\p{Nd}(?:(?=(_?\\p{Nd}))\\6)*)?|0(?:[Xx]\\p{AHex}(?:(?=(_?\\p{AHex}))\\7)*|[Oo]?[0-7](?:(?=(_?[0-7]))\\8)*|[Bb][01](?:(?=(_?[01]))\\9)*|[Dd]\\p{Nd}(?:(?=(_?\\p{Nd}))\\10)*))\\b","dgv",{hiddenCaptures:[2,4,6,7,8,9,10]}),name:"constant.numeric.ruby"},{begin:/:'/dgv,beginCaptures:{0:{name:"punctuation.definition.symbol.begin.ruby"}},end:/'/dgv,endCaptures:{0:{name:"punctuation.definition.symbol.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\['\\]/dgv,name:"constant.character.escape.ruby"}]},{begin:/:"/dgv,beginCaptures:{0:{name:"punctuation.section.symbol.begin.ruby"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.section.symbol.end.ruby"}},name:"constant.language.symbol.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{match:/(?<!\()\/=/dgv,name:"keyword.operator.assignment.augmented.ruby"},{begin:/'/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/'/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.single.ruby",patterns:[{match:/\\['\\]/dgv,name:"constant.character.escape.ruby"}]},{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.double.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:/(?<!\.)`/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/`/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:new t.jM("(?<![\\)\\p{L}\\p{M}\\p{N}\\p{Pc}])((/))(?![\\*\\+\\?])(?=(?:(?=((?:\\\\/|[^\\/])*))\\3)/[eimnosux]*\\p{space}*(?:[\\]\\#\\)\\,\\.\\:\\?\\}]|\\|\\||&&|<=>|=>|==|=~|!~|!=|;|(?=\\n?$)|if|else|elsif|then|do|end|unless|while|until|or|and)|(?=\\n?$))","dgv",{hiddenCaptures:[3]}),captures:{1:{name:"string.regexp.interpolated.ruby"},2:{name:"punctuation.section.regexp.ruby"}},contentName:"string.regexp.interpolated.ruby",end:/((\/[eimnosux]*))/dgv,patterns:[{include:"#regex_sub"}]},{begin:/%r\{/dgv,beginCaptures:{0:{name:"punctuation.section.regexp.begin.ruby"}},end:/\}[eimnosux]*/dgv,endCaptures:{0:{name:"punctuation.section.regexp.end.ruby"}},name:"string.regexp.interpolated.ruby",patterns:[{include:"#regex_sub"},{include:"#nest_curly_r"}]},{begin:/%r\[/dgv,beginCaptures:{0:{name:"punctuation.section.regexp.begin.ruby"}},end:/\][eimnosux]*/dgv,endCaptures:{0:{name:"punctuation.section.regexp.end.ruby"}},name:"string.regexp.interpolated.ruby",patterns:[{include:"#regex_sub"},{include:"#nest_brackets_r"}]},{begin:/%r\(/dgv,beginCaptures:{0:{name:"punctuation.section.regexp.begin.ruby"}},end:/\)[eimnosux]*/dgv,endCaptures:{0:{name:"punctuation.section.regexp.end.ruby"}},name:"string.regexp.interpolated.ruby",patterns:[{include:"#regex_sub"},{include:"#nest_parens_r"}]},{begin:/%r</dgv,beginCaptures:{0:{name:"punctuation.section.regexp.begin.ruby"}},end:/>[eimnosux]*/dgv,endCaptures:{0:{name:"punctuation.section.regexp.end.ruby"}},name:"string.regexp.interpolated.ruby",patterns:[{include:"#regex_sub"},{include:"#nest_ltgt_r"}]},{begin:/%r([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.section.regexp.begin.ruby"}},end:/\1[eimnosux]*()/dgv,endCaptures:{0:{name:"punctuation.section.regexp.end.ruby"}},name:"string.regexp.interpolated.ruby",patterns:[{include:"#regex_sub"}]},{begin:/%I\[/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_brackets_i"}]},{begin:/%I\(/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_parens_i"}]},{begin:/%I</dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_ltgt_i"}]},{begin:/%I\{/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_curly_i"}]},{begin:/%I([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:/%i\[/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\]\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_brackets"}]},{begin:/%i\(/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\)\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_parens"}]},{begin:/%i</dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\>\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_ltgt"}]},{begin:/%i\{/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\\\}]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_curly"}]},{begin:/%i([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[^\n]/dgv}]},{begin:/%W\[/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_brackets_i"}]},{begin:/%W\(/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_parens_i"}]},{begin:/%W</dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_ltgt_i"}]},{begin:/%W\{/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_curly_i"}]},{begin:/%W([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:/%w\[/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\]\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_brackets"}]},{begin:/%w\(/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\)\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_parens"}]},{begin:/%w</dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\>\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_ltgt"}]},{begin:/%w\{/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\\\}]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_curly"}]},{begin:/%w([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[^\n]/dgv}]},{begin:/%[Qx]?\(/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_parens_i"}]},{begin:/%[Qx]?\[/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_brackets_i"}]},{begin:/%[Qx]?\{/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_curly_i"}]},{begin:/%[Qx]?</dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_ltgt_i"}]},{begin:/%[Qx]([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:/%([^\=\p{L}\p{M}\p{N}\p{Pc}\p{space}])/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.interpolated.ruby",patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:/%q\(/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\)\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_parens"}]},{begin:/%q</dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\>\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_ltgt"}]},{begin:/%q\[/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\]\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_brackets"}]},{begin:/%q\{/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[\\\}]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_curly"}]},{begin:/%q([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.ruby"}},name:"string.quoted.other.ruby",patterns:[{match:/\\[^\n]/dgv}]},{begin:/%s\(/dgv,beginCaptures:{0:{name:"punctuation.definition.symbol.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.symbol.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\)\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_parens"}]},{begin:/%s</dgv,beginCaptures:{0:{name:"punctuation.definition.symbol.begin.ruby"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.definition.symbol.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\>\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_ltgt"}]},{begin:/%s\[/dgv,beginCaptures:{0:{name:"punctuation.definition.symbol.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.definition.symbol.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\]\\]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_brackets"}]},{begin:/%s\{/dgv,beginCaptures:{0:{name:"punctuation.definition.symbol.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.definition.symbol.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[\\\}]/dgv,name:"constant.character.escape.ruby"},{include:"#nest_curly"}]},{begin:/%s([^\p{L}\p{M}\p{N}\p{Pc}])/dgv,beginCaptures:{0:{name:"punctuation.definition.symbol.begin.ruby"}},end:/\1()/dgv,endCaptures:{0:{name:"punctuation.definition.symbol.end.ruby"}},name:"constant.language.symbol.ruby",patterns:[{match:/\\[^\n]/dgv}]},{captures:{1:{name:"punctuation.definition.constant.ruby"}},match:new t.jM("(?<!:)(:)(?:(?=([\\$A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*(?:(?=([\\!\\?]|=(?![\\=\\>])))\\3)?|===?|<=>|>[\\=\\>]?|<[\\<\\=]?|[\\%\\&\\/\\`\\|]|\\*\\*?|=?~|[\\-\\+]@?|\\[\\]=?|@@?[A-Z_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*))\\2)","dgv",{hiddenCaptures:[2,3]}),name:"constant.language.symbol.ruby"},{begin:/^=begin/dgv,captures:{0:{name:"punctuation.definition.comment.ruby"}},end:/^=end/dgv,name:"comment.block.documentation.ruby"},{include:"#yard"},{begin:/(^[\t ]+)?(?=#)/dgv,beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.ruby"}},end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),patterns:[{begin:/#/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.ruby"}},end:/\n/dgv,name:"comment.line.number-sign.ruby"}]},{match:/(?<![\p{L}\p{M}\p{N}\p{Pc}])\?(\\(x\p{AHex}{1,2}(?!\p{AHex})\b|0[0-7]{0,2}(?![0-7])\b|[^0CMx])|(\\[CM]-)+[\p{L}\p{M}\p{N}\p{Pc}]|[^\\\p{space}])/dgv,name:"constant.numeric.ruby"},{begin:/^__END__\n/dgv,captures:{0:{name:"string.unquoted.program-block.ruby"}},contentName:"text.plain",end:/(?=not)impossible/dgv,patterns:[{begin:/(?=<?xml|<[Hh][Tt][Mm][Ll]\b|!DOCTYPE [Hh][Tt][Mm][Ll]\b)/dgv,end:/(?=not)impossible/dgv,name:"text.html.embedded.ruby",patterns:[{include:"text.html.basic"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)HTML)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.html",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)HTML)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"text.html",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"text.html.basic"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)HAML)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.haml",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)HAML)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"text.haml",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"text.haml"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)XML)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.xml",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)XML)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"text.xml",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"text.xml"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)SQL)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.sql",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)SQL)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.sql",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.sql"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)G(?:RAPHQL|QL))\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.graphql",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)G(?:RAPHQL|QL))\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.graphql",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.graphql"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)CSS)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.css",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)CSS)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.css",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.css"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)CPP)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.cpp",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)CPP)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.cpp",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.cpp"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)C)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.c",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)C)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.c",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.c"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)J(?:S|AVASCRIPT))\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.js",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)J(?:S|AVASCRIPT))\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.js",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.js"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)JQUERY)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.js.jquery",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)JQUERY)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.js.jquery",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.js.jquery"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)SH(?:|ELL))\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.shell",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)SH(?:|ELL))\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.shell",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.shell"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)LUA)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.lua",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)LUA)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.lua",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.lua"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)RUBY)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.ruby",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)RUBY)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.ruby",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.ruby"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)YA?ML)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.yaml",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)YA?ML)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"source.yaml",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"source.yaml"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?=(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)SLIM)\\b\\2))\\1))","dgv",{hiddenCaptures:[1]}),end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.embedded.block.slim",patterns:[{begin:new t.jM("(?:(?=(<<[\\-\\~]([\"'\\`]?)((?:[_\\p{L}\\p{M}\\p{N}\\p{Pc}]+_|)SLIM)\\b\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"text.slim",end:/^\p{space}*\2(?=\n?$)\n?()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"text.slim"},{include:"#escaped_char"}]}]},{begin:new t.jM("(?:(?=(=\\p{space}*<<([\"'\\`]?)([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)\\2))\\1)","dgv",{hiddenCaptures:[1]}),beginCaptures:{0:{name:"string.definition.begin.ruby"}},contentName:"string.unquoted.heredoc.ruby",end:/^\2(?=\n?$)()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:new t.jM("(?:(?=(((<<[\\-\\~]([\"'\\`]?)([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)\\4,\\p{space}?)*<<[\\-\\~]([\"'\\`]?)([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)\\6)))\\1)([^\\n]*)","dgv",{hiddenCaptures:[1]}),beginCaptures:{1:{name:"string.definition.begin.ruby"},7:{patterns:[{include:"source.ruby"}]}},contentName:"string.unquoted.heredoc.ruby",end:/^\p{space}*\6(?=\n?$)()()()()()()/dgv,endCaptures:{0:{name:"string.definition.end.ruby"}},patterns:[{include:"#heredoc"},{include:"#interpolated_ruby"},{include:"#escaped_char"}]},{begin:/(?<=\{|\{\p{space}+|[^\$0-\:\@-Z_a-z]do|^do|[^\$0-\:\@-Z_a-z]do\p{space}+|^do\p{space}+)(\|)/dgv,captures:{1:{name:"punctuation.separator.variable.ruby"}},end:/(?<!\|)(\|)(?!\|)/dgv,name:"meta.block.parameters.ruby",patterns:[{begin:/(?![\(\,\|\p{space}])/dgv,end:/(?=,|\|\p{space}*)/dgv,patterns:[{captures:{1:{name:"storage.type.variable.ruby"},2:{name:"variable.other.block.ruby"}},match:/((?:&|\*\*?)?)([A-Z_a-z][_\p{L}\p{M}\p{N}\p{Pc}]*)/dgyv}]},{match:/,/dgv,name:"punctuation.separator.variable.ruby"}]},{match:/=>/dgv,name:"punctuation.separator.key-value"},{match:/->/dgv,name:"support.function.kernel.ruby"},{match:/<<=|%=|&{1,2}=|\*=|\*\*=|\+=|-=|\^=|\|{1,2}=|<</dgv,name:"keyword.operator.assignment.augmented.ruby"},{match:/<=>|<(?![\<\=])|>(?![\<\=\>])|<=|>=|===?|=~|!=|!~|(?<=[\t ])\?/dgv,name:"keyword.operator.comparison.ruby"},{match:/(?<!\.)\b(and|not|or)\b(?![\!\?])/dgv,name:"keyword.operator.logical.ruby"},{match:/(?<=^|[\t \!])!|&&|\|\||\^/dgv,name:"keyword.operator.logical.ruby"},{captures:{1:{name:"keyword.operator.logical.ruby"}},match:/(&\.)\p{space}*(?![A-Z])/dgv},{match:/([\%\&]|\*\*|[\-\*\+\/])/dgv,name:"keyword.operator.arithmetic.ruby"},{match:/=/dgv,name:"keyword.operator.assignment.ruby"},{match:/[\|\~]|>>/dgv,name:"keyword.operator.other.ruby"},{match:/;/dgv,name:"punctuation.separator.statement.ruby"},{match:/,/dgv,name:"punctuation.separator.object.ruby"},{captures:{1:{name:"punctuation.separator.namespace.ruby"}},match:/(::)\p{space}*(?=[A-Z])/dgv},{captures:{1:{name:"punctuation.separator.method.ruby"}},match:/(\.|::)\p{space}*(?![A-Z])/dgv},{match:/:/dgv,name:"punctuation.separator.other.ruby"},{match:/\{/dgv,name:"punctuation.section.scope.begin.ruby"},{match:/\}/dgv,name:"punctuation.section.scope.end.ruby"},{match:/\[/dgv,name:"punctuation.section.array.begin.ruby"},{match:/\]/dgv,name:"punctuation.section.array.end.ruby"},{match:/[\(\)]/dgv,name:"punctuation.section.function.ruby"},{begin:/(?<=[^\.]\.|::)(?=[A-Za-z][\!0-9\?A-Z_a-z]*[^\!0-9\?A-Z_a-z])/dgv,end:/(?<=[\!0-9\?A-Z_a-z])(?=[^\!0-9\?A-Z_a-z])/dgv,name:"meta.function-call.ruby",patterns:[{match:/([A-Za-z][\!0-9\?A-Z_a-z]*)(?=[^\!0-9\?A-Z_a-z])/dgv,name:"entity.name.function.ruby"}]},{begin:/([A-Za-z][\p{L}\p{M}\p{N}\p{Pc}]*[\!\?]?)(\()/dgv,beginCaptures:{1:{name:"entity.name.function.ruby"},2:{name:"punctuation.section.function.ruby"}},end:/(\))/dgv,endCaptures:{1:{name:"punctuation.section.function.ruby"}},name:"meta.function-call.ruby",patterns:[{include:"$self"}]}],repository:{escaped_char:{match:/\\(?:[0-7]{1,3}|x[A-Fa-f\p{Nd}]{1,2}|[^\n])/dgv,name:"constant.character.escape.ruby"},heredoc:{begin:/^<<[\-\~]?[\p{L}\p{M}\p{N}\p{Pc}]+/dgv,end:/(?=\n?$)/dgv,patterns:[{include:"$self"}]},interpolated_ruby:{patterns:[{begin:/#\{/dgv,beginCaptures:{0:{name:"punctuation.section.embedded.begin.ruby"}},contentName:"source.ruby",end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.embedded.end.ruby"}},name:"meta.embedded.line.ruby",patterns:[{include:"#nest_curly_and_self"},{include:"$self"}]},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.instance.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#@@)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.class.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:/(#\$)[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"variable.other.readwrite.global.ruby"}]},method_parameters:{patterns:[{include:"#parens"},{include:"#braces"},{include:"#brackets"},{include:"#params"},{include:"$self"}],repository:{braces:{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.scope.begin.ruby"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.scope.end.ruby"}},patterns:[{include:"#parens"},{include:"#braces"},{include:"#brackets"},{include:"$self"}]},brackets:{begin:/\[/dgv,beginCaptures:{0:{name:"punctuation.section.array.begin.ruby"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.section.array.end.ruby"}},patterns:[{include:"#parens"},{include:"#braces"},{include:"#brackets"},{include:"$self"}]},params:{captures:{1:{name:"storage.type.variable.ruby"},2:{name:"constant.other.symbol.hashkey.parameter.function.ruby"},3:{name:"punctuation.definition.constant.ruby"},4:{name:"variable.parameter.function.ruby"}},match:/(&|\*\*?)?(?:([A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*[\!\?]?(:))|([A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*))/dgyv},parens:{begin:/\(/dgv,beginCaptures:{0:{name:"punctuation.section.function.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.section.function.end.ruby"}},patterns:[{include:"#parens"},{include:"#braces"},{include:"#brackets"},{include:"$self"}]}}},nest_brackets:{begin:/\[/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\]/dgv,patterns:[{include:"#nest_brackets"}]},nest_brackets_i:{begin:/\[/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\]/dgv,patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_brackets_i"}]},nest_brackets_r:{begin:/\[/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\]/dgv,patterns:[{include:"#regex_sub"},{include:"#nest_brackets_r"}]},nest_curly:{begin:/\{/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\}/dgv,patterns:[{include:"#nest_curly"}]},nest_curly_and_self:{patterns:[{begin:/\{/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\}/dgv,patterns:[{include:"#nest_curly_and_self"}]},{include:"$self"}]},nest_curly_i:{begin:/\{/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\}/dgv,patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_curly_i"}]},nest_curly_r:{begin:/\{/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\}/dgv,patterns:[{include:"#regex_sub"},{include:"#nest_curly_r"}]},nest_ltgt:{begin:/</dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/>/dgv,patterns:[{include:"#nest_ltgt"}]},nest_ltgt_i:{begin:/</dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/>/dgv,patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_ltgt_i"}]},nest_ltgt_r:{begin:/</dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/>/dgv,patterns:[{include:"#regex_sub"},{include:"#nest_ltgt_r"}]},nest_parens:{begin:/\(/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\)/dgv,patterns:[{include:"#nest_parens"}]},nest_parens_i:{begin:/\(/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\)/dgv,patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{include:"#nest_parens_i"}]},nest_parens_r:{begin:/\(/dgv,captures:{0:{name:"punctuation.section.scope.ruby"}},end:/\)/dgv,patterns:[{include:"#regex_sub"},{include:"#nest_parens_r"}]},regex_sub:{patterns:[{include:"#interpolated_ruby"},{include:"#escaped_char"},{captures:{1:{name:"punctuation.definition.arbitrary-repetition.ruby"},3:{name:"punctuation.definition.arbitrary-repetition.ruby"}},match:/(\{)\p{Nd}+(,\p{Nd}+)?(\})/dgv,name:"string.regexp.arbitrary-repetition.ruby"},{begin:/\[(?:\^?\])?/dgv,captures:{0:{name:"punctuation.definition.character-class.ruby"}},end:/\]/dgv,name:"string.regexp.character-class.ruby",patterns:[{include:"#escaped_char"}]},{begin:/\(\?#/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.begin.ruby"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.comment.end.ruby"}},name:"comment.line.number-sign.ruby",patterns:[{include:"#escaped_char"}]},{begin:/\(/dgv,captures:{0:{name:"punctuation.definition.group.ruby"}},end:/\)/dgv,name:"string.regexp.group.ruby",patterns:[{include:"#regex_sub"}]},{begin:/(?<=^|\p{space})(#)\p{space}(?=[\-\t \!\,\.0-9\?A-Za-z[^\x00-\x7F]]*(?=\n?$))/dgv,beginCaptures:{1:{name:"punctuation.definition.comment.ruby"}},end:/(?=\n?$)\n?/dgv,endCaptures:{0:{name:"punctuation.definition.comment.ruby"}},name:"comment.line.number-sign.ruby"}]},yard:{patterns:[{include:"#yard_comment"},{include:"#yard_param_types"},{include:"#yard_option"},{include:"#yard_tag"},{include:"#yard_types"},{include:"#yard_directive"},{include:"#yard_see"},{include:"#yard_macro_attribute"}]},yard_comment:{begin:/^(\p{space}*)(#)(\p{space}*)(@)(abstract|api|author|deprecated|example|macro|note|overload|since|todo|version)(?=\p{space}|(?=\n?$))/dgv,beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]},yard_continuation:{match:/^\p{space}*#/dgv,name:"punctuation.definition.comment.ruby"},yard_directive:{begin:/^(\p{space}*)(#)(\p{space}*)(@!)(endgroup|group|method|parse|scope|visibility)(\p{space}+((\[)[^\n]+(\])))?(?=\p{space})/dgv,beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"},7:{name:"comment.line.type.yard.ruby"},8:{name:"comment.line.punctuation.yard.ruby"},9:{name:"comment.line.punctuation.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]},yard_macro_attribute:{begin:/^(\p{space}*)(#)(\p{space}*)(@!)(attribute|macro)(\p{space}+((\[)[^\n]+(\])))?(?=\p{space})(\p{space}+([_a-z][\p{L}\p{M}\p{N}\p{Pc}]*:?))?/dgv,beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"},7:{name:"comment.line.type.yard.ruby"},8:{name:"comment.line.punctuation.yard.ruby"},9:{name:"comment.line.punctuation.yard.ruby"},11:{name:"comment.line.parameter.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]},yard_option:{begin:new t.jM("^(\\p{space}*)(#)(\\p{space}*)(@)(option)(?=\\p{space})(?:(?=(\\p{space}+([_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*:?)))\\6)?(?:(?=(\\p{space}+((\\[)[^\\n]+(\\]))))\\8)?(?:(?=(\\p{space}+((\\P{space}*))))\\12)?(?:(?=(\\p{space}+((\\()[^\\n]+(\\)))))\\15)?","dgv",{hiddenCaptures:[6,8,12,15]}),beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"},6:{name:"comment.line.parameter.yard.ruby"},7:{name:"comment.line.type.yard.ruby"},8:{name:"comment.line.punctuation.yard.ruby"},9:{name:"comment.line.punctuation.yard.ruby"},10:{name:"comment.line.keyword.yard.ruby"},11:{name:"comment.line.hashkey.yard.ruby"},12:{name:"comment.line.defaultvalue.yard.ruby"},13:{name:"comment.line.punctuation.yard.ruby"},14:{name:"comment.line.punctuation.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]},yard_param_types:{begin:new t.jM("^(\\p{space}*)(#)(\\p{space}*)(@)(attr|attr_reader|attr_writer|yieldparam|param)(?=\\p{space})(?:(?=(\\p{space}+(?:(?=(([_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*:?)|((\\[)[^\\n]+(\\]))))\\7)))\\6)?(?:(?=(\\p{space}+(?:(?=(((\\[)[^\\n]+(\\]))|([_a-z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*:?)))\\13)))\\12)?","dgv",{hiddenCaptures:[6,7,12,13]}),beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"},6:{name:"comment.line.parameter.yard.ruby"},7:{name:"comment.line.type.yard.ruby"},8:{name:"comment.line.punctuation.yard.ruby"},9:{name:"comment.line.punctuation.yard.ruby"},10:{name:"comment.line.type.yard.ruby"},11:{name:"comment.line.punctuation.yard.ruby"},12:{name:"comment.line.punctuation.yard.ruby"},13:{name:"comment.line.parameter.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]},yard_see:{begin:/^(\p{space}*)(#)(\p{space}*)(@)(see)(?=\p{space})(\p{space}+([^\n]+?))?(?=\p{space}|(?=\n?$))/dgv,beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"},7:{name:"comment.line.parameter.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]},yard_tag:{captures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"}},match:/^(\p{space}*)(#)(\p{space}*)(@)(private)(?=\n?$)/dgv,name:"comment.line.number-sign.ruby"},yard_types:{begin:/^(\p{space}*)(#)(\p{space}*)(@)(raise|return|yield(?:return)?)(?=\p{space})(\p{space}+((\[)[^\n]+(\])))?/dgv,beginCaptures:{2:{name:"punctuation.definition.comment.ruby"},4:{name:"comment.line.keyword.punctuation.yard.ruby"},5:{name:"comment.line.keyword.yard.ruby"},7:{name:"comment.line.type.yard.ruby"},8:{name:"comment.line.punctuation.yard.ruby"},9:{name:"comment.line.punctuation.yard.ruby"}},contentName:"comment.line.string.yard.ruby",end:/^(?!\p{space}*#\3\p{space}{2,}|\p{space}*#\p{space}*(?=\n?$))()()()/dgv,name:"comment.line.number-sign.ruby",patterns:[{include:"#yard"},{include:"#yard_continuation"}]}},scopeName:"source.ruby",embeddedLangs:["html","haml","xml","sql","graphql","css","cpp","c","javascript","shellscript","lua","yaml"],aliases:["rb"]}),h=[...i.default,...r.default,...p.default,...d.default,...c.default,...u.default,...s.default,...l.default,...o.default,...m.default,...g.default,...b.default,y]},2063:(e,n,a)=>{a.r(n),a.d(n,{default:()=>r});var t=a(4340);const i=Object.freeze({displayName:"XML",name:"xml",patterns:[{begin:/(<\?)\p{space}*([\-0-9A-Z_a-z]+)/dgv,captures:{1:{name:"punctuation.definition.tag.xml"},2:{name:"entity.name.tag.xml"}},end:/(\?>)/dgv,name:"meta.tag.preprocessor.xml",patterns:[{match:/ ([\-A-Za-z]+)/dgv,name:"entity.other.attribute-name.xml"},{include:"#doublequotedString"},{include:"#singlequotedString"}]},{begin:/(<!)(DOCTYPE)\p{space}+([\:A-Z_a-z][\-\.0-\:A-Z_a-z]*)/dgv,captures:{1:{name:"punctuation.definition.tag.xml"},2:{name:"keyword.other.doctype.xml"},3:{name:"variable.language.documentroot.xml"}},end:/\p{space}*(>)/dgv,name:"meta.tag.sgml.doctype.xml",patterns:[{include:"#internalSubset"}]},{include:"#comments"},{begin:/(<)((?:([\-0-9A-Z_a-z]+)(:))?([\-0-\:A-Z_a-z]+))(?=(\p{space}[^\>]*)?><\/\2>)/dgv,beginCaptures:{1:{name:"punctuation.definition.tag.xml"},2:{name:"entity.name.tag.xml"},3:{name:"entity.name.tag.namespace.xml"},4:{name:"punctuation.separator.namespace.xml"},5:{name:"entity.name.tag.localname.xml"}},end:/(>)(<\/)((?:([\-0-9A-Z_a-z]+)(:))?([\-0-\:A-Z_a-z]+))(>)/dgv,endCaptures:{1:{name:"punctuation.definition.tag.xml"},2:{name:"punctuation.definition.tag.xml"},3:{name:"entity.name.tag.xml"},4:{name:"entity.name.tag.namespace.xml"},5:{name:"punctuation.separator.namespace.xml"},6:{name:"entity.name.tag.localname.xml"},7:{name:"punctuation.definition.tag.xml"}},name:"meta.tag.no-content.xml",patterns:[{include:"#tagStuff"}]},{begin:/(<\/?)(?:([\-\.\p{L}\p{M}\p{N}\p{Pc}]+)((:)))?([\-\.\:\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,captures:{1:{name:"punctuation.definition.tag.xml"},2:{name:"entity.name.tag.namespace.xml"},3:{name:"entity.name.tag.xml"},4:{name:"punctuation.separator.namespace.xml"},5:{name:"entity.name.tag.localname.xml"}},end:/(\/?>)/dgv,name:"meta.tag.xml",patterns:[{include:"#tagStuff"}]},{include:"#entity"},{include:"#bare-ampersand"},{begin:/<%@/dgv,beginCaptures:{0:{name:"punctuation.section.embedded.begin.xml"}},end:/%>/dgv,endCaptures:{0:{name:"punctuation.section.embedded.end.xml"}},name:"source.java-props.embedded.xml",patterns:[{match:/page|include|taglib/dgv,name:"keyword.other.page-props.xml"}]},{begin:/<%[\!\=]?(?!--)/dgv,beginCaptures:{0:{name:"punctuation.section.embedded.begin.xml"}},end:/(?!--)%>/dgv,endCaptures:{0:{name:"punctuation.section.embedded.end.xml"}},name:"source.java.embedded.xml",patterns:[{include:"source.java"}]},{begin:/<!\[CDATA\[/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.xml"}},end:/\]\]>/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.xml"}},name:"string.unquoted.cdata.xml"}],repository:{EntityDecl:{begin:/(<!)(ENTITY)\p{space}+(%\p{space}+)?([\:A-Z_a-z][\-\.0-\:A-Z_a-z]*)(\p{space}+(?:SYSTEM|PUBLIC)\p{space}+)?/dgv,captures:{1:{name:"punctuation.definition.tag.xml"},2:{name:"keyword.other.entity.xml"},3:{name:"punctuation.definition.entity.xml"},4:{name:"variable.language.entity.xml"},5:{name:"keyword.other.entitytype.xml"}},end:/(>)/dgv,patterns:[{include:"#doublequotedString"},{include:"#singlequotedString"}]},"bare-ampersand":{match:/&/dgv,name:"invalid.illegal.bad-ampersand.xml"},comments:{patterns:[{begin:/<%--/dgv,captures:{0:{name:"punctuation.definition.comment.xml"},end:"--%>",name:"comment.block.xml"}},{begin:/<!--/dgv,captures:{0:{name:"punctuation.definition.comment.xml"}},end:/-->/dgv,name:"comment.block.xml",patterns:[{begin:/--(?!>)/dgv,captures:{0:{name:"invalid.illegal.bad-comments-or-CDATA.xml"}}}]}]},doublequotedString:{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.xml"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.xml"}},name:"string.quoted.double.xml",patterns:[{include:"#entity"},{include:"#bare-ampersand"}]},entity:{captures:{1:{name:"punctuation.definition.constant.xml"},3:{name:"punctuation.definition.constant.xml"}},match:/(&)([\:A-Z_a-z][\-\.0-\:A-Z_a-z]*|#[0-9]+|#x\p{AHex}+)(;)/dgv,name:"constant.character.entity.xml"},internalSubset:{begin:/(\[)/dgv,captures:{1:{name:"punctuation.definition.constant.xml"}},end:/(\])/dgv,name:"meta.internalsubset.xml",patterns:[{include:"#EntityDecl"},{include:"#parameterEntity"},{include:"#comments"}]},parameterEntity:{captures:{1:{name:"punctuation.definition.constant.xml"},3:{name:"punctuation.definition.constant.xml"}},match:/(%)([\:A-Z_a-z][\-\.0-\:A-Z_a-z]*)(;)/dgv,name:"constant.character.parameter-entity.xml"},singlequotedString:{begin:/'/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.xml"}},end:/'/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.xml"}},name:"string.quoted.single.xml",patterns:[{include:"#entity"},{include:"#bare-ampersand"}]},tagStuff:{patterns:[{captures:{1:{name:"entity.other.attribute-name.namespace.xml"},2:{name:"entity.other.attribute-name.xml"},3:{name:"punctuation.separator.namespace.xml"},4:{name:"entity.other.attribute-name.localname.xml"}},match:/(?:^|\p{space}+)(?:([\-\.\p{L}\p{M}\p{N}\p{Pc}]+)((:)))?([\-\.\:\p{L}\p{M}\p{N}\p{Pc}]+)\p{space}*=/dgv},{include:"#doublequotedString"},{include:"#singlequotedString"}]}},scopeName:"text.xml",embeddedLangs:["java"],aliases:void 0}),r=[...t.default,i]},2545:(e,n,a)=>{a.r(n),a.d(n,{default:()=>i});var t=a(6527);const i=[Object.freeze({displayName:"YAML",fileTypes:["yaml","yml","rviz","reek","clang-format","yaml-tmlanguage","syntax","sublime-syntax"],firstLineMatch:/^%YAML( ?1[^\n]\p{Nd}+)?/dgv,name:"yaml",patterns:[{include:"#comment"},{include:"#property"},{include:"#directive"},{match:/^---/dgv,name:"entity.other.document.begin.yaml"},{match:/^\.{3}/dgv,name:"entity.other.document.end.yaml"},{include:"#node"}],repository:{"block-collection":{patterns:[{include:"#block-sequence"},{include:"#block-mapping"}]},"block-mapping":{patterns:[{include:"#block-pair"}]},"block-node":{patterns:[{include:"#prototype"},{include:"#block-scalar"},{include:"#block-collection"},{include:"#flow-scalar-plain-out"},{include:"#flow-node"}]},"block-pair":{patterns:[{begin:/\?/dgv,beginCaptures:{1:{name:"punctuation.definition.key-value.begin.yaml"}},end:/(?=\?)|^ *(:)|(:)/dgv,endCaptures:{1:{name:"punctuation.separator.key-value.mapping.yaml"},2:{name:"invalid.illegal.expected-newline.yaml"}},name:"meta.block-mapping.yaml",patterns:[{include:"#block-node"}]},{begin:/(?=(?:[^\-\]\!"\#\%\&'\*\,\:\>\?\@\[\`\{\|\}\p{space}]|[\-\:\?]\P{space})([^\:\p{space}]|:\P{space}|\p{space}+(?![\#\p{space}]))*\p{space}*:(\p{space}|(?=\n?$)))/dgv,end:/(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$)))/dgv,patterns:[{include:"#flow-scalar-plain-out-implicit-type"},{begin:/[^\-\]\!"\#\%\&'\*\,\:\>\?\@\[\`\{\|\}\p{space}]|[\-\:\?]\P{space}/dgv,beginCaptures:{0:{name:"entity.name.tag.yaml"}},contentName:"entity.name.tag.yaml",end:/(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$)))/dgv,name:"string.unquoted.plain.out.yaml"}]},{match:/:(?=\p{space}|(?=\n?$))/dgv,name:"punctuation.separator.key-value.mapping.yaml"}]},"block-scalar":{begin:/(?:(\|)|(>))([1-9])?([\-\+])?([^\n]*\n?)/dgv,beginCaptures:{1:{name:"keyword.control.flow.block-scalar.literal.yaml"},2:{name:"keyword.control.flow.block-scalar.folded.yaml"},3:{name:"constant.numeric.indentation-indicator.yaml"},4:{name:"storage.modifier.chomping-indicator.yaml"},5:{patterns:[{include:"#comment"},{match:/[^\n]+/dgv,name:"invalid.illegal.expected-comment-or-newline.yaml"}]}},end:new t.jM("^(?=\\P{space})|(?!^)","dgv",{strategy:"clip_search"}),patterns:[{begin:/^( +)(?! )/dgv,end:/^(?!\1|\p{space}*(?=\n?$))()/dgv,name:"string.unquoted.block.yaml"}]},"block-sequence":{match:/(-)(?!\P{space})/dgv,name:"punctuation.definition.block.sequence.item.yaml"},comment:{begin:/(?:^([\t ]*)|[\t ]+)(?=#[[\P{space}&&\P{Cc}&&\P{Cn}&&\P{Cs}]\p{Zs}]*(?=\n?$))/dgv,beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.yaml"}},end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),patterns:[{begin:/#/dgv,beginCaptures:{0:{name:"punctuation.definition.comment.yaml"}},end:/\n/dgv,name:"comment.line.number-sign.yaml"}]},directive:{begin:/^%/dgv,beginCaptures:{0:{name:"punctuation.definition.directive.begin.yaml"}},end:/(?=(?=\n?$)|[\t ]+((?=\n?$)|#))/dgv,name:"meta.directive.yaml",patterns:[{captures:{1:{name:"keyword.other.directive.yaml.yaml"},2:{name:"constant.numeric.yaml-version.yaml"}},match:/(YAML)[\t ]+(\p{Nd}+\.\p{Nd}+)/dgyv},{captures:{1:{name:"keyword.other.directive.tag.yaml"},2:{name:"storage.type.tag-handle.yaml"},3:{name:"support.type.tag-prefix.yaml"}},match:/(TAG)(?:[\t ]+(!(?:[\-0-9A-Za-z]*!)?)(?:[\t ]+(!(?:%\p{AHex}{2}|[\]\!\#\$\&-\;\=\?-\[_a-z\~])*|(?![\]\!\,\[\{\}])(?:%\p{AHex}{2}|[\]\!\#\$\&-\;\=\?-\[_a-z\~])+))?)?/dgyv},{captures:{1:{name:"support.other.directive.reserved.yaml"},2:{name:"string.unquoted.directive-name.yaml"},3:{name:"string.unquoted.directive-parameter.yaml"}},match:/([\p{L}\p{M}\p{N}\p{Pc}]+)(?:[\t ]+([\p{L}\p{M}\p{N}\p{Pc}]+)(?:[\t ]+([\p{L}\p{M}\p{N}\p{Pc}]+))?)?/dgyv},{match:/\P{space}+/dgv,name:"invalid.illegal.unrecognized.yaml"}]},"flow-alias":{captures:{1:{name:"keyword.control.flow.alias.yaml"},2:{name:"punctuation.definition.alias.yaml"},3:{name:"variable.other.alias.yaml"},4:{name:"invalid.illegal.character.anchor.yaml"}},match:/((\*))([^\]\,\/\[\{\}\p{space}]+)([^\]\,\}\p{space}]\P{space}*)?/dgv},"flow-collection":{patterns:[{include:"#flow-sequence"},{include:"#flow-mapping"}]},"flow-mapping":{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.definition.mapping.begin.yaml"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.definition.mapping.end.yaml"}},name:"meta.flow-mapping.yaml",patterns:[{include:"#prototype"},{match:/,/dgv,name:"punctuation.separator.mapping.yaml"},{include:"#flow-pair"}]},"flow-node":{patterns:[{include:"#prototype"},{include:"#flow-alias"},{include:"#flow-collection"},{include:"#flow-scalar"}]},"flow-pair":{patterns:[{begin:/\?/dgv,beginCaptures:{0:{name:"punctuation.definition.key-value.begin.yaml"}},end:/(?=[\]\,\}])/dgv,name:"meta.flow-pair.explicit.yaml",patterns:[{include:"#prototype"},{include:"#flow-pair"},{include:"#flow-node"},{begin:/:(?=\p{space}|(?=\n?$)|[\]\,\[\{\}])/dgv,beginCaptures:{0:{name:"punctuation.separator.key-value.mapping.yaml"}},end:/(?=[\]\,\}])/dgv,patterns:[{include:"#flow-value"}]}]},{begin:/(?=(?:[^\-\]\!"\#\%\&'\*\,\:\>\?\@\[\`\{\|\}\p{space}]|[\-\:\?][^\]\,\[\{\}\p{space}])([^\]\,\:\[\{\}\p{space}]|:[^\]\,\[\{\}\p{space}]|\p{space}+(?![\#\p{space}]))*\p{space}*:(\p{space}|(?=\n?$)))/dgv,end:/(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$))|\p{space}*:[\]\,\[\{\}]|\p{space}*[\]\,\[\{\}])/dgv,name:"meta.flow-pair.key.yaml",patterns:[{include:"#flow-scalar-plain-in-implicit-type"},{begin:/[^\-\]\!"\#\%\&'\*\,\:\>\?\@\[\`\{\|\}\p{space}]|[\-\:\?][^\]\,\[\{\}\p{space}]/dgv,beginCaptures:{0:{name:"entity.name.tag.yaml"}},contentName:"entity.name.tag.yaml",end:/(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$))|\p{space}*:[\]\,\[\{\}]|\p{space}*[\]\,\[\{\}])/dgv,name:"string.unquoted.plain.in.yaml"}]},{include:"#flow-node"},{begin:/:(?=\p{space}|(?=\n?$)|[\]\,\[\{\}])/dgv,captures:{0:{name:"punctuation.separator.key-value.mapping.yaml"}},end:/(?=[\]\,\}])/dgv,name:"meta.flow-pair.yaml",patterns:[{include:"#flow-value"}]}]},"flow-scalar":{patterns:[{include:"#flow-scalar-double-quoted"},{include:"#flow-scalar-single-quoted"},{include:"#flow-scalar-plain-in"}]},"flow-scalar-double-quoted":{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.yaml"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.yaml"}},name:"string.quoted.double.yaml",patterns:[{match:/\\([ "\/0LN\\_abefnprtv]|x\p{Nd}\p{Nd}|u\p{Nd}{4}|U\p{Nd}{8})/dgv,name:"constant.character.escape.yaml"},{match:/\\\n/dgv,name:"constant.character.escape.double-quoted.newline.yaml"}]},"flow-scalar-plain-in":{patterns:[{include:"#flow-scalar-plain-in-implicit-type"},{begin:/[^\-\]\!"\#\%\&'\*\,\:\>\?\@\[\`\{\|\}\p{space}]|[\-\:\?][^\]\,\[\{\}\p{space}]/dgv,end:/(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$))|\p{space}*:[\]\,\[\{\}]|\p{space}*[\]\,\[\{\}])/dgv,name:"string.unquoted.plain.in.yaml"}]},"flow-scalar-plain-in-implicit-type":{patterns:[{captures:{1:{name:"constant.language.null.yaml"},2:{name:"constant.language.boolean.yaml"},3:{name:"constant.numeric.integer.yaml"},4:{name:"constant.numeric.float.yaml"},5:{name:"constant.other.timestamp.yaml"},6:{name:"constant.language.value.yaml"},7:{name:"constant.language.merge.yaml"}},match:/(?:(null|Null|NULL|~)|([Yy]|yes|Yes|YES|[Nn]|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)|([\-\+]?0b[01_]+|[\-\+]?0[0-7_]+|[\-\+]?(?:0|[1-9][0-9_]*)|[\-\+]?0x[_\p{AHex}]+|[\-\+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)|([\-\+]?(?:[0-9][0-9_]*)?\.[\.0-9]*(?:[Ee][\-\+][0-9]+)?|[\-\+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*|[\-\+]?\.(?:inf|Inf|INF)|\.(?:nan|NaN|NAN))|(\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}|\p{Nd}{4}-\p{Nd}{1,2}-\p{Nd}{1,2}(?:[Tt]|[\t ]+)\p{Nd}{1,2}:\p{Nd}{2}:\p{Nd}{2}(?:\.\p{Nd}*)?(?:[\t ]*Z|[\-\+]\p{Nd}{1,2}(?::\p{Nd}{1,2})?)?)|(=)|(<<))(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$))|\p{space}*:[\]\,\[\{\}]|\p{space}*[\]\,\[\{\}])/dgv}]},"flow-scalar-plain-out":{patterns:[{include:"#flow-scalar-plain-out-implicit-type"},{begin:/[^\-\]\!"\#\%\&'\*\,\:\>\?\@\[\`\{\|\}\p{space}]|[\-\:\?]\P{space}/dgv,end:/(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$)))/dgv,name:"string.unquoted.plain.out.yaml"}]},"flow-scalar-plain-out-implicit-type":{patterns:[{captures:{1:{name:"constant.language.null.yaml"},2:{name:"constant.language.boolean.yaml"},3:{name:"constant.numeric.integer.yaml"},4:{name:"constant.numeric.float.yaml"},5:{name:"constant.other.timestamp.yaml"},6:{name:"constant.language.value.yaml"},7:{name:"constant.language.merge.yaml"}},match:/(?:(null|Null|NULL|~)|([Yy]|yes|Yes|YES|[Nn]|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)|([\-\+]?0b[01_]+|[\-\+]?0[0-7_]+|[\-\+]?(?:0|[1-9][0-9_]*)|[\-\+]?0x[_\p{AHex}]+|[\-\+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)|([\-\+]?(?:[0-9][0-9_]*)?\.[\.0-9]*(?:[Ee][\-\+][0-9]+)?|[\-\+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*|[\-\+]?\.(?:inf|Inf|INF)|\.(?:nan|NaN|NAN))|(\p{Nd}{4}-\p{Nd}{2}-\p{Nd}{2}|\p{Nd}{4}-\p{Nd}{1,2}-\p{Nd}{1,2}(?:[Tt]|[\t ]+)\p{Nd}{1,2}:\p{Nd}{2}:\p{Nd}{2}(?:\.\p{Nd}*)?(?:[\t ]*Z|[\-\+]\p{Nd}{1,2}(?::\p{Nd}{1,2})?)?)|(=)|(<<))(?=\p{space}*(?=\n?$)|\p{space}+#|\p{space}*:(\p{space}|(?=\n?$)))/dgv}]},"flow-scalar-single-quoted":{begin:/'/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.yaml"}},end:/'(?!')/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.yaml"}},name:"string.quoted.single.yaml",patterns:[{match:/''/dgv,name:"constant.character.escape.single-quoted.yaml"}]},"flow-sequence":{begin:/\[/dgv,beginCaptures:{0:{name:"punctuation.definition.sequence.begin.yaml"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.definition.sequence.end.yaml"}},name:"meta.flow-sequence.yaml",patterns:[{include:"#prototype"},{match:/,/dgv,name:"punctuation.separator.sequence.yaml"},{include:"#flow-pair"},{include:"#flow-node"}]},"flow-value":{patterns:[{begin:/(?![\]\,\}])/dgyv,end:/(?=[\]\,\}])/dgv,name:"meta.flow-pair.value.yaml",patterns:[{include:"#flow-node"}]}]},node:{patterns:[{include:"#block-node"}]},property:{begin:/(?=[\!\&])/dgv,end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),name:"meta.property.yaml",patterns:[{captures:{1:{name:"keyword.control.property.anchor.yaml"},2:{name:"punctuation.definition.anchor.yaml"},3:{name:"entity.name.type.anchor.yaml"},4:{name:"invalid.illegal.character.anchor.yaml"}},match:/((&))([^\]\,\/\[\{\}\p{space}]+)(\P{space}+)?/dgyv},{match:/!(?:<(?:%\p{AHex}{2}|[\]\!\#\$\&-\;\=\?-\[_a-z\~])+>|(?:[\-0-9A-Za-z]*!)?(?:%\p{AHex}{2}|[\#\$\&-\+\--\;\=\?-Z_a-z\~])+|)(?=[\t ]|(?=\n?$))/dgyv,name:"storage.type.tag-handle.yaml"},{match:/\P{space}+/dgv,name:"invalid.illegal.tag-handle.yaml"}]},prototype:{patterns:[{include:"#comment"},{include:"#property"}]}},scopeName:"source.yaml",embeddedLangs:void 0,aliases:["yml"]})]}}]);