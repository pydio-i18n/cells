"use strict";(self.webpackChunkeditor_text=self.webpackChunkeditor_text||[]).push([[4340],{4340:(e,a,n)=>{n.r(a),n.d(a,{default:()=>i});var t=n(6527);const i=[Object.freeze({displayName:"Java",name:"java",patterns:[{begin:/\b(package)\b\p{space}*/dgv,beginCaptures:{1:{name:"keyword.other.package.java"}},contentName:"storage.modifier.package.java",end:/\p{space}*(;)/dgv,endCaptures:{1:{name:"punctuation.terminator.java"}},name:"meta.package.java",patterns:[{include:"#comments"},{match:/(?<=\.)\p{space}*\.|\.(?=\p{space}*;)/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/(?<!_)_(?=\p{space}*([\.\;]))|\b\p{Nd}+|-+/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/[A-Z]+/dgv,name:"invalid.deprecated.package_name_not_lowercase.java"},{match:/\b(?<!\$)(abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|non-sealed|package|permits|private|protected|public|return|sealed|short|static|strictfp|super|switch|syncronized|this|throws??|transient|try|void|volatile|while|yield|true|false|null)\b/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/\./dgv,name:"punctuation.separator.java"}]},{begin:/\b(import)\b\p{space}*\b(static)?\b\p{space}/dgv,beginCaptures:{1:{name:"keyword.other.import.java"},2:{name:"storage.modifier.java"}},contentName:"storage.modifier.import.java",end:/\p{space}*(;)/dgv,endCaptures:{1:{name:"punctuation.terminator.java"}},name:"meta.import.java",patterns:[{include:"#comments"},{match:/(?<=\.)\p{space}*\.|\.(?=\p{space}*;)/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/(?<!\.)\p{space}*\*/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/(?<!_)_(?=\p{space}*([\.\;]))|\b\p{Nd}+|-+/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/\b(?<!\$)(abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|non-sealed|package|permits|private|protected|public|return|sealed|short|static|strictfp|super|switch|syncronized|this|throws??|transient|try|void|volatile|while|yield|true|false|null)\b/dgv,name:"invalid.illegal.character_not_allowed_here.java"},{match:/\./dgv,name:"punctuation.separator.java"},{match:/\*/dgv,name:"variable.language.wildcard.java"}]},{include:"#comments-javadoc"},{include:"#code"},{include:"#module"}],repository:{"all-types":{patterns:[{include:"#primitive-arrays"},{include:"#primitive-types"},{include:"#object-types"}]},annotations:{patterns:[{begin:/((@)\p{space}*([^\(\p{space}]+))(\()/dgv,beginCaptures:{2:{name:"punctuation.definition.annotation.java"},3:{name:"storage.type.annotation.java"},4:{name:"punctuation.definition.annotation-arguments.begin.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.annotation-arguments.end.bracket.round.java"}},name:"meta.declaration.annotation.java",patterns:[{captures:{1:{name:"constant.other.key.java"},2:{name:"keyword.operator.assignment.java"}},match:/([\p{L}\p{M}\p{N}\p{Pc}]*)\p{space}*(=)/dgv},{include:"#code"}]},{captures:{1:{name:"punctuation.definition.annotation.java"},2:{name:"storage.modifier.java"},3:{name:"storage.type.annotation.java"},5:{name:"punctuation.definition.annotation.java"},6:{name:"storage.type.annotation.java"}},match:/(@)(interface)\p{space}+([\p{L}\p{M}\p{N}\p{Pc}]*)|((@)\p{space}*([\p{L}\p{M}\p{N}\p{Pc}]+))/dgv,name:"meta.declaration.annotation.java"}]},"anonymous-block-and-instance-initializer":{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.block.begin.bracket.curly.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.block.end.bracket.curly.java"}},patterns:[{include:"#code"}]},"anonymous-classes-and-new":{begin:/\bnew\b/dgv,beginCaptures:{0:{name:"keyword.control.new.java"}},end:/(?=[\]\)-\.\:\;\?\}]|\/(?![\*\/])|[\!\%\&\=\^\|])/dgv,patterns:[{include:"#comments"},{include:"#function-call"},{include:"#all-types"},{begin:/(?<=\))/dgv,end:/(?=[\]\)-\.\:\;\?\}]|\/(?![\*\/])|[\!\%\&\=\^\|])/dgv,patterns:[{include:"#comments"},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.inner-class.begin.bracket.curly.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.inner-class.end.bracket.curly.java"}},name:"meta.inner-class.java",patterns:[{include:"#class-body"}]}]},{begin:/(?<=\])/dgv,end:/(?=[\]\)-\.\:\;\?\}]|\/(?![\*\/])|[\!\%\&\=\^\|])/dgv,patterns:[{include:"#comments"},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.array-initializer.begin.bracket.curly.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.array-initializer.end.bracket.curly.java"}},name:"meta.array-initializer.java",patterns:[{include:"#code"}]}]},{include:"#parens"}]},assertions:{patterns:[{begin:/\b(assert)\p{space}/dgv,beginCaptures:{1:{name:"keyword.control.assert.java"}},end:/(?=\n?$)/dgv,name:"meta.declaration.assertion.java",patterns:[{match:/:/dgv,name:"keyword.operator.assert.expression-separator.java"},{include:"#code"}]}]},class:{begin:/(?=[\p{L}\p{M}\p{N}\p{Pc}]?[\-\p{L}\p{M}\p{N}\p{Pc}\p{space}]*\b(?:class|(?<!@)interface|enum)\p{space}+[\$\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.class.end.bracket.curly.java"}},name:"meta.class.java",patterns:[{include:"#storage-modifiers"},{include:"#generics"},{include:"#comments"},{captures:{1:{name:"storage.modifier.java"},2:{name:"entity.name.type.class.java"}},match:/(class|(?<!@)interface|enum)\p{space}+([\$\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"meta.class.identifier.java"},{begin:/extends/dgv,beginCaptures:{0:{name:"storage.modifier.extends.java"}},end:/(?=\{|implements|permits)/dgv,name:"meta.definition.class.inherited.classes.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:/(implements)\p{space}/dgv,beginCaptures:{1:{name:"storage.modifier.implements.java"}},end:/(?=\p{space}*extends|permits|\{)/dgv,name:"meta.definition.class.implemented.interfaces.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:/(permits)\p{space}/dgv,beginCaptures:{1:{name:"storage.modifier.permits.java"}},end:/(?=\p{space}*extends|implements|\{)/dgv,name:"meta.definition.class.permits.classes.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.class.begin.bracket.curly.java"}},contentName:"meta.class.body.java",end:/(?=\})/dgv,patterns:[{include:"#class-body"}]}]},"class-body":{patterns:[{include:"#comments-javadoc"},{include:"#comments"},{include:"#enums"},{include:"#class"},{include:"#generics"},{include:"#static-initializer"},{include:"#class-fields-and-methods"},{include:"#annotations"},{include:"#storage-modifiers"},{include:"#member-variables"},{include:"#code"}]},"class-fields-and-methods":{patterns:[{begin:/(?==)/dgv,end:/(?=;)/dgv,patterns:[{include:"#code"}]},{include:"#methods"}]},code:{patterns:[{include:"#annotations"},{include:"#comments"},{include:"#enums"},{include:"#class"},{include:"#record"},{include:"#anonymous-block-and-instance-initializer"},{include:"#try-catch-finally"},{include:"#assertions"},{include:"#parens"},{include:"#constants-and-special-vars"},{include:"#numbers"},{include:"#anonymous-classes-and-new"},{include:"#lambda-expression"},{include:"#keywords"},{include:"#storage-modifiers"},{include:"#method-call"},{include:"#function-call"},{include:"#variables"},{include:"#variables-local"},{include:"#objects"},{include:"#properties"},{include:"#strings"},{include:"#all-types"},{match:/,/dgv,name:"punctuation.separator.delimiter.java"},{match:/\./dgv,name:"punctuation.separator.period.java"},{match:/;/dgv,name:"punctuation.terminator.java"}]},comments:{patterns:[{captures:{0:{name:"punctuation.definition.comment.java"}},match:/\/\*\*\//dgv,name:"comment.block.empty.java"},{include:"#comments-inline"}]},"comments-inline":{patterns:[{begin:/\/\*/dgv,captures:{0:{name:"punctuation.definition.comment.java"}},end:/\*\//dgv,name:"comment.block.java"},{begin:/(^[\t ]+)?(?=\/\/)/dgv,beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.java"}},end:new t.jM("(?!^)","dgv",{strategy:"clip_search"}),patterns:[{begin:/\/\//dgv,beginCaptures:{0:{name:"punctuation.definition.comment.java"}},end:/\n/dgv,name:"comment.line.double-slash.java"}]}]},"comments-javadoc":{patterns:[{begin:/^\p{space}*(\/\*\*)(?!\/)/dgv,beginCaptures:{1:{name:"punctuation.definition.comment.java"}},end:/\*\//dgv,endCaptures:{0:{name:"punctuation.definition.comment.java"}},name:"comment.block.javadoc.java",patterns:[{match:/@(author|deprecated|return|see|serial|since|version)\b/dgv,name:"keyword.other.documentation.javadoc.java"},{captures:{1:{name:"keyword.other.documentation.javadoc.java"},2:{name:"variable.parameter.java"}},match:/(@param)\p{space}+(\P{space}+)/dgv},{captures:{1:{name:"keyword.other.documentation.javadoc.java"},2:{name:"entity.name.type.class.java"}},match:/(@(?:exception|throws))\p{space}+(\P{space}+)/dgv},{captures:{1:{name:"keyword.other.documentation.javadoc.java"},2:{name:"entity.name.type.class.java"},3:{name:"variable.parameter.java"}},match:/\{(@link)\p{space}+(\P{space}+)?#([\$\p{L}\p{M}\p{N}\p{Pc}]+\p{space}*\([^\(\)]*\))[^\n]*?\}/dgv}]}]},"constants-and-special-vars":{patterns:[{match:/\b(true|false|null)\b/dgv,name:"constant.language.java"},{match:/\bthis\b/dgv,name:"variable.language.this.java"},{match:/\bsuper\b/dgv,name:"variable.language.java"}]},enums:{begin:/^\p{space}*([\p{L}\p{M}\p{N}\p{Pc}\p{space}]*)(enum)\p{space}+([\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,beginCaptures:{1:{patterns:[{include:"#storage-modifiers"}]},2:{name:"storage.modifier.java"},3:{name:"entity.name.type.enum.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.enum.end.bracket.curly.java"}},name:"meta.enum.java",patterns:[{begin:/\b(extends)\b/dgv,beginCaptures:{1:{name:"storage.modifier.extends.java"}},end:/(?=\{|\bimplements\b)/dgv,name:"meta.definition.class.inherited.classes.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:/\b(implements)\b/dgv,beginCaptures:{1:{name:"storage.modifier.implements.java"}},end:/(?=\{|\bextends\b)/dgv,name:"meta.definition.class.implemented.interfaces.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.enum.begin.bracket.curly.java"}},end:/(?=\})/dgv,patterns:[{begin:/(?<=\{)/dgv,end:/(?=[\;\}])/dgv,patterns:[{include:"#comments-javadoc"},{include:"#comments"},{begin:/\b([\p{L}\p{M}\p{N}\p{Pc}]+)\b/dgv,beginCaptures:{1:{name:"constant.other.enum.java"}},end:/(,)|(?=[\;\}])/dgv,endCaptures:{1:{name:"punctuation.separator.delimiter.java"}},patterns:[{include:"#comments-javadoc"},{include:"#comments"},{begin:/\(/dgv,beginCaptures:{0:{name:"punctuation.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.bracket.round.java"}},patterns:[{include:"#code"}]},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.bracket.curly.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.bracket.curly.java"}},patterns:[{include:"#class-body"}]}]}]},{include:"#class-body"}]}]},"function-call":{begin:/([\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)\p{space}*(\()/dgv,beginCaptures:{1:{name:"entity.name.function.java"},2:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.function-call.java",patterns:[{include:"#code"}]},generics:{begin:/</dgv,beginCaptures:{0:{name:"punctuation.bracket.angle.java"}},end:/>/dgv,endCaptures:{0:{name:"punctuation.bracket.angle.java"}},patterns:[{match:/\b(extends|super)\b/dgv,name:"storage.modifier.$1.java"},{captures:{1:{name:"storage.type.java"}},match:/(?<!\.)([\$A-Z_a-z][\$0-9A-Z_a-z]*)(?=\p{space}*<)/dgv},{include:"#primitive-arrays"},{match:/[\$A-Z_a-z][\$0-9A-Z_a-z]*/dgv,name:"storage.type.generic.java"},{match:/\?/dgv,name:"storage.type.generic.wildcard.java"},{match:/&/dgv,name:"punctuation.separator.types.java"},{match:/,/dgv,name:"punctuation.separator.delimiter.java"},{match:/\./dgv,name:"punctuation.separator.period.java"},{include:"#parens"},{include:"#generics"},{include:"#comments"}]},keywords:{patterns:[{match:/\bthrow\b/dgv,name:"keyword.control.throw.java"},{match:/[\:\?]/dgv,name:"keyword.control.ternary.java"},{match:/\b(return|yield|break|case|continue|default|do|while|for|switch|if|else)\b/dgv,name:"keyword.control.java"},{match:/\b(instanceof)\b/dgv,name:"keyword.operator.instanceof.java"},{match:/(<<|>>>?|[\^\~])/dgv,name:"keyword.operator.bitwise.java"},{match:/(([\&\^\|]|<<|>>>?)=)/dgv,name:"keyword.operator.assignment.bitwise.java"},{match:/(===?|!=|<=|>=|<>|[\<\>])/dgv,name:"keyword.operator.comparison.java"},{match:/([\-\%\*\+\/]=)/dgv,name:"keyword.operator.assignment.arithmetic.java"},{match:/(=)/dgv,name:"keyword.operator.assignment.java"},{match:/(--|\+\+)/dgv,name:"keyword.operator.increment-decrement.java"},{match:/([\-\%\*\+\/])/dgv,name:"keyword.operator.arithmetic.java"},{match:/(!|&&|\|\|)/dgv,name:"keyword.operator.logical.java"},{match:/([\&\|])/dgv,name:"keyword.operator.bitwise.java"},{match:/\b(const|goto)\b/dgv,name:"keyword.reserved.java"}]},"lambda-expression":{patterns:[{match:/->/dgv,name:"storage.type.function.arrow.java"}]},"member-variables":{begin:/(?=private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)/dgv,end:/(?=[\;\=])/dgv,patterns:[{include:"#storage-modifiers"},{include:"#variables"},{include:"#primitive-arrays"},{include:"#object-types"}]},"method-call":{begin:/(\.)\p{space}*([\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)\p{space}*(\()/dgv,beginCaptures:{1:{name:"punctuation.separator.period.java"},2:{name:"entity.name.function.java"},3:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.method-call.java",patterns:[{include:"#code"}]},methods:{begin:/(?!new)(?=[\<\p{L}\p{M}\p{N}\p{Pc}][^\n]*\p{space}+)(?=([^\/\=]|\/(?!\/))+\()/dgv,end:/(\})|(?=;)/dgv,endCaptures:{1:{name:"punctuation.section.method.end.bracket.curly.java"}},name:"meta.method.java",patterns:[{include:"#storage-modifiers"},{begin:/([\p{L}\p{M}\p{N}\p{Pc}]+)\p{space}*(\()/dgv,beginCaptures:{1:{name:"entity.name.function.java"},2:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.method.identifier.java",patterns:[{include:"#parameters"},{include:"#parens"},{include:"#comments"}]},{include:"#generics"},{begin:/(?=[\p{L}\p{M}\p{N}\p{Pc}][^\n]*\p{space}+[\p{L}\p{M}\p{N}\p{Pc}]+\p{space}*\()/dgv,end:/(?=\p{space}+[\p{L}\p{M}\p{N}\p{Pc}]+\p{space}*\()/dgv,name:"meta.method.return-type.java",patterns:[{include:"#all-types"},{include:"#parens"},{include:"#comments"}]},{include:"#throws"},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.method.begin.bracket.curly.java"}},contentName:"meta.method.body.java",end:/(?=\})/dgv,patterns:[{include:"#code"}]},{include:"#comments"}]},module:{begin:/((open)\p{space})?(module)\p{space}+([\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,beginCaptures:{1:{name:"storage.modifier.java"},3:{name:"storage.modifier.java"},4:{name:"entity.name.type.module.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.module.end.bracket.curly.java"}},name:"meta.module.java",patterns:[{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.module.begin.bracket.curly.java"}},contentName:"meta.module.body.java",end:/(?=\})/dgv,patterns:[{include:"#comments"},{include:"#comments-javadoc"},{match:/\b(requires|transitive|exports|opens|to|uses|provides|with)\b/dgv,name:"keyword.module.java"}]}]},numbers:{patterns:[{match:/\b(?<!\$)0([Xx])((?<!\.)\p{AHex}([_\p{AHex}]*\p{AHex})?[Ll]?(?!\.)|(\p{AHex}([_\p{AHex}]*\p{AHex})?\.?|(\p{AHex}([_\p{AHex}]*\p{AHex})?)?\.\p{AHex}([_\p{AHex}]*\p{AHex})?)[Pp][\-\+]?[0-9]([0-9_]*[0-9])?[DFdf]?)\b(?!\$)/dgv,name:"constant.numeric.hex.java"},{match:/\b(?<!\$)0([Bb])[01]([01_]*[01])?[Ll]?\b(?!\$)/dgv,name:"constant.numeric.binary.java"},{match:/\b(?<!\$)0[0-7]([0-7_]*[0-7])?[Ll]?\b(?!\$)/dgv,name:"constant.numeric.octal.java"},{match:/(?<!\$)(\b[0-9]([0-9_]*[0-9])?\.\B(?!\.)|\b[0-9]([0-9_]*[0-9])?\.([Ee][\-\+]?[0-9]([0-9_]*[0-9])?)[DFdf]?\b|\b[0-9]([0-9_]*[0-9])?\.([Ee][\-\+]?[0-9]([0-9_]*[0-9])?)?[DFdf]\b|\b[0-9]([0-9_]*[0-9])?\.([0-9]([0-9_]*[0-9])?)([Ee][\-\+]?[0-9]([0-9_]*[0-9])?)?[DFdf]?\b|(?<!\.)\B\.[0-9]([0-9_]*[0-9])?([Ee][\-\+]?[0-9]([0-9_]*[0-9])?)?[DFdf]?\b|\b[0-9]([0-9_]*[0-9])?([Ee][\-\+]?[0-9]([0-9_]*[0-9])?)[DFdf]?\b|\b[0-9]([0-9_]*[0-9])?([Ee][\-\+]?[0-9]([0-9_]*[0-9])?)?[DFdf]\b|\b(0|[1-9]([0-9_]*[0-9])?)(?!\.)[Ll]?\b)(?!\$)/dgv,name:"constant.numeric.decimal.java"}]},"object-types":{patterns:[{include:"#generics"},{begin:/\b((?:[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*\.\p{space}*)*)([A-Z_][\p{L}\p{M}\p{N}\p{Pc}]*)\p{space}*(?=\[)/dgv,beginCaptures:{1:{patterns:[{match:/[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"storage.type.java"},{match:/\./dgv,name:"punctuation.separator.period.java"}]},2:{name:"storage.type.object.array.java"}},end:/(?!\p{space}*\[)/dgv,patterns:[{include:"#comments"},{include:"#parens"}]},{captures:{1:{patterns:[{match:/[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"storage.type.java"},{match:/\./dgv,name:"punctuation.separator.period.java"}]}},match:/\b((?:[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*\.\p{space}*)*[A-Z_][\p{L}\p{M}\p{N}\p{Pc}]*)\p{space}*(?=<)/dgv},{captures:{1:{patterns:[{match:/[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*/dgv,name:"storage.type.java"},{match:/\./dgv,name:"punctuation.separator.period.java"}]}},match:/\b((?:[A-Z_a-z][\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*\.\p{space}*)*[A-Z_][\p{L}\p{M}\p{N}\p{Pc}]*)\b((?=\p{space}*[\n\$A-Z_a-z])|(?=\p{space}*\.\.\.))/dgv}]},"object-types-inherited":{patterns:[{include:"#generics"},{captures:{1:{name:"punctuation.separator.period.java"}},match:/\b(?:[A-Z][\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*(\.)\p{space}*)*[A-Z][\p{L}\p{M}\p{N}\p{Pc}]*\b/dgv,name:"entity.other.inherited-class.java"},{match:/,/dgv,name:"punctuation.separator.delimiter.java"}]},objects:{match:/(?<![\$\p{L}\p{M}\p{N}\p{Pc}])[\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*(?=\p{space}*\.\p{space}*[\$\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,name:"variable.other.object.java"},parameters:{patterns:[{match:/\bfinal\b/dgv,name:"storage.modifier.java"},{include:"#annotations"},{include:"#all-types"},{include:"#strings"},{match:/[\p{L}\p{M}\p{N}\p{Pc}]+/dgv,name:"variable.parameter.java"},{match:/,/dgv,name:"punctuation.separator.delimiter.java"},{match:/\.\.\./dgv,name:"punctuation.definition.parameters.varargs.java"}]},parens:{patterns:[{begin:/\(/dgv,beginCaptures:{0:{name:"punctuation.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.bracket.round.java"}},patterns:[{include:"#code"}]},{begin:/\[/dgv,beginCaptures:{0:{name:"punctuation.bracket.square.java"}},end:/\]/dgv,endCaptures:{0:{name:"punctuation.bracket.square.java"}},patterns:[{include:"#code"}]},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.bracket.curly.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.bracket.curly.java"}},patterns:[{include:"#code"}]}]},"primitive-arrays":{patterns:[{begin:/\b(void|boolean|byte|char|short|int|float|long|double)\b\p{space}*(?=\[)/dgv,beginCaptures:{1:{name:"storage.type.primitive.array.java"}},end:/(?!\p{space}*\[)/dgv,patterns:[{include:"#comments"},{include:"#parens"}]}]},"primitive-types":{match:/\b(void|boolean|byte|char|short|int|float|long|double)\b/dgv,name:"storage.type.primitive.java"},properties:{patterns:[{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"keyword.control.new.java"}},match:/(\.)\p{space}*(new)/dgv},{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"variable.other.object.property.java"}},match:/(\.)\p{space}*([\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)(?=\p{space}*\.\p{space}*[\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)/dgv},{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"variable.other.object.property.java"}},match:/(\.)\p{space}*([\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)/dgv},{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"invalid.illegal.identifier.java"}},match:/(\.)\p{space}*([0-9][\$\p{L}\p{M}\p{N}\p{Pc}]*)/dgv}]},record:{begin:/(?=[\p{L}\p{M}\p{N}\p{Pc}]?[\p{L}\p{M}\p{N}\p{Pc}\p{space}]*\brecord\p{space}+[\$\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.class.end.bracket.curly.java"}},name:"meta.record.java",patterns:[{include:"#storage-modifiers"},{include:"#generics"},{include:"#comments"},{begin:/(record)\p{space}+([\$\p{L}\p{M}\p{N}\p{Pc}]+)(<[\$\p{L}\p{M}\p{N}\p{Pc}]+>)?(\()/dgv,beginCaptures:{1:{name:"storage.modifier.java"},2:{name:"entity.name.type.record.java"},3:{patterns:[{include:"#generics"}]},4:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.record.identifier.java",patterns:[{include:"#code"}]},{begin:/(implements)\p{space}/dgv,beginCaptures:{1:{name:"storage.modifier.implements.java"}},end:/(?=\p{space}*\{)/dgv,name:"meta.definition.class.implemented.interfaces.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{include:"#record-body"}]},"record-body":{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.class.begin.bracket.curly.java"}},end:/(?=\})/dgv,name:"meta.record.body.java",patterns:[{include:"#record-constructor"},{include:"#class-body"}]},"record-constructor":{begin:/(?!new)(?=[\<\p{L}\p{M}\p{N}\p{Pc}][^\n]*\p{space}+)(?=([^\(\/\=]|\/(?!\/))+(?=\{))/dgv,end:/(\})|(?=;)/dgv,endCaptures:{1:{name:"punctuation.section.method.end.bracket.curly.java"}},name:"meta.method.java",patterns:[{include:"#storage-modifiers"},{begin:/([\p{L}\p{M}\p{N}\p{Pc}]+)/dgv,beginCaptures:{1:{name:"entity.name.function.java"}},end:/(?=\p{space}*\{)/dgv,name:"meta.method.identifier.java",patterns:[{include:"#comments"}]},{include:"#comments"},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.method.begin.bracket.curly.java"}},contentName:"meta.method.body.java",end:/(?=\})/dgv,patterns:[{include:"#code"}]}]},"static-initializer":{patterns:[{include:"#anonymous-block-and-instance-initializer"},{match:/static/dgv,name:"storage.modifier.java"}]},"storage-modifiers":{match:/\b(public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient|volatile|default|strictfp|sealed|non-sealed)\b/dgv,name:"storage.modifier.java"},strings:{patterns:[{begin:/"""/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.java"}},end:/"""/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.java"}},name:"string.quoted.triple.java",patterns:[{match:/(\\""")(?!")|(\\[^\n])/dgv,name:"constant.character.escape.java"}]},{begin:/"/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.java"}},end:/"/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.java"}},name:"string.quoted.double.java",patterns:[{match:/\\[^\n]/dgv,name:"constant.character.escape.java"}]},{begin:/'/dgv,beginCaptures:{0:{name:"punctuation.definition.string.begin.java"}},end:/'/dgv,endCaptures:{0:{name:"punctuation.definition.string.end.java"}},name:"string.quoted.single.java",patterns:[{match:/\\[^\n]/dgv,name:"constant.character.escape.java"}]}]},throws:{begin:/throws/dgv,beginCaptures:{0:{name:"storage.modifier.java"}},end:/(?=[\;\{])/dgv,name:"meta.throwables.java",patterns:[{match:/,/dgv,name:"punctuation.separator.delimiter.java"},{match:/[\$A-Z_a-z][\$\.0-9A-Z_a-z]*/dgv,name:"storage.type.java"},{include:"#comments"}]},"try-catch-finally":{patterns:[{begin:/\btry\b/dgv,beginCaptures:{0:{name:"keyword.control.try.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.try.end.bracket.curly.java"}},name:"meta.try.java",patterns:[{begin:/\(/dgv,beginCaptures:{0:{name:"punctuation.section.try.resources.begin.bracket.round.java"}},end:/\)/dgv,endCaptures:{0:{name:"punctuation.section.try.resources.end.bracket.round.java"}},name:"meta.try.resources.java",patterns:[{include:"#code"}]},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.try.begin.bracket.curly.java"}},contentName:"meta.try.body.java",end:/(?=\})/dgv,patterns:[{include:"#code"}]}]},{begin:/\b(catch)\b/dgv,beginCaptures:{1:{name:"keyword.control.catch.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.catch.end.bracket.curly.java"}},name:"meta.catch.java",patterns:[{include:"#comments"},{begin:/\(/dgv,beginCaptures:{0:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},contentName:"meta.catch.parameters.java",end:/\)/dgv,endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},patterns:[{include:"#comments"},{include:"#storage-modifiers"},{begin:/[\$A-Z_a-z][\$\.0-9A-Z_a-z]*/dgv,beginCaptures:{0:{name:"storage.type.java"}},end:/(\|)|(?=\))/dgv,endCaptures:{1:{name:"punctuation.catch.separator.java"}},patterns:[{include:"#comments"},{captures:{0:{name:"variable.parameter.java"}},match:/[\p{L}\p{M}\p{N}\p{Pc}]+/dgv}]}]},{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.catch.begin.bracket.curly.java"}},contentName:"meta.catch.body.java",end:/(?=\})/dgv,patterns:[{include:"#code"}]}]},{begin:/\bfinally\b/dgv,beginCaptures:{0:{name:"keyword.control.finally.java"}},end:/\}/dgv,endCaptures:{0:{name:"punctuation.section.finally.end.bracket.curly.java"}},name:"meta.finally.java",patterns:[{begin:/\{/dgv,beginCaptures:{0:{name:"punctuation.section.finally.begin.bracket.curly.java"}},contentName:"meta.finally.body.java",end:/(?=\})/dgv,patterns:[{include:"#code"}]}]}]},variables:{begin:new t.jM("(?=\\b((void|boolean|byte|char|short|int|float|long|double)|(?:(?=(([\\p{L}\\p{M}\\p{N}\\p{Pc}]+\\.)*[A-Z_]+[\\p{L}\\p{M}\\p{N}\\p{Pc}]*))\\3))\\b\\p{space}*(<[\\]\\,\\.\\<\\>\\?\\[\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}]*>)?\\p{space}*((\\[\\])*)?\\p{space}+[\\$A-Z_a-z][\\$\\p{L}\\p{M}\\p{N}\\p{Pc}]*([\\]\\$\\,\\[\\p{L}\\p{M}\\p{N}\\p{Pc}][\\]\\,\\[\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}]*)?\\p{space}*([\\:\\;\\=]))","dgv",{hiddenCaptures:[3]}),end:/(?=[\:\;\=])/dgv,name:"meta.definition.variable.java",patterns:[{captures:{1:{name:"variable.other.definition.java"}},match:/([\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)(?=\p{space}*(\[\])*\p{space}*([\,\:\;\=]))/dgv},{include:"#all-types"},{include:"#code"}]},"variables-local":{begin:/(?=\b(var)\b\p{space}+[\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*\p{space}*([\:\;\=]))/dgv,end:/(?=[\:\;\=])/dgv,name:"meta.definition.variable.local.java",patterns:[{match:/\bvar\b/dgv,name:"storage.type.local.java"},{captures:{1:{name:"variable.other.definition.java"}},match:/([\$A-Z_a-z][\$\p{L}\p{M}\p{N}\p{Pc}]*)(?=\p{space}*(\[\])*\p{space}*([\:\;\=]))/dgv},{include:"#code"}]}},scopeName:"source.java",embeddedLangs:void 0,aliases:void 0})]}}]);